{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\nconst Thumbnail = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n  }\n\n  render() {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"slot\", null));\n  }\n\n  static get style() {\n    return thumbnailCss;\n  }\n\n}, [1, \"ion-thumbnail\"]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-thumbnail\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-thumbnail\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Thumbnail);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonThumbnail = Thumbnail;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonThumbnail, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-thumbnail.js"],"names":["proxyCustomElement","HTMLElement","h","Host","b","getIonMode","thumbnailCss","Thumbnail","constructor","__registerHost","__attachShadow","render","class","style","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonThumbnail","defineCustomElement"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,CAA1C,EAA6CC,IAA7C,QAAyD,+BAAzD;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,mBAAhC;AAEA,MAAMC,YAAY,GAAG,6QAArB;AAEA,MAAMC,SAAS,GAAG,aAAcP,kBAAkB,CAAC,cAAcC,WAAd,CAA0B;AAC3EO,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAKC,cAAL;;AACA,SAAKC,cAAL;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAQT,CAAC,CAACC,IAAD,EAAO;AAAES,MAAAA,KAAK,EAAEP,UAAU,CAAC,IAAD;AAAnB,KAAP,EAAoCH,CAAC,CAAC,MAAD,EAAS,IAAT,CAArC,CAAT;AACD;;AACe,aAALW,KAAK,GAAG;AAAE,WAAOP,YAAP;AAAsB;;AATgC,CAA3B,EAU/C,CAAC,CAAD,EAAI,eAAJ,CAV+C,CAAlD;;AAWA,SAASQ,qBAAT,GAAiC;AAC/B,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACD;;AACD,QAAMC,UAAU,GAAG,CAAC,eAAD,CAAnB;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmBC,OAAO,IAAI;AAAE,YAAQA,OAAR;AAC9B,WAAK,eAAL;AACE,YAAI,CAACH,cAAc,CAACI,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;AAChCH,UAAAA,cAAc,CAACK,MAAf,CAAsBF,OAAtB,EAA+BX,SAA/B;AACD;;AACD;AAL4B;AAM7B,GANH;AAOD;;AAED,MAAMc,YAAY,GAAGd,SAArB;AACA,MAAMe,mBAAmB,GAAGR,qBAA5B;AAEA,SAASO,YAAT,EAAuBC,mBAAvB","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\n\nconst Thumbnail = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n  }\n  static get style() { return thumbnailCss; }\n}, [1, \"ion-thumbnail\"]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-thumbnail\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-thumbnail\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Thumbnail);\n      }\n      break;\n  } });\n}\n\nconst IonThumbnail = Thumbnail;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonThumbnail, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}