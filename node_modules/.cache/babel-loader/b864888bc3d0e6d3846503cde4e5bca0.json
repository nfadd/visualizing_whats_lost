{"ast":null,"code":"import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n  return '<span id=\"display-style\" className=\"display-style\">' + '<video id=\"video\" autoPlay></video>' + '<canvas id=\"canvas\" className=\"d-none\"></canvas>' + '<div id=\"video-options\" className=\"video-options\">' + '<select name=\"\" id=\"select\" className=\"custom-select\">' + '<option value=\"\">Select camera</option>' + '</select>' + '</div>' + '<img id=\"screenshot\" className=\"screenshot-image d-none\" alt=\"\" />' + '<div id=\"controls\" className=\"controls\">' + '<button id=\"screenshotButton\" className=\"btn btn-outline-success screenshot d-none\" title=\"ScreenShot\"><img src=\"https://www.pikpng.com/pngl/m/348-3481477_iphone-camera-icon-transparent-photograph-clipart.png\" /></button>' + '</div>' + '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\">×</a>' + '</span>';\n}\n\nfunction handleScreen(screen, stream) {\n  /*\n  const constraints = {\n      video: {\n          width: {\n          min: 1280,\n          ideal: 1920,\n          max: 2560,\n          },\n          height: {\n          min: 720,\n          ideal: 1080,\n          max: 1440\n          },\n      }\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  */\n  if (stream) {\n    screen.innerHTML = cameraScreen();\n    screen.style.display = \"block\";\n    camera();\n    screen.webkitRequestFullscreen();\n    const closeButton = document.getElementById(\"close-button\");\n\n    closeButton.onclick = () => {\n      handleClose();\n    };\n  }\n}\n\nfunction handleClose() {\n  const screen = document.getElementById(\"display-cover\");\n  screen.style.display = \"none\";\n}\n\nexport default handleScreen;","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/CameraScreen.js"],"names":["camera","cameraScreen","handleScreen","screen","stream","innerHTML","style","display","webkitRequestFullscreen","closeButton","document","getElementById","onclick","handleClose"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,SAASC,YAAT,GAAwB;AACpB,SACI,wDACI,qCADJ,GAEI,kDAFJ,GAII,oDAJJ,GAKI,wDALJ,GAMY,yCANZ,GAOQ,WAPR,GAQI,QARJ,GAUI,oEAVJ,GAYI,0CAZJ,GAaQ,+NAbR,GAcI,QAdJ,GAeI,+EAfJ,GAgBA,SAjBJ;AAmBH;;AAED,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,MAA9B,EAAqC;AACjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,MAAIA,MAAJ,EAAW;AACPD,IAAAA,MAAM,CAACE,SAAP,GAAmBJ,YAAY,EAA/B;AACAE,IAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AACAP,IAAAA,MAAM;AACNG,IAAAA,MAAM,CAACK,uBAAP;AAEA,UAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB;;AACAF,IAAAA,WAAW,CAACG,OAAZ,GAAsB,MAAM;AACxBC,MAAAA,WAAW;AACd,KAFD;AAGH;AACJ;;AAED,SAASA,WAAT,GAAsB;AAClB,QAAMV,MAAM,GAAGO,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAf;AACAR,EAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACH;;AAED,eAAeL,YAAf","sourcesContent":["import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n    return(\n        '<span id=\"display-style\" className=\"display-style\">' +\n            '<video id=\"video\" autoPlay></video>' +\n            '<canvas id=\"canvas\" className=\"d-none\"></canvas>' +\n            \n            '<div id=\"video-options\" className=\"video-options\">' +\n            '<select name=\"\" id=\"select\" className=\"custom-select\">' +\n                    '<option value=\"\">Select camera</option>' +\n                '</select>' +\n            '</div>' +\n            \n            '<img id=\"screenshot\" className=\"screenshot-image d-none\" alt=\"\" />' +\n            \n            '<div id=\"controls\" className=\"controls\">' +\n                '<button id=\"screenshotButton\" className=\"btn btn-outline-success screenshot d-none\" title=\"ScreenShot\"><img src=\"https://www.pikpng.com/pngl/m/348-3481477_iphone-camera-icon-transparent-photograph-clipart.png\" /></button>' +\n            '</div>' +\n            '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\">×</a>' +\n        '</span>'\n    );\n}\n\nfunction handleScreen(screen, stream){\n    /*\n    const constraints = {\n        video: {\n            width: {\n            min: 1280,\n            ideal: 1920,\n            max: 2560,\n            },\n            height: {\n            min: 720,\n            ideal: 1080,\n            max: 1440\n            },\n        }\n    };\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    */\n    if (stream){\n        screen.innerHTML = cameraScreen();\n        screen.style.display = \"block\";\n        camera();\n        screen.webkitRequestFullscreen();\n\n        const closeButton = document.getElementById(\"close-button\");\n        closeButton.onclick = () => {\n            handleClose();\n        }\n    }\n}\n\nfunction handleClose(){\n    const screen = document.getElementById(\"display-cover\");\n    screen.style.display = \"none\";\n}\n\nexport default handleScreen;"]},"metadata":{},"sourceType":"module"}