{"ast":null,"code":"import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n  return '<video id=\"video\" autoPlay></video>' + '<canvas id=\"canvas\" className=\"d-none\"></canvas>' + '<div className=\"video-options\">' + '<select name=\"\" id=\"select\" className=\"custom-select\">' + '<option value=\"\">Select camera</option>' + '</select>' + '</div>' + '<img id=\"screenshot\" className=\"screenshot-image d-none\" alt=\"\" />' + '<div id=\"controls\" className=\"controls\">' + '<button className=\"btn btn-danger play\" title=\"Play\"><i data-feather=\"play-circle\"></i></button>' + '<button className=\"btn btn-info pause d-none\" title=\"Pause\"><i data-feather=\"pause\"></i></button>' + '<button className=\"btn btn-outline-success screenshot d-none\" title=\"ScreenShot\"><i data-feather=\"image\"></i></button>' + '</div>' + '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\" onClick={() => {handleClose()}>×</a>';\n}\n\nasync function handleScreen(screen) {\n  const constraints = {\n    video: {\n      width: {\n        min: 1280,\n        ideal: 1920,\n        max: 2560\n      },\n      height: {\n        min: 720,\n        ideal: 1080,\n        max: 1440\n      }\n    }\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  screen.innerHTML = cameraScreen();\n  screen.style.display = \"block\";\n  screen.webkitRequestFullscreen();\n  camera();\n  console.log(screen);\n}\n\nfunction handleClose() {}\n\nexport default handleScreen;","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/CameraScreen.js"],"names":["camera","cameraScreen","handleScreen","screen","constraints","video","width","min","ideal","max","height","stream","navigator","mediaDevices","getUserMedia","innerHTML","style","display","webkitRequestFullscreen","console","log","handleClose"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,SAASC,YAAT,GAAwB;AACpB,SACI,wCACA,kDADA,GAGA,iCAHA,GAIG,wDAJH,GAKQ,yCALR,GAMI,WANJ,GAOA,QAPA,GASA,oEATA,GAWA,0CAXA,GAYI,kGAZJ,GAaI,mGAbJ,GAcI,wHAdJ,GAeA,QAfA,GAgBA,8GAjBJ;AAmBH;;AAED,eAAeC,YAAf,CAA4BC,MAA5B,EAAmC;AAC/B,QAAMC,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AACPC,QAAAA,GAAG,EAAE,IADE;AAEPC,QAAAA,KAAK,EAAE,IAFA;AAGPC,QAAAA,GAAG,EAAE;AAHE,OADJ;AAMHC,MAAAA,MAAM,EAAE;AACRH,QAAAA,GAAG,EAAE,GADG;AAERC,QAAAA,KAAK,EAAE,IAFC;AAGRC,QAAAA,GAAG,EAAE;AAHG;AANL;AADS,GAApB;AAeA,QAAME,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCV,WAApC,CAArB;AACAD,EAAAA,MAAM,CAACY,SAAP,GAAmBd,YAAY,EAA/B;AACAE,EAAAA,MAAM,CAACa,KAAP,CAAaC,OAAb,GAAuB,OAAvB;AACAd,EAAAA,MAAM,CAACe,uBAAP;AAEAlB,EAAAA,MAAM;AAENmB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AAEH;;AAED,SAASkB,WAAT,GAAsB,CAErB;;AAED,eAAenB,YAAf","sourcesContent":["import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n    return(\n        '<video id=\"video\" autoPlay></video>' +\n        '<canvas id=\"canvas\" className=\"d-none\"></canvas>' +\n        \n        '<div className=\"video-options\">' +\n           '<select name=\"\" id=\"select\" className=\"custom-select\">' +\n                '<option value=\"\">Select camera</option>' +\n            '</select>' +\n        '</div>' +\n        \n        '<img id=\"screenshot\" className=\"screenshot-image d-none\" alt=\"\" />' +\n        \n        '<div id=\"controls\" className=\"controls\">' + \n            '<button className=\"btn btn-danger play\" title=\"Play\"><i data-feather=\"play-circle\"></i></button>' +\n            '<button className=\"btn btn-info pause d-none\" title=\"Pause\"><i data-feather=\"pause\"></i></button>' +\n            '<button className=\"btn btn-outline-success screenshot d-none\" title=\"ScreenShot\"><i data-feather=\"image\"></i></button>' +\n        '</div>' +\n        '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\" onClick={() => {handleClose()}>×</a>'\n    );\n}\n\nasync function handleScreen(screen){\n    const constraints = {\n        video: {\n            width: {\n            min: 1280,\n            ideal: 1920,\n            max: 2560,\n            },\n            height: {\n            min: 720,\n            ideal: 1080,\n            max: 1440\n            },\n        }\n    };\n\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    screen.innerHTML = cameraScreen();\n    screen.style.display = \"block\";\n    screen.webkitRequestFullscreen();\n\n    camera();\n\n    console.log(screen);\n\n}\n\nfunction handleClose(){\n\n}\n\nexport default handleScreen;"]},"metadata":{},"sourceType":"module"}