{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { a as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index8.js';\nimport { t as transitionEndAsync, c as componentOnReady, j as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { c as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nconst getRefresherAnimationType = contentEl => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\n\nconst createBaseAnimation = pullingRefresherIcon => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  const circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.2,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  const circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.3,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    const arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.3,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `scale(0) translateY(-${height}px)`\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `translateY(-${height}px)`\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createSnapBackAnimation = pullingRefresherIcon => {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\n\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nconst translateElement = function (el, value) {\n  let duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n\n  await new Promise(resolve => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md');\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\nconst Refresher = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    this.disabled = false;\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    } else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n\n    this.nativeRefresher = false;\n  }\n\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    } else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1\n      /* Inactive */\n      ) {\n        return;\n      }\n\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8\n          /* Refreshing */\n          ) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n\n          return;\n        }\n\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          } // emit \"pulling\" on every move\n\n\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n\n\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1);\n        const shouldShowRefreshingSpinner = this.state === 8\n        /* Refreshing */\n        || pullAmount === 1;\n\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({\n              style: 'light'\n            });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        } else {\n          this.state = 2\n          /* Pulling */\n          ;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n\n\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32\n          /* Completing */\n          );\n          this.needsCompletion = false;\n        } else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8\n      /* Refreshing */\n      && this.state !== 32\n      /* Completing */\n      && this.scrollEl.scrollTop === 0,\n      onStart: ev => {\n        ev.data = {\n          animation: undefined,\n          didStart: false,\n          cancelled: false\n        };\n      },\n      onMove: ev => {\n        if (ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2\n          /* Pulling */\n          ;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n        this.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: ev => {\n        if (!ev.data.didStart) {\n          return;\n        }\n\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1\n            /* Inactive */\n            ;\n          });\n          return;\n        }\n\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n\n\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    } else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n\n  async connectedCallback() {\n    var _a;\n\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n\n    const contentEl = findClosestIonContent(this.el);\n\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n\n    this.scrollEl = await getScrollElement(contentEl);\n    /**\n     * Query the host `ion-content` directly (if it is available), to use its\n     * inner #background-content has the target. Otherwise fallback to the\n     * custom scroll target host.\n     *\n     * This makes it so that implementers do not need to re-create the background content\n     * element and styles.\n     */\n\n    const backgroundContentHost = (_a = this.el.closest('ion-content')) !== null && _a !== void 0 ? _a : contentEl;\n    this.backgroundContentEl = getElementRoot(backgroundContentHost).querySelector('#background-content');\n\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    } else {\n      this.gesture = (await import('./index2.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd()\n      });\n      this.disabledChanged();\n    }\n  }\n\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n\n\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32\n        /* Completing */\n        )));\n      }\n    } else {\n      this.close(32\n      /* Completing */\n      , '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n\n\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16\n        /* Cancelling */\n        )));\n      }\n    } else {\n      this.close(16\n      /* Cancelling */\n      , '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n\n\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n\n    if (this.state !== 1\n    /* Inactive */\n    ) {\n      return false;\n    } // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n\n\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onStart() {\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    } // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n\n\n    const ev = detail.event;\n\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    } // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n\n\n    if ((this.state & 56\n    /* _BUSY_ */\n    ) !== 0) {\n      return;\n    }\n\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n    // and have not already started dragging\n\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n\n      return;\n    }\n\n    if (this.state === 1\n    /* Inactive */\n    ) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      } // content scrolled all the way to the top, and dragging down\n\n\n      this.state = 2\n      /* Pulling */\n      ;\n    } // prevent native scroll events\n\n\n    if (ev.cancelable) {\n      ev.preventDefault();\n    } // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n\n\n    this.setCss(deltaY, '0ms', true, '');\n\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n\n    const pullMin = this.pullMin; // set pull progress\n\n    this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    } // emit \"pulling\" on every move\n\n\n    this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2\n      /* Pulling */\n      ;\n      return;\n    }\n\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    } // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n\n\n    this.state = 4\n    /* Ready */\n    ;\n    return;\n  }\n\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4\n    /* Ready */\n    ) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    } else if (this.state === 2\n    /* Pulling */\n    ) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8\n    /* Refreshing */\n    ; // place the content in a hangout position while it thinks\n\n    this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1\n      /* Inactive */\n      ;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600); // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n  }\n\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      slot: \"fixed\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1\n        /* Inactive */\n        ,\n        'refresher-pulling': this.state === 2\n        /* Pulling */\n        ,\n        'refresher-ready': this.state === 4\n        /* Ready */\n        ,\n        'refresher-refreshing': this.state === 8\n        /* Refreshing */\n        ,\n        'refresher-cancelling': this.state === 16\n        /* Cancelling */\n        ,\n        'refresher-completing': this.state === 32\n        /* Completing */\n\n      }\n    });\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: refresherIosCss,\n      md: refresherMdCss\n    };\n  }\n\n}, [32, \"ion-refresher\", {\n  \"pullMin\": [2, \"pull-min\"],\n  \"pullMax\": [2, \"pull-max\"],\n  \"closeDuration\": [1, \"close-duration\"],\n  \"snapbackDuration\": [1, \"snapback-duration\"],\n  \"pullFactor\": [2, \"pull-factor\"],\n  \"disabled\": [4],\n  \"nativeRefresher\": [32],\n  \"state\": [32],\n  \"complete\": [64],\n  \"cancel\": [64],\n  \"getProgress\": [64]\n}]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-refresher\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Refresher);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonRefresher, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-refresher.js"],"names":["writeTask","proxyCustomElement","HTMLElement","createEvent","readTask","h","Host","a","isPlatform","b","getIonMode","g","getTimeGivenProgression","findClosestIonContent","p","printIonContentErrorMsg","getScrollElement","t","transitionEndAsync","c","componentOnReady","j","clamp","getElementRoot","r","raf","hapticImpact","createAnimation","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","refresherEl","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","numTicks","pullAmount","max","forEach","el","i","min","range","start","progression","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","refreshingSpinner","webkitOverflowScrolling","refresherIosCss","refresherMdCss","Refresher","constructor","__registerHost","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","resetNativeRefresher","ani","destroy","setupiOSNativeRefresher","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","shouldShowRefreshingSpinner","beginRefresh","addEventListener","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","setupMDNativeRefresher","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setCss","componentDidUpdate","connectedCallback","_a","getAttribute","console","error","backgroundContentHost","backgroundContentEl","passive","disconnectedCallback","complete","close","cancel","getProgress","detail","event","touches","Number","isNaN","scrollHostScrollTop","cancelable","preventDefault","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","render","slot","class","watchers","ios","md","defineCustomElement$1","customElements","components","get","define","IonRefresher","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, proxyCustomElement, HTMLElement, createEvent, readTask, h, Host } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { a as findClosestIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index8.js';\nimport { t as transitionEndAsync, c as componentOnReady, j as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { c as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale'\n    ? createScaleAnimation(pullingSpinner, refresherEl)\n    : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' },\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.2, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' },\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' },\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.3, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' },\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.3, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' },\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' },\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise((resolve) => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach((ani) => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach((el) => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = this.didStart ? 30 : 0;\n        const pullAmount = (this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1));\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: (ev) => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ &&\n        this.state !== 32 /* Completing */ &&\n        this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach((ani) => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    var _a;\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = findClosestIonContent(this.el);\n    if (!contentEl) {\n      printIonContentErrorMsg(this.el);\n      return;\n    }\n    this.scrollEl = await getScrollElement(contentEl);\n    /**\n     * Query the host `ion-content` directly (if it is available), to use its\n     * inner #background-content has the target. Otherwise fallback to the\n     * custom scroll target host.\n     *\n     * This makes it so that implementers do not need to re-create the background content\n     * element and styles.\n     */\n    const backgroundContentHost = (_a = this.el.closest('ion-content')) !== null && _a !== void 0 ? _a : contentEl;\n    this.backgroundContentEl = getElementRoot(backgroundContentHost).querySelector('#background-content');\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index2.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: (ev) => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this),\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: refresherIosCss,\n    md: refresherMdCss\n  }; }\n}, [32, \"ion-refresher\", {\n    \"pullMin\": [2, \"pull-min\"],\n    \"pullMax\": [2, \"pull-max\"],\n    \"closeDuration\": [1, \"close-duration\"],\n    \"snapbackDuration\": [1, \"snapback-duration\"],\n    \"pullFactor\": [2, \"pull-factor\"],\n    \"disabled\": [4],\n    \"nativeRefresher\": [32],\n    \"state\": [32],\n    \"complete\": [64],\n    \"cancel\": [64],\n    \"getProgress\": [64]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-refresher\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Refresher);\n      }\n      break;\n  } });\n}\n\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRefresher, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}