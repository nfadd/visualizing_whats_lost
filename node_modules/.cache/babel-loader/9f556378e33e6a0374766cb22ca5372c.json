{"ast":null,"code":"function Camera() {\n  const screenshot = document.getElementById('screenshotButton');\n  const cameraOptions = document.getElementById('select');\n  const video = document.getElementById('video');\n  const canvas = document.getElementById('canvas');\n  const screenshotImage = document.getElementById('display-style');\n  const screenshotControls = document.getElementById('screenshotControls');\n  const [retake, use] = screenshotControls.querySelectorAll('button');\n  const constraints = {\n    video: {\n      width: {\n        min: 1280,\n        ideal: 1920,\n        max: 2560\n      },\n      height: {\n        min: 720,\n        ideal: 1080,\n        max: 1440\n      }\n    }\n  };\n\n  cameraOptions.onchange = () => {\n    const updatedConstraints = { ...constraints,\n      deviceId: {\n        exact: cameraOptions.value\n      }\n    };\n    startStream(updatedConstraints, video);\n  };\n\n  if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n    const updatedConstraints = { ...constraints,\n      deviceId: {\n        exact: cameraOptions.value\n      }\n    };\n    startStream(updatedConstraints, video);\n  }\n\n  const doScreenshot = () => {\n    //screenshotImage.removeChild(screenshotImage.lastChild);\n    screenshot.style.display = \"none\";\n    screenshotControls.style.display = \"block\";\n    retake.onclick = retakePhoto;\n    use.onclick = usePhoto;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    canvas.getContext('2d').drawImage(video, 0, 0);\n    var image = document.createElement('img');\n    image.id = \"screenshotImage\";\n    image.className = \"screenshotImage\";\n    image.src = canvas.toDataURL('image/jpeg');\n    screenshotImage.appendChild(image);\n  };\n\n  screenshot.onclick = doScreenshot;\n\n  const retakePhoto = () => {\n    screenshotImage.removeChild(screenshotImage.lastChild);\n    screenshotControls.style.display = \"none\";\n  };\n\n  const usePhoto = () => {\n    screenshotImage.style.display = \"none\";\n  };\n\n  const getCameraSelection = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const videoDevices = devices.filter(device => device.kind === 'videoinput');\n    const options = videoDevices.map(videoDevice => {\n      return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\n    });\n    cameraOptions.innerHTML = options.join('');\n  };\n\n  getCameraSelection();\n}\n\n_c = Camera;\n\nasync function startStream(constraints, video) {\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  handleStream(stream, video);\n}\n\nfunction handleStream(stream, video) {\n  video.srcObject = stream;\n}\n\nexport default Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/Camera.js"],"names":["Camera","screenshot","document","getElementById","cameraOptions","video","canvas","screenshotImage","screenshotControls","retake","use","querySelectorAll","constraints","width","min","ideal","max","height","onchange","updatedConstraints","deviceId","exact","value","startStream","navigator","mediaDevices","getUserMedia","doScreenshot","style","display","onclick","retakePhoto","usePhoto","videoWidth","videoHeight","getContext","drawImage","image","createElement","id","className","src","toDataURL","appendChild","removeChild","lastChild","getCameraSelection","devices","enumerateDevices","videoDevices","filter","device","kind","options","map","videoDevice","label","innerHTML","join","stream","handleStream","srcObject"],"mappings":"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","sourcesContent":["function Camera(){\n    const screenshot = document.getElementById('screenshotButton');\n    const cameraOptions = document.getElementById('select');\n    const video = document.getElementById('video');\n    const canvas = document.getElementById('canvas');\n    const screenshotImage = document.getElementById('display-style');\n    const screenshotControls = document.getElementById('screenshotControls');\n    const [retake, use] = screenshotControls.querySelectorAll('button');\n\n    const constraints = {\n        video: {\n            width: {\n            min: 1280,\n            ideal: 1920,\n            max: 2560,\n            },\n            height: {\n            min: 720,\n            ideal: 1080,\n            max: 1440\n            },\n        }\n    };\n\n    cameraOptions.onchange = () => {\n        const updatedConstraints = {\n            ...constraints,\n            deviceId: {\n            exact: cameraOptions.value\n            }\n        };\n\n        startStream(updatedConstraints, video);\n    };\n\n    if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n        const updatedConstraints = {\n        ...constraints,\n        deviceId: {\n            exact: cameraOptions.value\n        }\n        };\n        startStream(updatedConstraints, video);\n    }\n\n    const doScreenshot = () => {\n        //screenshotImage.removeChild(screenshotImage.lastChild);\n\n        screenshot.style.display = \"none\";\n        screenshotControls.style.display = \"block\";\n\n        retake.onclick = retakePhoto;\n        use.onclick = usePhoto;\n\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        canvas.getContext('2d').drawImage(video, 0, 0);\n\n        var image = document.createElement('img');\n        image.id = \"screenshotImage\";\n        image.className = \"screenshotImage\";\n        image.src = canvas.toDataURL('image/jpeg');\n        screenshotImage.appendChild(image);\n    };\n\n    screenshot.onclick = doScreenshot;\n\n    const retakePhoto = () => {\n        screenshotImage.removeChild(screenshotImage.lastChild);\n        screenshotControls.style.display = \"none\";\n    };\n\n    const usePhoto = () => {\n        screenshotImage.style.display = \"none\";\n    };\n\n    const getCameraSelection = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\n        const options = videoDevices.map(videoDevice => {\n            return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\n        });\n        cameraOptions.innerHTML = options.join('');\n    };\n\n    getCameraSelection();\n}\n\nasync function startStream(constraints, video) {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    handleStream(stream, video);\n}\n\nfunction handleStream(stream, video) {\n    video.srcObject = stream;\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}