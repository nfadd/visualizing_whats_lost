{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { m as isEndSide, i as inheritAttributes, n as assert, j as clamp } from './helpers.js';\nimport { m as menuController } from './index5.js';\nimport { j as getOverlay } from './overlays.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nconst Menu = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n\n    this.handleFocus = ev => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getOverlay(document);\n\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n\n      this.trapKeyboardFocus(ev, document);\n    };\n\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n\n    this.maxEdgeStart = 50;\n  }\n\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n\n    this.animation = undefined;\n  }\n\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n  }\n\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n\n  swipeGestureChanged() {\n    this.updateState();\n  }\n\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-menu');\n    }\n\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n\n    if (!Build.isBrowser) {\n      this.disabled = true;\n      return;\n    }\n\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n\n    this.contentEl = content; // add menu's content classes\n\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged(); // register this menu with the app's menu controller\n\n    menuController._register(this);\n\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: ev => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev)\n    });\n    this.updateState();\n  }\n\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n\n  async componentDidLoad() {\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen\n    });\n    this.updateState();\n  }\n\n  disconnectedCallback() {\n    this.blocker.destroy();\n\n    menuController._unregister(this);\n\n    if (this.animation) {\n      this.animation.destroy();\n    }\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n\n\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n\n\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n\n\n  open() {\n    let animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n\n\n  close() {\n    let animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n\n\n  toggle() {\n    let animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n\n\n  setOpen(shouldOpen) {\n    let animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n\n  focusFirstDescendant() {\n    const {\n      el\n    } = this;\n    const firstInput = el.querySelector(focusableQueryString);\n\n    if (firstInput) {\n      firstInput.focus();\n    } else {\n      el.focus();\n    }\n  }\n\n  focusLastDescendant() {\n    const {\n      el\n    } = this;\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n\n    if (lastInput) {\n      lastInput.focus();\n    } else {\n      el.focus();\n    }\n  }\n\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n\n\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    } else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      this.focusFirstDescendant();\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n\n      if (this.lastFocus === doc.activeElement) {\n        this.focusLastDescendant();\n      }\n    }\n  }\n\n  async _setOpen(shouldOpen) {\n    let animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n\n    this.width = width; // Destroy existing animation\n\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    } // Create new animation\n\n\n    this.animation = await menuController._createAnimation(this.type, this);\n\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n\n    this.animation.fill('both');\n  }\n\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation.direction(isReversed ? 'reverse' : 'normal').easing(isReversed ? easingReverse : easing).onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n\n    if (animated) {\n      await ani.play();\n    } else {\n      ani.play({\n        sync: true\n      });\n    }\n  }\n\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n\n    if (this._isOpen) {\n      return true; // TODO error\n    } else if (menuController._getOpenSync()) {\n      return false;\n    }\n\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    } // the cloned animation should not use an easing curve during seek\n\n\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen ? isEndSide ? shouldCompleteRight : shouldCompleteLeft : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n\n    this.lastOnEnd = detail.currentTime; // Account for rounding errors in JS\n\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * TODO: stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     * Not sure if the negative step value is an error or not\n     */\n\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation.easing('cubic-bezier(0.4, 0.0, 0.6, 1)').onFinish(() => this.afterAnimation(shouldOpen), {\n      oneTimeCallback: true\n    }).progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating'); // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n\n    this.el.setAttribute('tabindex', '0');\n\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n\n    this.blocker.block();\n    this.isAnimating = true;\n\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    } else {\n      this.ionWillClose.emit();\n    }\n  }\n\n  afterAnimation(isOpen) {\n    var _a;\n\n    assert(this.isAnimating, '_before() should be called while animating'); // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n\n    if (isOpen) {\n      // add css class and hide content behind menu from screen readers\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n        /**\n         * When the menu is open and overlaying the main\n         * content, the main content should not be announced\n         * by the screenreader as the menu is the main\n         * focus. This is useful with screenreaders that have\n         * \"read from top\" gestures that read the entire\n         * page from top to bottom when activated.\n         */\n\n        this.contentEl.setAttribute('aria-hidden', 'true');\n      } // emit open event\n\n\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      } // start focus trapping\n\n\n      document.addEventListener('focus', this.handleFocus, true);\n    } else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n\n      this.el.removeAttribute('tabindex');\n\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n\n      if (this.animation) {\n        this.animation.stop();\n      } // emit close event\n\n\n      this.ionDidClose.emit(); // undo focus trapping so multiple menus don't collide\n\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n\n  updateState() {\n    const isActive = this._isActive();\n\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    } // Close menu immediately\n\n\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n\n    assert(!this.isAnimating, 'can not be animating');\n  }\n\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({\n      sync: true\n    });\n    this.afterAnimation(false);\n  }\n\n  render() {\n    const {\n      isEndSide,\n      type,\n      disabled,\n      isPaneVisible,\n      inheritedAttributes\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      role: \"navigation\",\n      \"aria-label\": inheritedAttributes['aria-label'] || 'menu',\n      class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible\n      }\n    }, h(\"div\", {\n      class: \"menu-inner\",\n      part: \"container\",\n      ref: el => this.menuInnerEl = el\n    }, h(\"slot\", null)), h(\"ion-backdrop\", {\n      ref: el => this.backdropEl = el,\n      class: \"menu-backdrop\",\n      tappable: false,\n      stopPropagation: false,\n      part: \"backdrop\"\n    }));\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"type\": [\"typeChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"side\": [\"sideChanged\"],\n      \"swipeGesture\": [\"swipeGestureChanged\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: menuIosCss,\n      md: menuMdCss\n    };\n  }\n\n}, [33, \"ion-menu\", {\n  \"contentId\": [513, \"content-id\"],\n  \"menuId\": [513, \"menu-id\"],\n  \"type\": [1025],\n  \"disabled\": [1028],\n  \"side\": [513],\n  \"swipeGesture\": [4, \"swipe-gesture\"],\n  \"maxEdgeStart\": [2, \"max-edge-start\"],\n  \"isPaneVisible\": [32],\n  \"isEndSide\": [32],\n  \"isOpen\": [64],\n  \"isActive\": [64],\n  \"open\": [64],\n  \"close\": [64],\n  \"toggle\": [64],\n  \"setOpen\": [64]\n}, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"], [0, \"keydown\", \"onKeydown\"]]]);\n\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\n\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  } else {\n    return posX <= maxEdgeStart;\n  }\n};\n\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-menu\", \"ion-backdrop\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-menu\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Menu);\n        }\n\n        break;\n\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonMenu, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-menu.js"],"names":["proxyCustomElement","HTMLElement","createEvent","Build","h","Host","c","config","b","getIonMode","g","getTimeGivenProgression","G","GESTURE_CONTROLLER","m","isEndSide","i","inheritAttributes","n","assert","j","clamp","menuController","getOverlay","d","defineCustomElement$2","menuIosCss","menuMdCss","iosEasing","mdEasing","iosEasingReverse","mdEasingReverse","focusableQueryString","Menu","constructor","__registerHost","__attachShadow","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lastOnEnd","blocker","createBlocker","disableScroll","isAnimating","_isOpen","inheritedAttributes","handleFocus","ev","lastOverlay","document","contains","el","trapKeyboardFocus","isPaneVisible","disabled","side","swipeGesture","maxEdgeStart","typeChanged","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","disabledChanged","updateState","emit","open","sideChanged","swipeGestureChanged","connectedCallback","customElements","whenDefined","get","isBrowser","content","contentId","getElementById","console","error","_register","gesture","createGesture","gestureName","gesturePriority","threshold","blurOnStart","canStart","onWillStart","onStart","onMove","onEnd","componentWillLoad","componentDidLoad","disconnectedCallback","destroy","_unregister","backdropEl","onSplitPaneChanged","detail","isPane","onBackdropClick","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","onKeydown","key","isOpen","Promise","resolve","isActive","_isActive","animated","setOpen","toggle","shouldOpen","_setOpen","focusFirstDescendant","firstInput","querySelector","focus","focusLastDescendant","inputs","Array","from","querySelectorAll","lastInput","length","doc","target","lastFocus","activeElement","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","getBoolean","duration","fill","isReversed","mode","easing","easingReverse","ani","direction","onFinish","getDirection","play","sync","canSwipe","isModalPresented","_getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","currentTime","newStepValue","adjustedStepValue","playTo","oneTimeCallback","progressEnd","SHOW_MENU","setAttribute","SHOW_BACKDROP","block","_a","unblock","MENU_CONTENT_OPEN","focusedMenu","closest","addEventListener","stop","removeEventListener","enable","forceClosing","_setActiveMenu","render","role","class","part","ref","tappable","watchers","style","ios","md","Math","max","win","posX","innerWidth","defineCustomElement$1","components","forEach","tagName","define","IonMenu","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\nimport { m as isEndSide, i as inheritAttributes, n as assert, j as clamp } from './helpers.js';\nimport { m as menuController } from './index5.js';\nimport { j as getOverlay } from './overlays.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\n\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\n\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\n\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nconst Menu = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n    this.lastOnEnd = 0;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n    this.isAnimating = false;\n    this._isOpen = false;\n    this.inheritedAttributes = {};\n    this.handleFocus = (ev) => {\n      /**\n       * Overlays have their own focus trapping listener\n       * so we do not want the two listeners to conflict\n       * with each other. If the top-most overlay that is\n       * open does not contain this ion-menu, then ion-menu's\n       * focus trapping should not run.\n       */\n      const lastOverlay = getOverlay(document);\n      if (lastOverlay && !lastOverlay.contains(this.el)) {\n        return;\n      }\n      this.trapKeyboardFocus(ev, document);\n    };\n    this.isPaneVisible = false;\n    this.isEndSide = false;\n    /**\n     * If `true`, the menu is disabled.\n     */\n    this.disabled = false;\n    /**\n     * Which side of the view the menu should be placed.\n     */\n    this.side = 'start';\n    /**\n     * If `true`, swiping the menu is enabled.\n     */\n    this.swipeGesture = true;\n    /**\n     * The edge threshold for dragging the menu open.\n     * If a drag/swipe happens over this value, the menu is not triggered.\n     */\n    this.maxEdgeStart = 50;\n  }\n  typeChanged(type, oldType) {\n    const contentEl = this.contentEl;\n    if (contentEl) {\n      if (oldType !== undefined) {\n        contentEl.classList.remove(`menu-content-${oldType}`);\n      }\n      contentEl.classList.add(`menu-content-${type}`);\n      contentEl.removeAttribute('style');\n    }\n    if (this.menuInnerEl) {\n      // Remove effects of previous animations\n      this.menuInnerEl.removeAttribute('style');\n    }\n    this.animation = undefined;\n  }\n  disabledChanged() {\n    this.updateState();\n    this.ionMenuChange.emit({\n      disabled: this.disabled,\n      open: this._isOpen,\n    });\n  }\n  sideChanged() {\n    this.isEndSide = isEndSide(this.side);\n  }\n  swipeGestureChanged() {\n    this.updateState();\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-menu');\n    }\n    if (this.type === undefined) {\n      this.type = config.get('menuType', 'overlay');\n    }\n    if (!Build.isBrowser) {\n      this.disabled = true;\n      return;\n    }\n    const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\n    if (content === null) {\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\n      return;\n    }\n    if (this.el.contains(content)) {\n      console.error(`Menu: \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\n    }\n    this.contentEl = content;\n    // add menu's content classes\n    content.classList.add('menu-content');\n    this.typeChanged(this.type, undefined);\n    this.sideChanged();\n    // register this menu with the app's menu controller\n    menuController._register(this);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: document,\n      gestureName: 'menu-swipe',\n      gesturePriority: 30,\n      threshold: 10,\n      blurOnStart: true,\n      canStart: (ev) => this.canStart(ev),\n      onWillStart: () => this.onWillStart(),\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.updateState();\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  async componentDidLoad() {\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.blocker.destroy();\n    menuController._unregister(this);\n    if (this.animation) {\n      this.animation.destroy();\n    }\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.animation = undefined;\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n  }\n  onSplitPaneChanged(ev) {\n    this.isPaneVisible = ev.detail.isPane(this.el);\n    this.updateState();\n  }\n  onBackdropClick(ev) {\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n      const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\n      if (shouldClose) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.close();\n      }\n    }\n  }\n  onKeydown(ev) {\n    if (ev.key === 'Escape') {\n      this.close();\n    }\n  }\n  /**\n   * Returns `true` is the menu is open.\n   */\n  isOpen() {\n    return Promise.resolve(this._isOpen);\n  }\n  /**\n   * Returns `true` is the menu is active.\n   *\n   * A menu is active when it can be opened or closed, meaning it's enabled\n   * and it's not part of a `ion-split-pane`.\n   */\n  isActive() {\n    return Promise.resolve(this._isActive());\n  }\n  /**\n   * Opens the menu. If the menu is already open or it can't be opened,\n   * it returns `false`.\n   */\n  open(animated = true) {\n    return this.setOpen(true, animated);\n  }\n  /**\n   * Closes the menu. If the menu is already closed or it can't be closed,\n   * it returns `false`.\n   */\n  close(animated = true) {\n    return this.setOpen(false, animated);\n  }\n  /**\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  toggle(animated = true) {\n    return this.setOpen(!this._isOpen, animated);\n  }\n  /**\n   * Opens or closes the button.\n   * If the operation can't be completed successfully, it returns `false`.\n   */\n  setOpen(shouldOpen, animated = true) {\n    return menuController._setOpen(this, shouldOpen, animated);\n  }\n  focusFirstDescendant() {\n    const { el } = this;\n    const firstInput = el.querySelector(focusableQueryString);\n    if (firstInput) {\n      firstInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  focusLastDescendant() {\n    const { el } = this;\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n    if (lastInput) {\n      lastInput.focus();\n    }\n    else {\n      el.focus();\n    }\n  }\n  trapKeyboardFocus(ev, doc) {\n    const target = ev.target;\n    if (!target) {\n      return;\n    }\n    /**\n     * If the target is inside the menu contents, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (this.el.contains(target)) {\n      this.lastFocus = target;\n    }\n    else {\n      /**\n       * Otherwise, we are about to have focus go out of the menu.\n       * Wrap the focus to either the first or last element.\n       */\n      /**\n       * Once we call `focusFirstDescendant`, another focus event\n       * will fire, which will cause `lastFocus` to be updated\n       * before we can run the code after that. We cache the value\n       * here to avoid that.\n       */\n      this.focusFirstDescendant();\n      /**\n       * If the cached last focused element is the same as the now-\n       * active element, that means the user was on the first element\n       * already and pressed Shift + Tab, so we need to wrap to the\n       * last descendant.\n       */\n      if (this.lastFocus === doc.activeElement) {\n        this.focusLastDescendant();\n      }\n    }\n  }\n  async _setOpen(shouldOpen, animated = true) {\n    // If the menu is disabled or it is currently being animated, let's do nothing\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n      return false;\n    }\n    this.beforeAnimation(shouldOpen);\n    await this.loadAnimation();\n    await this.startAnimation(shouldOpen, animated);\n    this.afterAnimation(shouldOpen);\n    return true;\n  }\n  async loadAnimation() {\n    // Menu swipe animation takes the menu's inner width as parameter,\n    // If `offsetWidth` changes, we need to create a new animation.\n    const width = this.menuInnerEl.offsetWidth;\n    if (width === this.width && this.animation !== undefined) {\n      return;\n    }\n    this.width = width;\n    // Destroy existing animation\n    if (this.animation) {\n      this.animation.destroy();\n      this.animation = undefined;\n    }\n    // Create new animation\n    this.animation = await menuController._createAnimation(this.type, this);\n    if (!config.getBoolean('animated', true)) {\n      this.animation.duration(0);\n    }\n    this.animation.fill('both');\n  }\n  async startAnimation(shouldOpen, animated) {\n    const isReversed = !shouldOpen;\n    const mode = getIonMode(this);\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\n    const ani = this.animation\n      .direction(isReversed ? 'reverse' : 'normal')\n      .easing(isReversed ? easingReverse : easing)\n      .onFinish(() => {\n      if (ani.getDirection() === 'reverse') {\n        ani.direction('normal');\n      }\n    });\n    if (animated) {\n      await ani.play();\n    }\n    else {\n      ani.play({ sync: true });\n    }\n  }\n  _isActive() {\n    return !this.disabled && !this.isPaneVisible;\n  }\n  canSwipe() {\n    return this.swipeGesture && !this.isAnimating && this._isActive();\n  }\n  canStart(detail) {\n    // Do not allow swipe gesture if a modal is open\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\n    if (isModalPresented || !this.canSwipe()) {\n      return false;\n    }\n    if (this._isOpen) {\n      return true;\n      // TODO error\n    }\n    else if (menuController._getOpenSync()) {\n      return false;\n    }\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n  }\n  onWillStart() {\n    this.beforeAnimation(!this._isOpen);\n    return this.loadAnimation();\n  }\n  onStart() {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    // the cloned animation should not use an easing curve during seek\n    this.animation.progressStart(true, this._isOpen ? 1 : 0);\n  }\n  onMove(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n    const stepValue = delta / this.width;\n    this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\n  }\n  onEnd(detail) {\n    if (!this.isAnimating || !this.animation) {\n      assert(false, 'isAnimating has to be true');\n      return;\n    }\n    const isOpen = this._isOpen;\n    const isEndSide = this.isEndSide;\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n    const width = this.width;\n    const stepValue = delta / width;\n    const velocity = detail.velocityX;\n    const z = width / 2.0;\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n    const shouldComplete = isOpen\n      ? isEndSide\n        ? shouldCompleteRight\n        : shouldCompleteLeft\n      : isEndSide\n        ? shouldCompleteLeft\n        : shouldCompleteRight;\n    let shouldOpen = !isOpen && shouldComplete;\n    if (isOpen && !shouldComplete) {\n      shouldOpen = true;\n    }\n    this.lastOnEnd = detail.currentTime;\n    // Account for rounding errors in JS\n    let newStepValue = shouldComplete ? 0.001 : -0.001;\n    /**\n     * TODO: stepValue can sometimes return a negative\n     * value, but you can't have a negative time value\n     * for the cubic bezier curve (at least with web animations)\n     * Not sure if the negative step value is an error or not\n     */\n    const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\n    /**\n     * Animation will be reversed here, so need to\n     * reverse the easing curve as well\n     *\n     * Additionally, we need to account for the time relative\n     * to the new easing curve, as `stepValue` is going to be given\n     * in terms of a linear curve.\n     */\n    newStepValue +=\n      getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\n    const playTo = this._isOpen ? !shouldComplete : shouldComplete;\n    this.animation\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\n      .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\n  }\n  beforeAnimation(shouldOpen) {\n    assert(!this.isAnimating, '_before() should not be called while animating');\n    // this places the menu into the correct location before it animates in\n    // this css class doesn't actually kick off any animations\n    this.el.classList.add(SHOW_MENU);\n    /**\n     * We add a tabindex here so that focus trapping\n     * still works even if the menu does not have\n     * any focusable elements slotted inside. The\n     * focus trapping utility will fallback to focusing\n     * the menu so focus does not leave when the menu\n     * is open.\n     */\n    this.el.setAttribute('tabindex', '0');\n    if (this.backdropEl) {\n      this.backdropEl.classList.add(SHOW_BACKDROP);\n    }\n    this.blocker.block();\n    this.isAnimating = true;\n    if (shouldOpen) {\n      this.ionWillOpen.emit();\n    }\n    else {\n      this.ionWillClose.emit();\n    }\n  }\n  afterAnimation(isOpen) {\n    var _a;\n    assert(this.isAnimating, '_before() should be called while animating');\n    // keep opening/closing the menu disabled for a touch more yet\n    // only add listeners/css if it's enabled and isOpen\n    // and only remove listeners/css if it's not open\n    // emit opened/closed events\n    this._isOpen = isOpen;\n    this.isAnimating = false;\n    if (!this._isOpen) {\n      this.blocker.unblock();\n    }\n    if (isOpen) {\n      // add css class and hide content behind menu from screen readers\n      if (this.contentEl) {\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\n        /**\n         * When the menu is open and overlaying the main\n         * content, the main content should not be announced\n         * by the screenreader as the menu is the main\n         * focus. This is useful with screenreaders that have\n         * \"read from top\" gestures that read the entire\n         * page from top to bottom when activated.\n         */\n        this.contentEl.setAttribute('aria-hidden', 'true');\n      }\n      // emit open event\n      this.ionDidOpen.emit();\n      /**\n       * Move focus to the menu to prepare focus trapping, as long as\n       * it isn't already focused. Use the host element instead of the\n       * first descendant to avoid the scroll position jumping around.\n       */\n      const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\n      if (focusedMenu !== this.el) {\n        this.el.focus();\n      }\n      // start focus trapping\n      document.addEventListener('focus', this.handleFocus, true);\n    }\n    else {\n      // remove css classes and unhide content from screen readers\n      this.el.classList.remove(SHOW_MENU);\n      /**\n       * Remove tabindex from the menu component\n       * so that is cannot be tabbed to.\n       */\n      this.el.removeAttribute('tabindex');\n      if (this.contentEl) {\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n        /**\n         * Remove aria-hidden so screen readers\n         * can announce the main content again\n         * now that the menu is not the main focus.\n         */\n        this.contentEl.removeAttribute('aria-hidden');\n      }\n      if (this.backdropEl) {\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\n      }\n      if (this.animation) {\n        this.animation.stop();\n      }\n      // emit close event\n      this.ionDidClose.emit();\n      // undo focus trapping so multiple menus don't collide\n      document.removeEventListener('focus', this.handleFocus, true);\n    }\n  }\n  updateState() {\n    const isActive = this._isActive();\n    if (this.gesture) {\n      this.gesture.enable(isActive && this.swipeGesture);\n    }\n    // Close menu immediately\n    if (!isActive && this._isOpen) {\n      // close if this menu is open, and should not be enabled\n      this.forceClosing();\n    }\n    if (!this.disabled) {\n      menuController._setActiveMenu(this);\n    }\n    assert(!this.isAnimating, 'can not be animating');\n  }\n  forceClosing() {\n    assert(this._isOpen, 'menu cannot be closed');\n    this.isAnimating = true;\n    const ani = this.animation.direction('reverse');\n    ani.play({ sync: true });\n    this.afterAnimation(false);\n  }\n  render() {\n    const { isEndSide, type, disabled, isPaneVisible, inheritedAttributes } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\n        [mode]: true,\n        [`menu-type-${type}`]: true,\n        'menu-enabled': !disabled,\n        'menu-side-end': isEndSide,\n        'menu-side-start': !isEndSide,\n        'menu-pane-visible': isPaneVisible,\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"type\": [\"typeChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"side\": [\"sideChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"]\n  }; }\n  static get style() { return {\n    ios: menuIosCss,\n    md: menuMdCss\n  }; }\n}, [33, \"ion-menu\", {\n    \"contentId\": [513, \"content-id\"],\n    \"menuId\": [513, \"menu-id\"],\n    \"type\": [1025],\n    \"disabled\": [1028],\n    \"side\": [513],\n    \"swipeGesture\": [4, \"swipe-gesture\"],\n    \"maxEdgeStart\": [2, \"max-edge-start\"],\n    \"isPaneVisible\": [32],\n    \"isEndSide\": [32],\n    \"isOpen\": [64],\n    \"isActive\": [64],\n    \"open\": [64],\n    \"close\": [64],\n    \"toggle\": [64],\n    \"setOpen\": [64]\n  }, [[16, \"ionSplitPaneVisible\", \"onSplitPaneChanged\"], [2, \"click\", \"onBackdropClick\"], [0, \"keydown\", \"onKeydown\"]]]);\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n  if (isEndSide) {\n    return posX >= win.innerWidth - maxEdgeStart;\n  }\n  else {\n    return posX <= maxEdgeStart;\n  }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-menu\", \"ion-backdrop\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-menu\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Menu);\n      }\n      break;\n    case \"ion-backdrop\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonMenu = Menu;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonMenu, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}