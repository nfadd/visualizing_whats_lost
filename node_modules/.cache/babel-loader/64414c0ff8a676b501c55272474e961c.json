{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, {\n          skipIfBusy: true,\n          animationBuilder: routerAnimation\n        });\n      }\n    } else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, {\n          skipIfBusy: true,\n          animationBuilder: routerAnimation\n        });\n      }\n    } else if (routerDirection === 'back') {\n      return nav.pop({\n        skipIfBusy: true,\n        animationBuilder: routerAnimation\n      });\n    }\n  }\n\n  return Promise.resolve(false);\n};\n\nconst NavLink = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n    /**\n     * The transition direction when navigating to another page.\n     */\n\n\n    this.routerDirection = 'forward';\n\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n\n  render() {\n    return h(Host, {\n      onClick: this.onClick\n    });\n  }\n\n  get el() {\n    return this;\n  }\n\n}, [0, \"ion-nav-link\", {\n  \"component\": [1],\n  \"componentProps\": [16],\n  \"routerDirection\": [1, \"router-direction\"],\n  \"routerAnimation\": [16]\n}]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-nav-link\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-nav-link\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, NavLink);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonNavLink = NavLink;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonNavLink, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-nav-link.js"],"names":["proxyCustomElement","HTMLElement","h","Host","navLink","el","routerDirection","component","componentProps","routerAnimation","nav","closest","undefined","push","skipIfBusy","animationBuilder","setRoot","pop","Promise","resolve","NavLink","constructor","__registerHost","onClick","render","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonNavLink","defineCustomElement"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,CAA1C,EAA6CC,IAA7C,QAAyD,+BAAzD;;AAEA,MAAMC,OAAO,GAAG,CAACC,EAAD,EAAKC,eAAL,EAAsBC,SAAtB,EAAiCC,cAAjC,EAAiDC,eAAjD,KAAqE;AACnF,QAAMC,GAAG,GAAGL,EAAE,CAACM,OAAH,CAAW,SAAX,CAAZ;;AACA,MAAID,GAAJ,EAAS;AACP,QAAIJ,eAAe,KAAK,SAAxB,EAAmC;AACjC,UAAIC,SAAS,KAAKK,SAAlB,EAA6B;AAC3B,eAAOF,GAAG,CAACG,IAAJ,CAASN,SAAT,EAAoBC,cAApB,EAAoC;AAAEM,UAAAA,UAAU,EAAE,IAAd;AAAoBC,UAAAA,gBAAgB,EAAEN;AAAtC,SAApC,CAAP;AACD;AACF,KAJD,MAKK,IAAIH,eAAe,KAAK,MAAxB,EAAgC;AACnC,UAAIC,SAAS,KAAKK,SAAlB,EAA6B;AAC3B,eAAOF,GAAG,CAACM,OAAJ,CAAYT,SAAZ,EAAuBC,cAAvB,EAAuC;AAAEM,UAAAA,UAAU,EAAE,IAAd;AAAoBC,UAAAA,gBAAgB,EAAEN;AAAtC,SAAvC,CAAP;AACD;AACF,KAJI,MAKA,IAAIH,eAAe,KAAK,MAAxB,EAAgC;AACnC,aAAOI,GAAG,CAACO,GAAJ,CAAQ;AAAEH,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,gBAAgB,EAAEN;AAAtC,OAAR,CAAP;AACD;AACF;;AACD,SAAOS,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;AACD,CAlBD;;AAoBA,MAAMC,OAAO,GAAG,aAAcpB,kBAAkB,CAAC,cAAcC,WAAd,CAA0B;AACzEoB,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAKC,cAAL;AACA;AACJ;AACA;;;AACI,SAAKhB,eAAL,GAAuB,SAAvB;;AACA,SAAKiB,OAAL,GAAe,MAAM;AACnB,aAAOnB,OAAO,CAAC,KAAKC,EAAN,EAAU,KAAKC,eAAf,EAAgC,KAAKC,SAArC,EAAgD,KAAKC,cAArD,EAAqE,KAAKC,eAA1E,CAAd;AACD,KAFD;AAGD;;AACDe,EAAAA,MAAM,GAAG;AACP,WAAOtB,CAAC,CAACC,IAAD,EAAO;AAAEoB,MAAAA,OAAO,EAAE,KAAKA;AAAhB,KAAP,CAAR;AACD;;AACK,MAAFlB,EAAE,GAAG;AAAE,WAAO,IAAP;AAAc;;AAfgD,CAA3B,EAgB7C,CAAC,CAAD,EAAI,cAAJ,EAAoB;AACnB,eAAa,CAAC,CAAD,CADM;AAEnB,oBAAkB,CAAC,EAAD,CAFC;AAGnB,qBAAmB,CAAC,CAAD,EAAI,kBAAJ,CAHA;AAInB,qBAAmB,CAAC,EAAD;AAJA,CAApB,CAhB6C,CAAhD;;AAsBA,SAASoB,qBAAT,GAAiC;AAC/B,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACD;;AACD,QAAMC,UAAU,GAAG,CAAC,cAAD,CAAnB;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmBC,OAAO,IAAI;AAAE,YAAQA,OAAR;AAC9B,WAAK,cAAL;AACE,YAAI,CAACH,cAAc,CAACI,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;AAChCH,UAAAA,cAAc,CAACK,MAAf,CAAsBF,OAAtB,EAA+BT,OAA/B;AACD;;AACD;AAL4B;AAM7B,GANH;AAOD;;AAED,MAAMY,UAAU,GAAGZ,OAAnB;AACA,MAAMa,mBAAmB,GAAGR,qBAA5B;AAEA,SAASO,UAAT,EAAqBC,mBAArB","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\n\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\n  const nav = el.closest('ion-nav');\n  if (nav) {\n    if (routerDirection === 'forward') {\n      if (component !== undefined) {\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'root') {\n      if (component !== undefined) {\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\n      }\n    }\n    else if (routerDirection === 'back') {\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\n    }\n  }\n  return Promise.resolve(false);\n};\n\nconst NavLink = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    /**\n     * The transition direction when navigating to another page.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = () => {\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\n    };\n  }\n  render() {\n    return h(Host, { onClick: this.onClick });\n  }\n  get el() { return this; }\n}, [0, \"ion-nav-link\", {\n    \"component\": [1],\n    \"componentProps\": [16],\n    \"routerDirection\": [1, \"router-direction\"],\n    \"routerAnimation\": [16]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-nav-link\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-nav-link\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, NavLink);\n      }\n      break;\n  } });\n}\n\nconst IonNavLink = NavLink;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonNavLink, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}