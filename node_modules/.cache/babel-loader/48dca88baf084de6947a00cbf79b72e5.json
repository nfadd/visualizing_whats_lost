{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as isEndSide } from './helpers.js';\nconst itemSlidingCss = \"ion-item-sliding{display:block;position:relative;width:100%;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-item-sliding .item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.item-sliding-active-slide .item{position:relative;-webkit-transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1), -webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);opacity:1;z-index:2;pointer-events:none;will-change:transform}.item-sliding-active-swipe-end .item-options-end .item-option-expandable{padding-left:100%;-ms-flex-order:1;order:1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-left;transition-property:padding-left}[dir=rtl] .item-sliding-active-swipe-end .item-options-end .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-end .item-options-end .item-option-expandable{-ms-flex-order:-1;order:-1}.item-sliding-active-swipe-start .item-options-start .item-option-expandable{padding-right:100%;-ms-flex-order:-1;order:-1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-right;transition-property:padding-right}[dir=rtl] .item-sliding-active-swipe-start .item-options-start .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-start .item-options-start .item-option-expandable{-ms-flex-order:1;order:1}\";\nconst SWIPE_MARGIN = 30;\nconst ELASTIC_FACTOR = 0.55;\nlet openSlidingItem;\nconst ItemSliding = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.ionDrag = createEvent(this, \"ionDrag\", 7);\n    this.item = null;\n    this.openAmount = 0;\n    this.initialOpenAmount = 0;\n    this.optsWidthRightSide = 0;\n    this.optsWidthLeftSide = 0;\n    this.sides = 0\n    /* None */\n    ;\n    this.optsDirty = true;\n    this.closestContent = null;\n    this.initialContentScrollY = true;\n    this.state = 2\n    /* Disabled */\n    ;\n    /**\n     * If `true`, the user cannot interact with the sliding item.\n     */\n\n    this.disabled = false;\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  async connectedCallback() {\n    this.item = this.el.querySelector('ion-item');\n    this.closestContent = this.el.closest('ion-content');\n    await this.updateOptions();\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'item-swipe',\n      gesturePriority: 100,\n      threshold: 5,\n      canStart: ev => this.canStart(ev),\n      onStart: () => this.onStart(),\n      onMove: ev => this.onMove(ev),\n      onEnd: ev => this.onEnd(ev)\n    });\n    this.disabledChanged();\n  }\n\n  disconnectedCallback() {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n\n    this.item = null;\n    this.leftOptions = this.rightOptions = undefined;\n\n    if (openSlidingItem === this.el) {\n      openSlidingItem = undefined;\n    }\n  }\n  /**\n   * Get the amount the item is open in pixels.\n   */\n\n\n  getOpenAmount() {\n    return Promise.resolve(this.openAmount);\n  }\n  /**\n   * Get the ratio of the open amount of the item compared to the width of the options.\n   * If the number returned is positive, then the options on the right side are open.\n   * If the number returned is negative, then the options on the left side are open.\n   * If the absolute value of the number is greater than 1, the item is open more than\n   * the width of the options.\n   */\n\n\n  getSlidingRatio() {\n    return Promise.resolve(this.getSlidingRatioSync());\n  }\n  /**\n   * Open the sliding item.\n   *\n   * @param side The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\n   */\n\n\n  async open(side) {\n    if (this.item === null) {\n      return;\n    }\n\n    const optionsToOpen = this.getOptions(side);\n\n    if (!optionsToOpen) {\n      return;\n    }\n    /**\n     * If side is not set, we need to infer the side\n     * so we know which direction to move the options\n     */\n\n\n    if (side === undefined) {\n      side = optionsToOpen === this.leftOptions ? 'start' : 'end';\n    } // In RTL we want to switch the sides\n\n\n    side = isEndSide(side) ? 'end' : 'start';\n    const isStartOpen = this.openAmount < 0;\n    const isEndOpen = this.openAmount > 0;\n    /**\n     * If a side is open and a user tries to\n     * re-open the same side, we should not do anything\n     */\n\n    if (isStartOpen && optionsToOpen === this.leftOptions) {\n      return;\n    }\n\n    if (isEndOpen && optionsToOpen === this.rightOptions) {\n      return;\n    }\n\n    this.closeOpened();\n    this.state = 4\n    /* Enabled */\n    ;\n    requestAnimationFrame(() => {\n      this.calculateOptsWidth();\n      const width = side === 'end' ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n      openSlidingItem = this.el;\n      this.setOpenAmount(width, false);\n      this.state = side === 'end' ? 8\n      /* End */\n      : 16\n      /* Start */\n      ;\n    });\n  }\n  /**\n   * Close the sliding item. Items can also be closed from the [List](./list).\n   */\n\n\n  async close() {\n    this.setOpenAmount(0, true);\n  }\n  /**\n   * Close all of the sliding items in the list. Items can also be closed from the [List](./list).\n   */\n\n\n  async closeOpened() {\n    if (openSlidingItem !== undefined) {\n      openSlidingItem.close();\n      openSlidingItem = undefined;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Given an optional side, return the ion-item-options element.\n   *\n   * @param side This side of the options to get. If a side is not provided it will\n   * return the first one available.\n   */\n\n\n  getOptions(side) {\n    if (side === undefined) {\n      return this.leftOptions || this.rightOptions;\n    } else if (side === 'start') {\n      return this.leftOptions;\n    } else {\n      return this.rightOptions;\n    }\n  }\n\n  async updateOptions() {\n    const options = this.el.querySelectorAll('ion-item-options');\n    let sides = 0; // Reset left and right options in case they were removed\n\n    this.leftOptions = this.rightOptions = undefined;\n\n    for (let i = 0; i < options.length; i++) {\n      const item = options.item(i);\n      /**\n       * We cannot use the componentOnReady helper\n       * util here since we need to wait for all of these items\n       * to be ready before we set `this.sides` and `this.optsDirty`.\n       */\n\n      const option = item.componentOnReady !== undefined ? await item.componentOnReady() : item;\n      const side = isEndSide(option.side) ? 'end' : 'start';\n\n      if (side === 'start') {\n        this.leftOptions = option;\n        sides |= 1\n        /* Start */\n        ;\n      } else {\n        this.rightOptions = option;\n        sides |= 2\n        /* End */\n        ;\n      }\n    }\n\n    this.optsDirty = true;\n    this.sides = sides;\n  }\n\n  canStart(gesture) {\n    /**\n     * If very close to start of the screen\n     * do not open left side so swipe to go\n     * back will still work.\n     */\n    const rtl = document.dir === 'rtl';\n    const atEdge = rtl ? window.innerWidth - gesture.startX < 15 : gesture.startX < 15;\n\n    if (atEdge) {\n      return false;\n    }\n\n    const selected = openSlidingItem;\n\n    if (selected && selected !== this.el) {\n      this.closeOpened();\n    }\n\n    return !!(this.rightOptions || this.leftOptions);\n  }\n\n  disableContentScrollY() {\n    if (this.closestContent === null) {\n      return;\n    }\n\n    this.initialContentScrollY = this.closestContent.scrollY;\n    this.closestContent.scrollY = false;\n  }\n\n  restoreContentScrollY() {\n    if (this.closestContent === null) {\n      return;\n    }\n\n    this.closestContent.scrollY = this.initialContentScrollY;\n  }\n\n  onStart() {\n    /**\n     * We need to query for the ion-item\n     * every time the gesture starts. Developers\n     * may toggle ion-item elements via *ngIf.\n     */\n    this.item = this.el.querySelector('ion-item'); // Prevent scrolling during gesture\n\n    this.disableContentScrollY();\n    openSlidingItem = this.el;\n\n    if (this.tmr !== undefined) {\n      clearTimeout(this.tmr);\n      this.tmr = undefined;\n    }\n\n    if (this.openAmount === 0) {\n      this.optsDirty = true;\n      this.state = 4\n      /* Enabled */\n      ;\n    }\n\n    this.initialOpenAmount = this.openAmount;\n\n    if (this.item) {\n      this.item.style.transition = 'none';\n    }\n  }\n\n  onMove(gesture) {\n    if (this.optsDirty) {\n      this.calculateOptsWidth();\n    }\n\n    let openAmount = this.initialOpenAmount - gesture.deltaX;\n\n    switch (this.sides) {\n      case 2\n      /* End */\n      :\n        openAmount = Math.max(0, openAmount);\n        break;\n\n      case 1\n      /* Start */\n      :\n        openAmount = Math.min(0, openAmount);\n        break;\n\n      case 3\n      /* Both */\n      :\n        break;\n\n      case 0\n      /* None */\n      :\n        return;\n\n      default:\n        console.warn('invalid ItemSideFlags value', this.sides);\n        break;\n    }\n\n    let optsWidth;\n\n    if (openAmount > this.optsWidthRightSide) {\n      optsWidth = this.optsWidthRightSide;\n      openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n    } else if (openAmount < -this.optsWidthLeftSide) {\n      optsWidth = -this.optsWidthLeftSide;\n      openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n    }\n\n    this.setOpenAmount(openAmount, false);\n  }\n\n  onEnd(gesture) {\n    // Restore ion-content scrollY to initial value when gesture ends\n    this.restoreContentScrollY();\n    const velocity = gesture.velocityX;\n    let restingPoint = this.openAmount > 0 ? this.optsWidthRightSide : -this.optsWidthLeftSide; // Check if the drag didn't clear the buttons mid-point\n    // and we aren't moving fast enough to swipe open\n\n    const isResetDirection = this.openAmount > 0 === !(velocity < 0);\n    const isMovingFast = Math.abs(velocity) > 0.3;\n    const isOnCloseZone = Math.abs(this.openAmount) < Math.abs(restingPoint / 2);\n\n    if (swipeShouldReset(isResetDirection, isMovingFast, isOnCloseZone)) {\n      restingPoint = 0;\n    }\n\n    const state = this.state;\n    this.setOpenAmount(restingPoint, true);\n\n    if ((state & 32\n    /* SwipeEnd */\n    ) !== 0 && this.rightOptions) {\n      this.rightOptions.fireSwipeEvent();\n    } else if ((state & 64\n    /* SwipeStart */\n    ) !== 0 && this.leftOptions) {\n      this.leftOptions.fireSwipeEvent();\n    }\n  }\n\n  calculateOptsWidth() {\n    this.optsWidthRightSide = 0;\n\n    if (this.rightOptions) {\n      this.rightOptions.style.display = 'flex';\n      this.optsWidthRightSide = this.rightOptions.offsetWidth;\n      this.rightOptions.style.display = '';\n    }\n\n    this.optsWidthLeftSide = 0;\n\n    if (this.leftOptions) {\n      this.leftOptions.style.display = 'flex';\n      this.optsWidthLeftSide = this.leftOptions.offsetWidth;\n      this.leftOptions.style.display = '';\n    }\n\n    this.optsDirty = false;\n  }\n\n  setOpenAmount(openAmount, isFinal) {\n    if (this.tmr !== undefined) {\n      clearTimeout(this.tmr);\n      this.tmr = undefined;\n    }\n\n    if (!this.item) {\n      return;\n    }\n\n    const style = this.item.style;\n    this.openAmount = openAmount;\n\n    if (isFinal) {\n      style.transition = '';\n    }\n\n    if (openAmount > 0) {\n      this.state = openAmount >= this.optsWidthRightSide + SWIPE_MARGIN ? 8\n      /* End */\n      | 32\n      /* SwipeEnd */\n      : 8\n      /* End */\n      ;\n    } else if (openAmount < 0) {\n      this.state = openAmount <= -this.optsWidthLeftSide - SWIPE_MARGIN ? 16\n      /* Start */\n      | 64\n      /* SwipeStart */\n      : 16\n      /* Start */\n      ;\n    } else {\n      /**\n       * Item sliding cannot be interrupted\n       * while closing the item. If it did,\n       * it would allow the item to get into an\n       * inconsistent state where multiple\n       * items are then open at the same time.\n       */\n      if (this.gesture) {\n        this.gesture.enable(false);\n      }\n\n      this.tmr = setTimeout(() => {\n        this.state = 2\n        /* Disabled */\n        ;\n        this.tmr = undefined;\n\n        if (this.gesture) {\n          this.gesture.enable(!this.disabled);\n        }\n      }, 600);\n      openSlidingItem = undefined;\n      style.transform = '';\n      return;\n    }\n\n    style.transform = `translate3d(${-openAmount}px,0,0)`;\n    this.ionDrag.emit({\n      amount: openAmount,\n      ratio: this.getSlidingRatioSync()\n    });\n  }\n\n  getSlidingRatioSync() {\n    if (this.openAmount > 0) {\n      return this.openAmount / this.optsWidthRightSide;\n    } else if (this.openAmount < 0) {\n      return this.openAmount / this.optsWidthLeftSide;\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'item-sliding-active-slide': this.state !== 2\n        /* Disabled */\n        ,\n        'item-sliding-active-options-end': (this.state & 8\n        /* End */\n        ) !== 0,\n        'item-sliding-active-options-start': (this.state & 16\n        /* Start */\n        ) !== 0,\n        'item-sliding-active-swipe-end': (this.state & 32\n        /* SwipeEnd */\n        ) !== 0,\n        'item-sliding-active-swipe-start': (this.state & 64\n        /* SwipeStart */\n        ) !== 0\n      }\n    });\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return itemSlidingCss;\n  }\n\n}, [0, \"ion-item-sliding\", {\n  \"disabled\": [4],\n  \"state\": [32],\n  \"getOpenAmount\": [64],\n  \"getSlidingRatio\": [64],\n  \"open\": [64],\n  \"close\": [64],\n  \"closeOpened\": [64]\n}]);\n\nconst swipeShouldReset = (isResetDirection, isMovingFast, isOnResetZone) => {\n  // The logic required to know when the sliding item should close (openAmount=0)\n  // depends on three booleans (isResetDirection, isMovingFast, isOnResetZone)\n  // and it ended up being too complicated to be written manually without errors\n  // so the truth table is attached below: (0=false, 1=true)\n  // isResetDirection | isMovingFast | isOnResetZone || shouldClose\n  //         0        |       0      |       0       ||    0\n  //         0        |       0      |       1       ||    1\n  //         0        |       1      |       0       ||    0\n  //         0        |       1      |       1       ||    0\n  //         1        |       0      |       0       ||    0\n  //         1        |       0      |       1       ||    1\n  //         1        |       1      |       0       ||    1\n  //         1        |       1      |       1       ||    1\n  // The resulting expression was generated by resolving the K-map (Karnaugh map):\n  return !isMovingFast && isOnResetZone || isResetDirection && isMovingFast;\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-item-sliding\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-item-sliding\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ItemSliding);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonItemSliding = ItemSliding;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonItemSliding, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-item-sliding.js"],"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","m","isEndSide","itemSlidingCss","SWIPE_MARGIN","ELASTIC_FACTOR","openSlidingItem","ItemSliding","constructor","__registerHost","ionDrag","item","openAmount","initialOpenAmount","optsWidthRightSide","optsWidthLeftSide","sides","optsDirty","closestContent","initialContentScrollY","state","disabled","disabledChanged","gesture","enable","connectedCallback","el","querySelector","closest","updateOptions","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","leftOptions","rightOptions","getOpenAmount","Promise","resolve","getSlidingRatio","getSlidingRatioSync","open","side","optionsToOpen","getOptions","isStartOpen","isEndOpen","closeOpened","requestAnimationFrame","calculateOptsWidth","width","setOpenAmount","close","options","querySelectorAll","i","length","option","componentOnReady","rtl","document","dir","atEdge","window","innerWidth","startX","selected","disableContentScrollY","scrollY","restoreContentScrollY","tmr","clearTimeout","style","transition","deltaX","Math","max","min","console","warn","optsWidth","velocity","velocityX","restingPoint","isResetDirection","isMovingFast","abs","isOnCloseZone","swipeShouldReset","fireSwipeEvent","display","offsetWidth","isFinal","setTimeout","transform","emit","amount","ratio","render","mode","class","watchers","isOnResetZone","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonItemSliding","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { m as isEndSide } from './helpers.js';\n\nconst itemSlidingCss = \"ion-item-sliding{display:block;position:relative;width:100%;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-item-sliding .item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.item-sliding-active-slide .item{position:relative;-webkit-transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:-webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);transition:transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1), -webkit-transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);opacity:1;z-index:2;pointer-events:none;will-change:transform}.item-sliding-active-swipe-end .item-options-end .item-option-expandable{padding-left:100%;-ms-flex-order:1;order:1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-left;transition-property:padding-left}[dir=rtl] .item-sliding-active-swipe-end .item-options-end .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-end .item-options-end .item-option-expandable{-ms-flex-order:-1;order:-1}.item-sliding-active-swipe-start .item-options-start .item-option-expandable{padding-right:100%;-ms-flex-order:-1;order:-1;-webkit-transition-duration:0.6s;transition-duration:0.6s;-webkit-transition-property:padding-right;transition-property:padding-right}[dir=rtl] .item-sliding-active-swipe-start .item-options-start .item-option-expandable,:host-context([dir=rtl]) .item-sliding-active-swipe-start .item-options-start .item-option-expandable{-ms-flex-order:1;order:1}\";\n\nconst SWIPE_MARGIN = 30;\nconst ELASTIC_FACTOR = 0.55;\nlet openSlidingItem;\nconst ItemSliding = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionDrag = createEvent(this, \"ionDrag\", 7);\n    this.item = null;\n    this.openAmount = 0;\n    this.initialOpenAmount = 0;\n    this.optsWidthRightSide = 0;\n    this.optsWidthLeftSide = 0;\n    this.sides = 0 /* None */;\n    this.optsDirty = true;\n    this.closestContent = null;\n    this.initialContentScrollY = true;\n    this.state = 2 /* Disabled */;\n    /**\n     * If `true`, the user cannot interact with the sliding item.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    this.item = this.el.querySelector('ion-item');\n    this.closestContent = this.el.closest('ion-content');\n    await this.updateOptions();\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'item-swipe',\n      gesturePriority: 100,\n      threshold: 5,\n      canStart: (ev) => this.canStart(ev),\n      onStart: () => this.onStart(),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n    this.item = null;\n    this.leftOptions = this.rightOptions = undefined;\n    if (openSlidingItem === this.el) {\n      openSlidingItem = undefined;\n    }\n  }\n  /**\n   * Get the amount the item is open in pixels.\n   */\n  getOpenAmount() {\n    return Promise.resolve(this.openAmount);\n  }\n  /**\n   * Get the ratio of the open amount of the item compared to the width of the options.\n   * If the number returned is positive, then the options on the right side are open.\n   * If the number returned is negative, then the options on the left side are open.\n   * If the absolute value of the number is greater than 1, the item is open more than\n   * the width of the options.\n   */\n  getSlidingRatio() {\n    return Promise.resolve(this.getSlidingRatioSync());\n  }\n  /**\n   * Open the sliding item.\n   *\n   * @param side The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\n   */\n  async open(side) {\n    if (this.item === null) {\n      return;\n    }\n    const optionsToOpen = this.getOptions(side);\n    if (!optionsToOpen) {\n      return;\n    }\n    /**\n     * If side is not set, we need to infer the side\n     * so we know which direction to move the options\n     */\n    if (side === undefined) {\n      side = optionsToOpen === this.leftOptions ? 'start' : 'end';\n    }\n    // In RTL we want to switch the sides\n    side = isEndSide(side) ? 'end' : 'start';\n    const isStartOpen = this.openAmount < 0;\n    const isEndOpen = this.openAmount > 0;\n    /**\n     * If a side is open and a user tries to\n     * re-open the same side, we should not do anything\n     */\n    if (isStartOpen && optionsToOpen === this.leftOptions) {\n      return;\n    }\n    if (isEndOpen && optionsToOpen === this.rightOptions) {\n      return;\n    }\n    this.closeOpened();\n    this.state = 4 /* Enabled */;\n    requestAnimationFrame(() => {\n      this.calculateOptsWidth();\n      const width = side === 'end' ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n      openSlidingItem = this.el;\n      this.setOpenAmount(width, false);\n      this.state = side === 'end' ? 8 /* End */ : 16 /* Start */;\n    });\n  }\n  /**\n   * Close the sliding item. Items can also be closed from the [List](./list).\n   */\n  async close() {\n    this.setOpenAmount(0, true);\n  }\n  /**\n   * Close all of the sliding items in the list. Items can also be closed from the [List](./list).\n   */\n  async closeOpened() {\n    if (openSlidingItem !== undefined) {\n      openSlidingItem.close();\n      openSlidingItem = undefined;\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Given an optional side, return the ion-item-options element.\n   *\n   * @param side This side of the options to get. If a side is not provided it will\n   * return the first one available.\n   */\n  getOptions(side) {\n    if (side === undefined) {\n      return this.leftOptions || this.rightOptions;\n    }\n    else if (side === 'start') {\n      return this.leftOptions;\n    }\n    else {\n      return this.rightOptions;\n    }\n  }\n  async updateOptions() {\n    const options = this.el.querySelectorAll('ion-item-options');\n    let sides = 0;\n    // Reset left and right options in case they were removed\n    this.leftOptions = this.rightOptions = undefined;\n    for (let i = 0; i < options.length; i++) {\n      const item = options.item(i);\n      /**\n       * We cannot use the componentOnReady helper\n       * util here since we need to wait for all of these items\n       * to be ready before we set `this.sides` and `this.optsDirty`.\n       */\n      const option = item.componentOnReady !== undefined ? await item.componentOnReady() : item;\n      const side = isEndSide(option.side) ? 'end' : 'start';\n      if (side === 'start') {\n        this.leftOptions = option;\n        sides |= 1 /* Start */;\n      }\n      else {\n        this.rightOptions = option;\n        sides |= 2 /* End */;\n      }\n    }\n    this.optsDirty = true;\n    this.sides = sides;\n  }\n  canStart(gesture) {\n    /**\n     * If very close to start of the screen\n     * do not open left side so swipe to go\n     * back will still work.\n     */\n    const rtl = document.dir === 'rtl';\n    const atEdge = rtl ? window.innerWidth - gesture.startX < 15 : gesture.startX < 15;\n    if (atEdge) {\n      return false;\n    }\n    const selected = openSlidingItem;\n    if (selected && selected !== this.el) {\n      this.closeOpened();\n    }\n    return !!(this.rightOptions || this.leftOptions);\n  }\n  disableContentScrollY() {\n    if (this.closestContent === null) {\n      return;\n    }\n    this.initialContentScrollY = this.closestContent.scrollY;\n    this.closestContent.scrollY = false;\n  }\n  restoreContentScrollY() {\n    if (this.closestContent === null) {\n      return;\n    }\n    this.closestContent.scrollY = this.initialContentScrollY;\n  }\n  onStart() {\n    /**\n     * We need to query for the ion-item\n     * every time the gesture starts. Developers\n     * may toggle ion-item elements via *ngIf.\n     */\n    this.item = this.el.querySelector('ion-item');\n    // Prevent scrolling during gesture\n    this.disableContentScrollY();\n    openSlidingItem = this.el;\n    if (this.tmr !== undefined) {\n      clearTimeout(this.tmr);\n      this.tmr = undefined;\n    }\n    if (this.openAmount === 0) {\n      this.optsDirty = true;\n      this.state = 4 /* Enabled */;\n    }\n    this.initialOpenAmount = this.openAmount;\n    if (this.item) {\n      this.item.style.transition = 'none';\n    }\n  }\n  onMove(gesture) {\n    if (this.optsDirty) {\n      this.calculateOptsWidth();\n    }\n    let openAmount = this.initialOpenAmount - gesture.deltaX;\n    switch (this.sides) {\n      case 2 /* End */:\n        openAmount = Math.max(0, openAmount);\n        break;\n      case 1 /* Start */:\n        openAmount = Math.min(0, openAmount);\n        break;\n      case 3 /* Both */:\n        break;\n      case 0 /* None */:\n        return;\n      default:\n        console.warn('invalid ItemSideFlags value', this.sides);\n        break;\n    }\n    let optsWidth;\n    if (openAmount > this.optsWidthRightSide) {\n      optsWidth = this.optsWidthRightSide;\n      openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n    }\n    else if (openAmount < -this.optsWidthLeftSide) {\n      optsWidth = -this.optsWidthLeftSide;\n      openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n    }\n    this.setOpenAmount(openAmount, false);\n  }\n  onEnd(gesture) {\n    // Restore ion-content scrollY to initial value when gesture ends\n    this.restoreContentScrollY();\n    const velocity = gesture.velocityX;\n    let restingPoint = this.openAmount > 0 ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n    // Check if the drag didn't clear the buttons mid-point\n    // and we aren't moving fast enough to swipe open\n    const isResetDirection = this.openAmount > 0 === !(velocity < 0);\n    const isMovingFast = Math.abs(velocity) > 0.3;\n    const isOnCloseZone = Math.abs(this.openAmount) < Math.abs(restingPoint / 2);\n    if (swipeShouldReset(isResetDirection, isMovingFast, isOnCloseZone)) {\n      restingPoint = 0;\n    }\n    const state = this.state;\n    this.setOpenAmount(restingPoint, true);\n    if ((state & 32 /* SwipeEnd */) !== 0 && this.rightOptions) {\n      this.rightOptions.fireSwipeEvent();\n    }\n    else if ((state & 64 /* SwipeStart */) !== 0 && this.leftOptions) {\n      this.leftOptions.fireSwipeEvent();\n    }\n  }\n  calculateOptsWidth() {\n    this.optsWidthRightSide = 0;\n    if (this.rightOptions) {\n      this.rightOptions.style.display = 'flex';\n      this.optsWidthRightSide = this.rightOptions.offsetWidth;\n      this.rightOptions.style.display = '';\n    }\n    this.optsWidthLeftSide = 0;\n    if (this.leftOptions) {\n      this.leftOptions.style.display = 'flex';\n      this.optsWidthLeftSide = this.leftOptions.offsetWidth;\n      this.leftOptions.style.display = '';\n    }\n    this.optsDirty = false;\n  }\n  setOpenAmount(openAmount, isFinal) {\n    if (this.tmr !== undefined) {\n      clearTimeout(this.tmr);\n      this.tmr = undefined;\n    }\n    if (!this.item) {\n      return;\n    }\n    const style = this.item.style;\n    this.openAmount = openAmount;\n    if (isFinal) {\n      style.transition = '';\n    }\n    if (openAmount > 0) {\n      this.state =\n        openAmount >= this.optsWidthRightSide + SWIPE_MARGIN\n          ? 8 /* End */ | 32 /* SwipeEnd */\n          : 8 /* End */;\n    }\n    else if (openAmount < 0) {\n      this.state =\n        openAmount <= -this.optsWidthLeftSide - SWIPE_MARGIN\n          ? 16 /* Start */ | 64 /* SwipeStart */\n          : 16 /* Start */;\n    }\n    else {\n      /**\n       * Item sliding cannot be interrupted\n       * while closing the item. If it did,\n       * it would allow the item to get into an\n       * inconsistent state where multiple\n       * items are then open at the same time.\n       */\n      if (this.gesture) {\n        this.gesture.enable(false);\n      }\n      this.tmr = setTimeout(() => {\n        this.state = 2 /* Disabled */;\n        this.tmr = undefined;\n        if (this.gesture) {\n          this.gesture.enable(!this.disabled);\n        }\n      }, 600);\n      openSlidingItem = undefined;\n      style.transform = '';\n      return;\n    }\n    style.transform = `translate3d(${-openAmount}px,0,0)`;\n    this.ionDrag.emit({\n      amount: openAmount,\n      ratio: this.getSlidingRatioSync(),\n    });\n  }\n  getSlidingRatioSync() {\n    if (this.openAmount > 0) {\n      return this.openAmount / this.optsWidthRightSide;\n    }\n    else if (this.openAmount < 0) {\n      return this.openAmount / this.optsWidthLeftSide;\n    }\n    else {\n      return 0;\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'item-sliding-active-slide': this.state !== 2 /* Disabled */,\n        'item-sliding-active-options-end': (this.state & 8 /* End */) !== 0,\n        'item-sliding-active-options-start': (this.state & 16 /* Start */) !== 0,\n        'item-sliding-active-swipe-end': (this.state & 32 /* SwipeEnd */) !== 0,\n        'item-sliding-active-swipe-start': (this.state & 64 /* SwipeStart */) !== 0,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return itemSlidingCss; }\n}, [0, \"ion-item-sliding\", {\n    \"disabled\": [4],\n    \"state\": [32],\n    \"getOpenAmount\": [64],\n    \"getSlidingRatio\": [64],\n    \"open\": [64],\n    \"close\": [64],\n    \"closeOpened\": [64]\n  }]);\nconst swipeShouldReset = (isResetDirection, isMovingFast, isOnResetZone) => {\n  // The logic required to know when the sliding item should close (openAmount=0)\n  // depends on three booleans (isResetDirection, isMovingFast, isOnResetZone)\n  // and it ended up being too complicated to be written manually without errors\n  // so the truth table is attached below: (0=false, 1=true)\n  // isResetDirection | isMovingFast | isOnResetZone || shouldClose\n  //         0        |       0      |       0       ||    0\n  //         0        |       0      |       1       ||    1\n  //         0        |       1      |       0       ||    0\n  //         0        |       1      |       1       ||    0\n  //         1        |       0      |       0       ||    0\n  //         1        |       0      |       1       ||    1\n  //         1        |       1      |       0       ||    1\n  //         1        |       1      |       1       ||    1\n  // The resulting expression was generated by resolving the K-map (Karnaugh map):\n  return (!isMovingFast && isOnResetZone) || (isResetDirection && isMovingFast);\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-item-sliding\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-item-sliding\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, ItemSliding);\n      }\n      break;\n  } });\n}\n\nconst IonItemSliding = ItemSliding;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonItemSliding, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}