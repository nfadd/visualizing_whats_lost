{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'Home', 'End'];\n\nconst startFocusVisible = rootEl => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const ref = rootEl ? rootEl.shadowRoot : document;\n  const root = rootEl ? rootEl : document.body;\n\n  const setFocus = elements => {\n    currentFocus.forEach(el => el.classList.remove(ION_FOCUSED));\n    elements.forEach(el => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n\n  const onKeydown = ev => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  };\n\n  const onFocusin = ev => {\n    if (keyboardMode && ev.composedPath) {\n      const toFocus = ev.composedPath().filter(el => {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  };\n\n  const onFocusout = () => {\n    if (ref.activeElement === root) {\n      setFocus([]);\n    }\n  };\n\n  ref.addEventListener('keydown', onKeydown);\n  ref.addEventListener('focusin', onFocusin);\n  ref.addEventListener('focusout', onFocusout);\n  ref.addEventListener('touchstart', pointerDown);\n  ref.addEventListener('mousedown', pointerDown);\n\n  const destroy = () => {\n    ref.removeEventListener('keydown', onKeydown);\n    ref.removeEventListener('focusin', onFocusin);\n    ref.removeEventListener('focusout', onFocusout);\n    ref.removeEventListener('touchstart', pointerDown);\n    ref.removeEventListener('mousedown', pointerDown);\n  };\n\n  return {\n    destroy,\n    setFocus\n  };\n};\n\nexport { startFocusVisible };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/focus-visible.js"],"names":["ION_FOCUSED","ION_FOCUSABLE","FOCUS_KEYS","startFocusVisible","rootEl","currentFocus","keyboardMode","ref","shadowRoot","document","root","body","setFocus","elements","forEach","el","classList","remove","add","pointerDown","onKeydown","ev","includes","key","onFocusin","composedPath","toFocus","filter","contains","onFocusout","activeElement","addEventListener","destroy","removeEventListener"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst ION_FOCUSED = 'ion-focused';\nconst ION_FOCUSABLE = 'ion-focusable';\nconst FOCUS_KEYS = [\n  'Tab',\n  'ArrowDown',\n  'Space',\n  'Escape',\n  ' ',\n  'Shift',\n  'Enter',\n  'ArrowLeft',\n  'ArrowRight',\n  'ArrowUp',\n  'Home',\n  'End',\n];\nconst startFocusVisible = (rootEl) => {\n  let currentFocus = [];\n  let keyboardMode = true;\n  const ref = rootEl ? rootEl.shadowRoot : document;\n  const root = rootEl ? rootEl : document.body;\n  const setFocus = (elements) => {\n    currentFocus.forEach((el) => el.classList.remove(ION_FOCUSED));\n    elements.forEach((el) => el.classList.add(ION_FOCUSED));\n    currentFocus = elements;\n  };\n  const pointerDown = () => {\n    keyboardMode = false;\n    setFocus([]);\n  };\n  const onKeydown = (ev) => {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  };\n  const onFocusin = (ev) => {\n    if (keyboardMode && ev.composedPath) {\n      const toFocus = ev.composedPath().filter((el) => {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  };\n  const onFocusout = () => {\n    if (ref.activeElement === root) {\n      setFocus([]);\n    }\n  };\n  ref.addEventListener('keydown', onKeydown);\n  ref.addEventListener('focusin', onFocusin);\n  ref.addEventListener('focusout', onFocusout);\n  ref.addEventListener('touchstart', pointerDown);\n  ref.addEventListener('mousedown', pointerDown);\n  const destroy = () => {\n    ref.removeEventListener('keydown', onKeydown);\n    ref.removeEventListener('focusin', onFocusin);\n    ref.removeEventListener('focusout', onFocusout);\n    ref.removeEventListener('touchstart', pointerDown);\n    ref.removeEventListener('mousedown', pointerDown);\n  };\n  return {\n    destroy,\n    setFocus,\n  };\n};\n\nexport { startFocusVisible };\n"]},"metadata":{},"sourceType":"module"}