{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nvar RadioGroup = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.inputId = \"ion-rg-\".concat(radioGroupIds++);\n    _this.labelId = \"\".concat(_this.inputId, \"-lbl\");\n    /**\n     * If `true`, the radios can be deselected.\n     */\n\n    _this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    _this.name = _this.inputId;\n\n    _this.setRadioTabindex = function (value) {\n      var radios = _this.getRadios(); // Get the first radio that is not disabled and the checked one\n\n\n      var first = radios.find(function (radio) {\n        return !radio.disabled;\n      });\n      var checked = radios.find(function (radio) {\n        return radio.value === value && !radio.disabled;\n      });\n\n      if (!first && !checked) {\n        return;\n      } // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n\n\n      var focusable = checked || first;\n\n      var _iterator = _createForOfIteratorHelper(radios),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var radio = _step.value;\n          var tabindex = radio === focusable ? 0 : -1;\n          radio.setButtonTabindex(tabindex);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n\n    _this.onClick = function (ev) {\n      ev.preventDefault();\n      var selectedRadio = ev.target && ev.target.closest('ion-radio');\n\n      if (selectedRadio) {\n        var currentValue = _this.value;\n        var newValue = selectedRadio.value;\n\n        if (newValue !== currentValue) {\n          _this.value = newValue;\n        } else if (_this.allowEmptySelection) {\n          _this.value = undefined;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"valueChanged\",\n    value: function valueChanged(value) {\n      this.setRadioTabindex(value);\n      this.ionChange.emit({\n        value: value\n      });\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setRadioTabindex(this.value);\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var header, label;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Get the list header if it exists and set the id\n                // this is used to set aria-labelledby\n                header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n\n                if (header) {\n                  label = this.label = header.querySelector('ion-label');\n\n                  if (label) {\n                    this.labelId = label.id = this.name + '-lbl';\n                  }\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"getRadios\",\n    value: function getRadios() {\n      return Array.from(this.el.querySelectorAll('ion-radio'));\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(ev) {\n      var inSelectPopover = !!this.el.closest('ion-select-popover');\n\n      if (ev.target && !this.el.contains(ev.target)) {\n        return;\n      } // Get all radios inside of the radio group and then\n      // filter out disabled radios since we need to skip those\n\n\n      var radios = this.getRadios().filter(function (radio) {\n        return !radio.disabled;\n      }); // Only move the radio if the current focus is in the radio group\n\n      if (ev.target && radios.includes(ev.target)) {\n        var index = radios.findIndex(function (radio) {\n          return radio === ev.target;\n        });\n        var current = radios[index];\n        var next; // If hitting arrow down or arrow right, move to the next radio\n        // If we're on the last radio, move to the first radio\n\n        if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n          next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n        } // If hitting arrow up or arrow left, move to the previous radio\n        // If we're on the first radio, move to the last radio\n\n\n        if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n          next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n        }\n\n        if (next && radios.includes(next)) {\n          next.setFocus(ev);\n\n          if (!inSelectPopover) {\n            this.value = next.value;\n          }\n        } // Update the radio group value when a user presses the\n        // space bar on top of a selected radio\n\n\n        if (['Space'].includes(ev.code)) {\n          this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value; // Prevent browsers from jumping\n          // to the bottom of the screen\n\n          ev.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var label = this.label,\n          labelId = this.labelId;\n      var mode = getIonMode(this);\n      return h(Host, {\n        role: \"radiogroup\",\n        \"aria-labelledby\": label ? labelId : null,\n        onClick: this.onClick,\n        class: mode\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"valueChanged\"]\n      };\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [0, \"ion-radio-group\", {\n  \"allowEmptySelection\": [4, \"allow-empty-selection\"],\n  \"name\": [1],\n  \"value\": [1032]\n}, [[4, \"keydown\", \"onKeydown\"]]]);\nvar radioGroupIds = 0;\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-radio-group\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-radio-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, RadioGroup);\n        }\n\n        break;\n    }\n  });\n}\n\nexport { RadioGroup as R, defineCustomElement as d };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/radio-group.js"],"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","RadioGroup","__registerHost","ionChange","inputId","radioGroupIds","labelId","allowEmptySelection","name","setRadioTabindex","value","radios","getRadios","first","find","radio","disabled","checked","focusable","tabindex","setButtonTabindex","onClick","ev","preventDefault","selectedRadio","target","closest","currentValue","newValue","undefined","emit","header","el","querySelector","label","id","Array","from","querySelectorAll","inSelectPopover","contains","filter","includes","index","findIndex","current","next","code","length","setFocus","mode","role","class","defineCustomElement","customElements","components","forEach","tagName","get","define","R","d"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst RadioGroup = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find((radio) => !radio.disabled);\n      const checked = radios.find((radio) => radio.value === value && !radio.disabled);\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\n    if (header) {\n      const label = (this.label = header.querySelector('ion-label'));\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = this.getRadios().filter((radio) => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex((radio) => radio === ev.target);\n      const current = radios[index];\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus(ev);\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n      // Update the radio group value when a user presses the\n      // space bar on top of a selected radio\n      if (['Space'].includes(ev.code)) {\n        this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\n        // Prevent browsers from jumping\n        // to the bottom of the screen\n        ev.preventDefault();\n      }\n    }\n  }\n  render() {\n    const { label, labelId } = this;\n    const mode = getIonMode(this);\n    return h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode });\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n}, [0, \"ion-radio-group\", {\n    \"allowEmptySelection\": [4, \"allow-empty-selection\"],\n    \"name\": [1],\n    \"value\": [1032]\n  }, [[4, \"keydown\", \"onKeydown\"]]]);\nlet radioGroupIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-radio-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-radio-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, RadioGroup);\n      }\n      break;\n  } });\n}\n\nexport { RadioGroup as R, defineCustomElement as d };\n"]},"metadata":{},"sourceType":"module"}