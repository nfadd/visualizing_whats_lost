{"ast":null,"code":"import { startCamera } from './Camera';\nvar [latitude, longitude] = [0, 0];\nvar [userLatitude, userLongitude] = [0, 0];\n\nfunction setPinLatLong(lat, long) {\n  latitude = lat;\n  longitude = long;\n}\n\nfunction getPinLatLong() {\n  return [latitude, longitude];\n}\n\nfunction setUserLatLong(lat, long) {\n  userLatitude = lat;\n  userLongitude = long;\n}\n\nfunction getUserLatLong() {\n  return [userLatitude, userLongitude];\n}\n\nfunction locationChecker() {\n  const pinCoords = getPinLatLong();\n  const pinLat = pinCoords[0];\n  const pinLong = pinCoords[1];\n  const userCoords = getUserLatLong();\n  const userLat = userCoords[0];\n  const userLong = userCoords[1];\n\n  if (calculateDistance(userLat, userLong, pinLat, pinLong) > 1) {\n    alert(\"You must be closer to location to take a picture.\");\n  } else {\n    startCamera();\n  }\n}\n\nfunction calculateDistance(lat1, long1, lat2, long2) {\n  var R = 6371000; // Radius of the earth in meters\n\n  var dLat = deg2rad(lat2 - lat1);\n  var dLong = deg2rad(long2 - long1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; // Distance in meters\n\n  return d;\n}\n\nfunction deg2rad(deg) {\n  return deg * (Math.PI / 180);\n}\n\nexport { setPinLatLong, setUserLatLong, locationChecker };","map":{"version":3,"names":["startCamera","latitude","longitude","userLatitude","userLongitude","setPinLatLong","lat","long","getPinLatLong","setUserLatLong","getUserLatLong","locationChecker","pinCoords","pinLat","pinLong","userCoords","userLat","userLong","calculateDistance","alert","lat1","long1","lat2","long2","R","dLat","deg2rad","dLong","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI"],"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/Location.js"],"sourcesContent":["import { startCamera } from './Camera';\n\n\nvar [latitude, longitude] = [0, 0];\nvar [userLatitude, userLongitude] = [0, 0];\n\nfunction setPinLatLong(lat, long) {\n    latitude = lat;\n    longitude = long;\n}\n\nfunction getPinLatLong() {\n    return [latitude, longitude]\n}\n\nfunction setUserLatLong(lat, long) {\n    userLatitude = lat;\n    userLongitude = long;\n}\n\nfunction getUserLatLong() {\n    return [userLatitude, userLongitude]\n}\n\nfunction locationChecker() {\n    const pinCoords = getPinLatLong();\n    const pinLat = pinCoords[0];\n    const pinLong = pinCoords[1];\n\n    const userCoords = getUserLatLong();\n    const userLat = userCoords[0];\n    const userLong = userCoords[1];\n\n    if(calculateDistance(userLat, userLong, pinLat, pinLong) > 1 ) {\n        alert(\"You must be closer to location to take a picture.\");\n    } else {\n        startCamera();\n    }\n}\n\nfunction calculateDistance(lat1, long1, lat2, long2) {\n    var R = 6371000; // Radius of the earth in meters\n    var dLat = deg2rad(lat2-lat1);\n    var dLong = deg2rad(long2-long1); \n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLong/2) * Math.sin(dLong/2); \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in meters\n    return d;\n}\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI/180)\n}\n\nexport { setPinLatLong, setUserLatLong, locationChecker };"],"mappings":"AAAA,SAASA,WAAT,QAA4B,UAA5B;AAGA,IAAI,CAACC,QAAD,EAAWC,SAAX,IAAwB,CAAC,CAAD,EAAI,CAAJ,CAA5B;AACA,IAAI,CAACC,YAAD,EAAeC,aAAf,IAAgC,CAAC,CAAD,EAAI,CAAJ,CAApC;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;EAC9BN,QAAQ,GAAGK,GAAX;EACAJ,SAAS,GAAGK,IAAZ;AACH;;AAED,SAASC,aAAT,GAAyB;EACrB,OAAO,CAACP,QAAD,EAAWC,SAAX,CAAP;AACH;;AAED,SAASO,cAAT,CAAwBH,GAAxB,EAA6BC,IAA7B,EAAmC;EAC/BJ,YAAY,GAAGG,GAAf;EACAF,aAAa,GAAGG,IAAhB;AACH;;AAED,SAASG,cAAT,GAA0B;EACtB,OAAO,CAACP,YAAD,EAAeC,aAAf,CAAP;AACH;;AAED,SAASO,eAAT,GAA2B;EACvB,MAAMC,SAAS,GAAGJ,aAAa,EAA/B;EACA,MAAMK,MAAM,GAAGD,SAAS,CAAC,CAAD,CAAxB;EACA,MAAME,OAAO,GAAGF,SAAS,CAAC,CAAD,CAAzB;EAEA,MAAMG,UAAU,GAAGL,cAAc,EAAjC;EACA,MAAMM,OAAO,GAAGD,UAAU,CAAC,CAAD,CAA1B;EACA,MAAME,QAAQ,GAAGF,UAAU,CAAC,CAAD,CAA3B;;EAEA,IAAGG,iBAAiB,CAACF,OAAD,EAAUC,QAAV,EAAoBJ,MAApB,EAA4BC,OAA5B,CAAjB,GAAwD,CAA3D,EAA+D;IAC3DK,KAAK,CAAC,mDAAD,CAAL;EACH,CAFD,MAEO;IACHnB,WAAW;EACd;AACJ;;AAED,SAASkB,iBAAT,CAA2BE,IAA3B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,KAA9C,EAAqD;EACjD,IAAIC,CAAC,GAAG,OAAR,CADiD,CAChC;;EACjB,IAAIC,IAAI,GAAGC,OAAO,CAACJ,IAAI,GAACF,IAAN,CAAlB;EACA,IAAIO,KAAK,GAAGD,OAAO,CAACH,KAAK,GAACF,KAAP,CAAnB;EACA,IAAIO,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,IAAmBI,IAAI,CAACC,GAAL,CAASL,IAAI,GAAC,CAAd,CAAnB,GAAsCI,IAAI,CAACE,GAAL,CAASL,OAAO,CAACN,IAAD,CAAhB,IAA0BS,IAAI,CAACE,GAAL,CAASL,OAAO,CAACJ,IAAD,CAAhB,CAA1B,GAAoDO,IAAI,CAACC,GAAL,CAASH,KAAK,GAAC,CAAf,CAApD,GAAwEE,IAAI,CAACC,GAAL,CAASH,KAAK,GAAC,CAAf,CAAtH;EACA,IAAIK,CAAC,GAAG,IAAIH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,IAAL,CAAUN,CAAV,CAAX,EAAyBC,IAAI,CAACK,IAAL,CAAU,IAAEN,CAAZ,CAAzB,CAAZ;EACA,IAAIO,CAAC,GAAGX,CAAC,GAAGQ,CAAZ,CANiD,CAMlC;;EACf,OAAOG,CAAP;AACH;;AAED,SAAST,OAAT,CAAiBU,GAAjB,EAAsB;EAClB,OAAOA,GAAG,IAAIP,IAAI,CAACQ,EAAL,GAAQ,GAAZ,CAAV;AACH;;AAED,SAAShC,aAAT,EAAwBI,cAAxB,EAAwCE,eAAxC"},"metadata":{},"sourceType":"module"}