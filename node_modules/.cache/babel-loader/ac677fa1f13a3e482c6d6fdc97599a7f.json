{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, s as scrollToTop } from './index8.js';\nimport { c as componentOnReady } from './helpers.js';\n\nvar startStatusTap = function startStatusTap() {\n  var win = window;\n  win.addEventListener('statusTap', function () {\n    readTask(function () {\n      var width = win.innerWidth;\n      var height = win.innerHeight;\n      var el = document.elementFromPoint(width / 2, height / 2);\n\n      if (!el) {\n        return;\n      }\n\n      var contentEl = findClosestIonContent(el);\n\n      if (contentEl) {\n        new Promise(function (resolve) {\n          return componentOnReady(contentEl, resolve);\n        }).then(function () {\n          writeTask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    /**\n                     * If scrolling and user taps status bar,\n                     * only calling scrollToTop is not enough\n                     * as engines like WebKit will jump the\n                     * scroll position back down and complete\n                     * any in-progress momentum scrolling.\n                     */\n                    contentEl.style.setProperty('--overflow', 'hidden');\n                    _context.next = 3;\n                    return scrollToTop(contentEl, 300);\n\n                  case 3:\n                    contentEl.style.removeProperty('--overflow');\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          })));\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/status-tap.js"],"names":["readTask","writeTask","a","findClosestIonContent","s","scrollToTop","c","componentOnReady","startStatusTap","win","window","addEventListener","width","innerWidth","height","innerHeight","el","document","elementFromPoint","contentEl","Promise","resolve","then","style","setProperty","removeProperty"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,+BAApC;AACA,SAASC,CAAC,IAAIC,qBAAd,EAAqCC,CAAC,IAAIC,WAA1C,QAA6D,aAA7D;AACA,SAASC,CAAC,IAAIC,gBAAd,QAAsC,cAAtC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,GAAG,GAAGC,MAAZ;AACAD,EAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkC,YAAM;AACtCX,IAAAA,QAAQ,CAAC,YAAM;AACb,UAAMY,KAAK,GAAGH,GAAG,CAACI,UAAlB;AACA,UAAMC,MAAM,GAAGL,GAAG,CAACM,WAAnB;AACA,UAAMC,EAAE,GAAGC,QAAQ,CAACC,gBAAT,CAA0BN,KAAK,GAAG,CAAlC,EAAqCE,MAAM,GAAG,CAA9C,CAAX;;AACA,UAAI,CAACE,EAAL,EAAS;AACP;AACD;;AACD,UAAMG,SAAS,GAAGhB,qBAAqB,CAACa,EAAD,CAAvC;;AACA,UAAIG,SAAJ,EAAe;AACb,YAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,iBAAad,gBAAgB,CAACY,SAAD,EAAYE,OAAZ,CAA7B;AAAA,SAAZ,EAA+DC,IAA/D,CAAoE,YAAM;AACxErB,UAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AACR;AACZ;AACA;AACA;AACA;AACA;AACA;AACYkB,oBAAAA,SAAS,CAACI,KAAV,CAAgBC,WAAhB,CAA4B,YAA5B,EAA0C,QAA1C;AARQ;AAAA,2BASFnB,WAAW,CAACc,SAAD,EAAY,GAAZ,CATT;;AAAA;AAURA,oBAAAA,SAAS,CAACI,KAAV,CAAgBE,cAAhB,CAA+B,YAA/B;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAD,GAAT;AAYD,SAbD;AAcD;AACF,KAxBO,CAAR;AAyBD,GA1BD;AA2BD,CA7BD;;AA+BA,SAASjB,cAAT","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, s as scrollToTop } from './index8.js';\nimport { c as componentOnReady } from './helpers.js';\n\nconst startStatusTap = () => {\n  const win = window;\n  win.addEventListener('statusTap', () => {\n    readTask(() => {\n      const width = win.innerWidth;\n      const height = win.innerHeight;\n      const el = document.elementFromPoint(width / 2, height / 2);\n      if (!el) {\n        return;\n      }\n      const contentEl = findClosestIonContent(el);\n      if (contentEl) {\n        new Promise((resolve) => componentOnReady(contentEl, resolve)).then(() => {\n          writeTask(async () => {\n            /**\n             * If scrolling and user taps status bar,\n             * only calling scrollToTop is not enough\n             * as engines like WebKit will jump the\n             * scroll position back down and complete\n             * any in-progress momentum scrolling.\n             */\n            contentEl.style.setProperty('--overflow', 'hidden');\n            await scrollToTop(contentEl, 300);\n            contentEl.style.removeProperty('--overflow');\n          });\n        });\n      }\n    });\n  });\n};\n\nexport { startStatusTap };\n"]},"metadata":{},"sourceType":"module"}