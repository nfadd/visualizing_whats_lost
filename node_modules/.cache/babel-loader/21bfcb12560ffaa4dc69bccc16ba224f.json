{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createForOfIteratorHelper from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, readTask, writeTask, forceUpdate, h, Host } from '@stencil/core/internal/client';\nimport { c as componentOnReady } from './helpers.js';\nvar CELL_TYPE_ITEM = 'item';\nvar CELL_TYPE_HEADER = 'header';\nvar CELL_TYPE_FOOTER = 'footer';\nvar NODE_CHANGE_NONE = 0;\nvar NODE_CHANGE_POSITION = 1;\nvar NODE_CHANGE_CELL = 2;\nvar MIN_READS = 2;\n\nvar updateVDom = function updateVDom(dom, heightIndex, cells, range) {\n  // reset dom\n  var _iterator = _createForOfIteratorHelper(dom),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n      node.change = NODE_CHANGE_NONE;\n      node.d = true;\n    } // try to match into exisiting dom\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var toMutate = [];\n  var end = range.offset + range.length;\n\n  var _loop = function _loop(i) {\n    var cell = cells[i];\n    var node = dom.find(function (n) {\n      return n.d && n.cell === cell;\n    });\n\n    if (node) {\n      var top = heightIndex[i];\n\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n\n      node.d = false;\n    } else {\n      toMutate.push(cell);\n    }\n  };\n\n  for (var i = range.offset; i < end; i++) {\n    _loop(i);\n  } // needs to append\n\n\n  var pool = dom.filter(function (n) {\n    return n.d;\n  });\n\n  var _loop2 = function _loop2() {\n    var cell = _toMutate[_i];\n    var node = pool.find(function (n) {\n      return n.d && n.cell.type === cell.type;\n    });\n    var index = cell.i;\n\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    } else {\n      dom.push({\n        d: false,\n        cell: cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index]\n      });\n    }\n  };\n\n  for (var _i = 0, _toMutate = toMutate; _i < _toMutate.length; _i++) {\n    _loop2();\n  }\n\n  dom.filter(function (n) {\n    return n.d && n.top !== -9999;\n  }).forEach(function (n) {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\n\nvar doRender = function doRender(el, nodeRender, dom, updateCellHeight) {\n  var children = Array.from(el.children).filter(function (n) {\n    return n.tagName !== 'TEMPLATE';\n  });\n  var childrenNu = children.length;\n  var child;\n\n  for (var i = 0; i < dom.length; i++) {\n    var node = dom[i];\n    var cell = node.cell; // the cell change, the content must be updated\n\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      } else {\n        var newChild = createNode(el, cell.type);\n        child = nodeRender(newChild, cell, i) || newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n\n      child['$ionCell'] = cell;\n    } else {\n      child = children[i];\n    } // only update position when it changes\n\n\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = \"translate3d(0,\".concat(node.top, \"px,0)\");\n    } // update visibility\n\n\n    var visible = cell.visible;\n\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      } else {\n        child.classList.add('virtual-loading');\n      }\n\n      node.visible = visible;\n    } // dynamic height\n\n\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\n\nvar createNode = function createNode(el, type) {\n  var template = getTemplate(el, type);\n\n  if (template && el.ownerDocument) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n\n  return null;\n};\n\nvar getTemplate = function getTemplate(el, type) {\n  switch (type) {\n    case CELL_TYPE_ITEM:\n      return el.querySelector('template:not([name])');\n\n    case CELL_TYPE_HEADER:\n      return el.querySelector('template[name=header]');\n\n    case CELL_TYPE_FOOTER:\n      return el.querySelector('template[name=footer]');\n  }\n};\n\nvar getViewport = function getViewport(scrollTop, vierportHeight, margin) {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin\n  };\n};\n\nvar getRange = function getRange(heightIndex, viewport, buffer) {\n  var topPos = viewport.top;\n  var bottomPos = viewport.bottom; // find top index\n\n  var i = 0;\n\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n\n  var offset = Math.max(i - buffer - 1, 0); // find bottom index\n\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n\n  var end = Math.min(i + buffer, heightIndex.length);\n  var length = end - offset;\n  return {\n    offset: offset,\n    length: length\n  };\n};\n\nvar getShouldUpdate = function getShouldUpdate(dirtyIndex, currentRange, range) {\n  var end = range.offset + range.length;\n  return dirtyIndex <= end || currentRange.offset !== range.offset || currentRange.length !== range.length;\n};\n\nvar findCellIndex = function findCellIndex(cells, index) {\n  var max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n\n  if (index === 0) {\n    return 0;\n  } else if (index === max + 1) {\n    return cells.length;\n  } else {\n    return cells.findIndex(function (c) {\n      return c.index === index;\n    });\n  }\n};\n\nvar inplaceUpdate = function inplaceUpdate(dst, src, offset) {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n\n  for (var i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n\n  return dst;\n};\n\nvar _calcCells = function calcCells(items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) {\n  var cells = [];\n  var end = len + offset;\n\n  for (var i = offset; i < end; i++) {\n    var item = items[i];\n\n    if (headerFn) {\n      var value = headerFn(item, i, items);\n\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value: value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight\n        });\n      }\n    }\n\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight\n    });\n\n    if (footerFn) {\n      var _value = footerFn(item, i, items);\n\n      if (_value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value: _value,\n          index: i,\n          height: footerHeight ? footerHeight(_value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight\n        });\n      }\n    }\n  }\n\n  return cells;\n};\n\nvar _calcHeightIndex = function calcHeightIndex(buf, cells, index) {\n  var acum = buf[index];\n\n  for (var i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n\n  return acum;\n};\n\nvar resizeBuffer = function resizeBuffer(buf, len) {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n\n  if (buf.length === len) {\n    return buf;\n  } else if (len > buf.length) {\n    var newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  } else {\n    return buf.subarray(0, len);\n  }\n};\n\nvar positionForIndex = function positionForIndex(index, cells, heightIndex) {\n  var cell = cells.find(function (c) {\n    return c.type === CELL_TYPE_ITEM && c.index === index;\n  });\n\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n\n  return -1;\n};\n\nvar virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\nvar VirtualScroll = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.range = {\n      offset: 0,\n      length: 0\n    };\n    _this.viewportHeight = 0;\n    _this.cells = [];\n    _this.virtualDom = [];\n    _this.isEnabled = false;\n    _this.viewportOffset = 0;\n    _this.currentScrollTop = 0;\n    _this.indexDirty = 0;\n    _this.lastItemLen = 0;\n    _this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n\n    _this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n\n    _this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n\n    _this.approxFooterHeight = 30;\n\n    _this.onScroll = function () {\n      _this.updateVirtualScroll();\n    };\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"itemsChanged\",\n    value: function itemsChanged() {\n      this.calcCells();\n      this.updateVirtualScroll();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      console.warn(\"[Deprecation Warning]: ion-virtual-scroll has been deprecated and will be removed in Ionic Framework v7.0. See https://ionicframework.com/docs/angular/virtual-scroll for migration steps.\");\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var contentEl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                contentEl = this.el.closest('ion-content');\n\n                if (contentEl) {\n                  _context.next = 4;\n                  break;\n                }\n\n                console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.next = 6;\n                return contentEl.getScrollElement();\n\n              case 6:\n                this.scrollEl = _context.sent;\n                this.contentEl = contentEl;\n                this.calcCells();\n                this.updateState();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateState();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.scrollEl = undefined;\n    }\n  }, {\n    key: \"onResize\",\n    value: function onResize() {\n      this.calcCells();\n      this.updateVirtualScroll();\n    }\n    /**\n     * Returns the position of the virtual item at the given index.\n     */\n\n  }, {\n    key: \"positionForItem\",\n    value: function positionForItem(index) {\n      return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n    }\n    /**\n     * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n     * dirty any time the content or their style changes.\n     *\n     * The subset of items to be updated can are specifying by an offset and a length.\n     */\n\n  }, {\n    key: \"checkRange\",\n    value: function () {\n      var _checkRange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(offset) {\n        var len,\n            length,\n            cellIndex,\n            cells,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                len = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : -1;\n\n                if (this.items) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                length = len === -1 ? this.items.length - offset : len;\n                cellIndex = findCellIndex(this.cells, offset);\n                cells = _calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n                this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n                this.lastItemLen = this.items.length;\n                this.indexDirty = Math.max(offset - 1, 0);\n                this.scheduleUpdate();\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkRange(_x) {\n        return _checkRange.apply(this, arguments);\n      }\n\n      return checkRange;\n    }()\n    /**\n     * This method marks the tail the items array as dirty, so they can be re-rendered.\n     *\n     * It's equivalent to calling:\n     *\n     * ```js\n     * virtualScroll.checkRange(lastItemLen);\n     * ```\n     */\n\n  }, {\n    key: \"checkEnd\",\n    value: function () {\n      var _checkEnd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.items) {\n                  this.checkRange(this.lastItemLen);\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function checkEnd() {\n        return _checkEnd.apply(this, arguments);\n      }\n\n      return checkEnd;\n    }()\n  }, {\n    key: \"updateVirtualScroll\",\n    value: function updateVirtualScroll() {\n      // do nothing if virtual-scroll is disabled\n      if (!this.isEnabled || !this.scrollEl) {\n        return;\n      } // unschedule future updates\n\n\n      if (this.timerUpdate) {\n        clearTimeout(this.timerUpdate);\n        this.timerUpdate = undefined;\n      } // schedule DOM operations into the stencil queue\n\n\n      readTask(this.readVS.bind(this));\n      writeTask(this.writeVS.bind(this));\n    }\n  }, {\n    key: \"readVS\",\n    value: function readVS() {\n      var contentEl = this.contentEl,\n          scrollEl = this.scrollEl,\n          el = this.el;\n      var topOffset = 0;\n      var node = el;\n\n      while (node && node !== contentEl) {\n        topOffset += node.offsetTop;\n        node = node.offsetParent;\n      }\n\n      this.viewportOffset = topOffset;\n\n      if (scrollEl) {\n        this.viewportHeight = scrollEl.offsetHeight;\n        this.currentScrollTop = scrollEl.scrollTop;\n      }\n    }\n  }, {\n    key: \"writeVS\",\n    value: function writeVS() {\n      var dirtyIndex = this.indexDirty; // get visible viewport\n\n      var scrollTop = this.currentScrollTop - this.viewportOffset;\n      var viewport = getViewport(scrollTop, this.viewportHeight, 100); // compute lazily the height index\n\n      var heightIndex = this.getHeightIndex(); // get array bounds of visible cells base in the viewport\n\n      var range = getRange(heightIndex, viewport, 2); // fast path, do nothing\n\n      var shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n\n      if (!shouldUpdate) {\n        return;\n      }\n\n      this.range = range; // in place mutation of the virtual DOM\n\n      updateVDom(this.virtualDom, heightIndex, this.cells, range); // Write DOM\n      // Different code paths taken depending of the render API used\n\n      if (this.nodeRender) {\n        doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n      } else if (this.domRender) {\n        this.domRender(this.virtualDom);\n      } else if (this.renderItem) {\n        forceUpdate(this);\n      }\n    }\n  }, {\n    key: \"updateCellHeight\",\n    value: function updateCellHeight(cell, node) {\n      var _this2 = this;\n\n      var update = function update() {\n        if (node['$ionCell'] === cell) {\n          var style = window.getComputedStyle(node);\n          var height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n\n          _this2.setCellHeight(cell, height);\n        }\n      };\n\n      if (node) {\n        componentOnReady(node, update);\n      } else {\n        update();\n      }\n    }\n  }, {\n    key: \"setCellHeight\",\n    value: function setCellHeight(cell, height) {\n      var index = cell.i; // the cell might changed since the height update was scheduled\n\n      if (cell !== this.cells[index]) {\n        return;\n      }\n\n      if (cell.height !== height || cell.visible !== true) {\n        cell.visible = true;\n        cell.height = height;\n        this.indexDirty = Math.min(this.indexDirty, index);\n        this.scheduleUpdate();\n      }\n    }\n  }, {\n    key: \"scheduleUpdate\",\n    value: function scheduleUpdate() {\n      var _this3 = this;\n\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = setTimeout(function () {\n        return _this3.updateVirtualScroll();\n      }, 100);\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState() {\n      var shouldEnable = !!(this.scrollEl && this.cells);\n\n      if (shouldEnable !== this.isEnabled) {\n        this.enableScrollEvents(shouldEnable);\n\n        if (shouldEnable) {\n          this.updateVirtualScroll();\n        }\n      }\n    }\n  }, {\n    key: \"calcCells\",\n    value: function calcCells() {\n      if (!this.items) {\n        return;\n      }\n\n      this.lastItemLen = this.items.length;\n      this.cells = _calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n      this.indexDirty = 0;\n    }\n  }, {\n    key: \"getHeightIndex\",\n    value: function getHeightIndex() {\n      if (this.indexDirty !== Infinity) {\n        this.calcHeightIndex(this.indexDirty);\n      }\n\n      return this.heightIndex;\n    }\n  }, {\n    key: \"calcHeightIndex\",\n    value: function calcHeightIndex() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      // TODO: optimize, we don't need to calculate all the cells\n      this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n      this.totalHeight = _calcHeightIndex(this.heightIndex, this.cells, index);\n      this.indexDirty = Infinity;\n    }\n  }, {\n    key: \"enableScrollEvents\",\n    value: function enableScrollEvents(shouldListen) {\n      var _this4 = this;\n\n      if (this.rmEvent) {\n        this.rmEvent();\n        this.rmEvent = undefined;\n      }\n\n      var scrollEl = this.scrollEl;\n\n      if (scrollEl) {\n        this.isEnabled = shouldListen;\n        scrollEl.addEventListener('scroll', this.onScroll);\n\n        this.rmEvent = function () {\n          scrollEl.removeEventListener('scroll', _this4.onScroll);\n        };\n      }\n    }\n  }, {\n    key: \"renderVirtualNode\",\n    value: function renderVirtualNode(node) {\n      var _node$cell = node.cell,\n          type = _node$cell.type,\n          value = _node$cell.value,\n          index = _node$cell.index;\n\n      switch (type) {\n        case CELL_TYPE_ITEM:\n          return this.renderItem(value, index);\n\n        case CELL_TYPE_HEADER:\n          return this.renderHeader(value, index);\n\n        case CELL_TYPE_FOOTER:\n          return this.renderFooter(value, index);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return h(Host, {\n        style: {\n          height: \"\".concat(this.totalHeight, \"px\")\n        }\n      }, this.renderItem && h(VirtualProxy, {\n        dom: this.virtualDom\n      }, this.virtualDom.map(function (node) {\n        return _this5.renderVirtualNode(node);\n      })));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"itemHeight\": [\"itemsChanged\"],\n        \"headerHeight\": [\"itemsChanged\"],\n        \"footerHeight\": [\"itemsChanged\"],\n        \"items\": [\"itemsChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return virtualScrollCss;\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [0, \"ion-virtual-scroll\", {\n  \"approxItemHeight\": [2, \"approx-item-height\"],\n  \"approxHeaderHeight\": [2, \"approx-header-height\"],\n  \"approxFooterHeight\": [2, \"approx-footer-height\"],\n  \"headerFn\": [16],\n  \"footerFn\": [16],\n  \"items\": [16],\n  \"itemHeight\": [16],\n  \"headerHeight\": [16],\n  \"footerHeight\": [16],\n  \"renderItem\": [16],\n  \"renderHeader\": [16],\n  \"renderFooter\": [16],\n  \"nodeRender\": [16],\n  \"domRender\": [16],\n  \"totalHeight\": [32],\n  \"positionForItem\": [64],\n  \"checkRange\": [64],\n  \"checkEnd\": [64]\n}, [[9, \"resize\", \"onResize\"]]]);\n\nvar VirtualProxy = function VirtualProxy(_ref, children, utils) {\n  var dom = _ref.dom;\n  return utils.map(children, function (child, i) {\n    var node = dom[i];\n    var vattrs = child.vattrs || {};\n    var classes = vattrs.class || '';\n    classes += 'virtual-item ';\n\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n\n    return Object.assign(Object.assign({}, child), {\n      vattrs: Object.assign(Object.assign({}, vattrs), {\n        class: classes,\n        style: Object.assign(Object.assign({}, vattrs.style), {\n          transform: \"translate3d(0,\".concat(node.top, \"px,0)\")\n        })\n      })\n    });\n  });\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-virtual-scroll\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-virtual-scroll\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, VirtualScroll);\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonVirtualScroll = VirtualScroll;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonVirtualScroll, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-virtual-scroll.js"],"names":["proxyCustomElement","HTMLElement","readTask","writeTask","forceUpdate","h","Host","c","componentOnReady","CELL_TYPE_ITEM","CELL_TYPE_HEADER","CELL_TYPE_FOOTER","NODE_CHANGE_NONE","NODE_CHANGE_POSITION","NODE_CHANGE_CELL","MIN_READS","updateVDom","dom","heightIndex","cells","range","node","change","d","toMutate","end","offset","length","i","cell","find","n","top","push","pool","filter","type","index","visible","forEach","doRender","el","nodeRender","updateCellHeight","children","Array","from","tagName","childrenNu","child","newChild","createNode","classList","add","appendChild","style","transform","remove","reads","template","getTemplate","ownerDocument","importNode","content","querySelector","getViewport","scrollTop","vierportHeight","margin","Math","max","bottom","getRange","viewport","buffer","topPos","bottomPos","min","getShouldUpdate","dirtyIndex","currentRange","findCellIndex","findIndex","inplaceUpdate","dst","src","calcCells","items","itemHeight","headerHeight","footerHeight","headerFn","footerFn","approxHeaderHeight","approxFooterHeight","approxItemHeight","j","len","item","value","height","calcHeightIndex","buf","acum","resizeBuffer","Uint32Array","newBuf","set","subarray","positionForIndex","virtualScrollCss","VirtualScroll","__registerHost","viewportHeight","virtualDom","isEnabled","viewportOffset","currentScrollTop","indexDirty","lastItemLen","totalHeight","onScroll","updateVirtualScroll","console","warn","contentEl","closest","error","getScrollElement","scrollEl","updateState","undefined","Promise","resolve","getHeightIndex","cellIndex","scheduleUpdate","checkRange","timerUpdate","clearTimeout","readVS","bind","writeVS","topOffset","offsetTop","offsetParent","offsetHeight","shouldUpdate","domRender","renderItem","update","window","getComputedStyle","parseFloat","getPropertyValue","setCellHeight","setTimeout","shouldEnable","enableScrollEvents","Infinity","shouldListen","rmEvent","addEventListener","removeEventListener","renderHeader","renderFooter","VirtualProxy","map","renderVirtualNode","utils","vattrs","classes","class","Object","assign","defineCustomElement$1","customElements","components","get","define","IonVirtualScroll","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, readTask, writeTask, forceUpdate, h, Host } from '@stencil/core/internal/client';\nimport { c as componentOnReady } from './helpers.js';\n\nconst CELL_TYPE_ITEM = 'item';\nconst CELL_TYPE_HEADER = 'header';\nconst CELL_TYPE_FOOTER = 'footer';\nconst NODE_CHANGE_NONE = 0;\nconst NODE_CHANGE_POSITION = 1;\nconst NODE_CHANGE_CELL = 2;\n\nconst MIN_READS = 2;\nconst updateVDom = (dom, heightIndex, cells, range) => {\n  // reset dom\n  for (const node of dom) {\n    node.change = NODE_CHANGE_NONE;\n    node.d = true;\n  }\n  // try to match into exisiting dom\n  const toMutate = [];\n  const end = range.offset + range.length;\n  for (let i = range.offset; i < end; i++) {\n    const cell = cells[i];\n    const node = dom.find((n) => n.d && n.cell === cell);\n    if (node) {\n      const top = heightIndex[i];\n      if (top !== node.top) {\n        node.top = top;\n        node.change = NODE_CHANGE_POSITION;\n      }\n      node.d = false;\n    }\n    else {\n      toMutate.push(cell);\n    }\n  }\n  // needs to append\n  const pool = dom.filter((n) => n.d);\n  for (const cell of toMutate) {\n    const node = pool.find((n) => n.d && n.cell.type === cell.type);\n    const index = cell.i;\n    if (node) {\n      node.d = false;\n      node.change = NODE_CHANGE_CELL;\n      node.cell = cell;\n      node.top = heightIndex[index];\n    }\n    else {\n      dom.push({\n        d: false,\n        cell,\n        visible: true,\n        change: NODE_CHANGE_CELL,\n        top: heightIndex[index],\n      });\n    }\n  }\n  dom\n    .filter((n) => n.d && n.top !== -9999)\n    .forEach((n) => {\n    n.change = NODE_CHANGE_POSITION;\n    n.top = -9999;\n  });\n};\nconst doRender = (el, nodeRender, dom, updateCellHeight) => {\n  const children = Array.from(el.children).filter((n) => n.tagName !== 'TEMPLATE');\n  const childrenNu = children.length;\n  let child;\n  for (let i = 0; i < dom.length; i++) {\n    const node = dom[i];\n    const cell = node.cell;\n    // the cell change, the content must be updated\n    if (node.change === NODE_CHANGE_CELL) {\n      if (i < childrenNu) {\n        child = children[i];\n        nodeRender(child, cell, i);\n      }\n      else {\n        const newChild = createNode(el, cell.type);\n        child = nodeRender(newChild, cell, i) || newChild;\n        child.classList.add('virtual-item');\n        el.appendChild(child);\n      }\n      child['$ionCell'] = cell;\n    }\n    else {\n      child = children[i];\n    }\n    // only update position when it changes\n    if (node.change !== NODE_CHANGE_NONE) {\n      child.style.transform = `translate3d(0,${node.top}px,0)`;\n    }\n    // update visibility\n    const visible = cell.visible;\n    if (node.visible !== visible) {\n      if (visible) {\n        child.classList.remove('virtual-loading');\n      }\n      else {\n        child.classList.add('virtual-loading');\n      }\n      node.visible = visible;\n    }\n    // dynamic height\n    if (cell.reads > 0) {\n      updateCellHeight(cell, child);\n      cell.reads--;\n    }\n  }\n};\nconst createNode = (el, type) => {\n  const template = getTemplate(el, type);\n  if (template && el.ownerDocument) {\n    return el.ownerDocument.importNode(template.content, true).children[0];\n  }\n  return null;\n};\nconst getTemplate = (el, type) => {\n  switch (type) {\n    case CELL_TYPE_ITEM:\n      return el.querySelector('template:not([name])');\n    case CELL_TYPE_HEADER:\n      return el.querySelector('template[name=header]');\n    case CELL_TYPE_FOOTER:\n      return el.querySelector('template[name=footer]');\n  }\n};\nconst getViewport = (scrollTop, vierportHeight, margin) => {\n  return {\n    top: Math.max(scrollTop - margin, 0),\n    bottom: scrollTop + vierportHeight + margin,\n  };\n};\nconst getRange = (heightIndex, viewport, buffer) => {\n  const topPos = viewport.top;\n  const bottomPos = viewport.bottom;\n  // find top index\n  let i = 0;\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] > topPos) {\n      break;\n    }\n  }\n  const offset = Math.max(i - buffer - 1, 0);\n  // find bottom index\n  for (; i < heightIndex.length; i++) {\n    if (heightIndex[i] >= bottomPos) {\n      break;\n    }\n  }\n  const end = Math.min(i + buffer, heightIndex.length);\n  const length = end - offset;\n  return { offset, length };\n};\nconst getShouldUpdate = (dirtyIndex, currentRange, range) => {\n  const end = range.offset + range.length;\n  return dirtyIndex <= end || currentRange.offset !== range.offset || currentRange.length !== range.length;\n};\nconst findCellIndex = (cells, index) => {\n  const max = cells.length > 0 ? cells[cells.length - 1].index : 0;\n  if (index === 0) {\n    return 0;\n  }\n  else if (index === max + 1) {\n    return cells.length;\n  }\n  else {\n    return cells.findIndex((c) => c.index === index);\n  }\n};\nconst inplaceUpdate = (dst, src, offset) => {\n  if (offset === 0 && src.length >= dst.length) {\n    return src;\n  }\n  for (let i = 0; i < src.length; i++) {\n    dst[i + offset] = src[i];\n  }\n  return dst;\n};\nconst calcCells = (items, itemHeight, headerHeight, footerHeight, headerFn, footerFn, approxHeaderHeight, approxFooterHeight, approxItemHeight, j, offset, len) => {\n  const cells = [];\n  const end = len + offset;\n  for (let i = offset; i < end; i++) {\n    const item = items[i];\n    if (headerFn) {\n      const value = headerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_HEADER,\n          value,\n          index: i,\n          height: headerHeight ? headerHeight(value, i) : approxHeaderHeight,\n          reads: headerHeight ? 0 : MIN_READS,\n          visible: !!headerHeight,\n        });\n      }\n    }\n    cells.push({\n      i: j++,\n      type: CELL_TYPE_ITEM,\n      value: item,\n      index: i,\n      height: itemHeight ? itemHeight(item, i) : approxItemHeight,\n      reads: itemHeight ? 0 : MIN_READS,\n      visible: !!itemHeight,\n    });\n    if (footerFn) {\n      const value = footerFn(item, i, items);\n      if (value != null) {\n        cells.push({\n          i: j++,\n          type: CELL_TYPE_FOOTER,\n          value,\n          index: i,\n          height: footerHeight ? footerHeight(value, i) : approxFooterHeight,\n          reads: footerHeight ? 0 : MIN_READS,\n          visible: !!footerHeight,\n        });\n      }\n    }\n  }\n  return cells;\n};\nconst calcHeightIndex = (buf, cells, index) => {\n  let acum = buf[index];\n  for (let i = index; i < buf.length; i++) {\n    buf[i] = acum;\n    acum += cells[i].height;\n  }\n  return acum;\n};\nconst resizeBuffer = (buf, len) => {\n  if (!buf) {\n    return new Uint32Array(len);\n  }\n  if (buf.length === len) {\n    return buf;\n  }\n  else if (len > buf.length) {\n    const newBuf = new Uint32Array(len);\n    newBuf.set(buf);\n    return newBuf;\n  }\n  else {\n    return buf.subarray(0, len);\n  }\n};\nconst positionForIndex = (index, cells, heightIndex) => {\n  const cell = cells.find((c) => c.type === CELL_TYPE_ITEM && c.index === index);\n  if (cell) {\n    return heightIndex[cell.i];\n  }\n  return -1;\n};\n\nconst virtualScrollCss = \"ion-virtual-scroll{display:block;position:relative;width:100%;contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}ion-virtual-scroll>.virtual-loading{opacity:0}ion-virtual-scroll>.virtual-item{position:absolute !important;top:0 !important;right:0 !important;left:0 !important;-webkit-transition-duration:0ms;transition-duration:0ms;will-change:transform}\";\n\nconst VirtualScroll = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.range = { offset: 0, length: 0 };\n    this.viewportHeight = 0;\n    this.cells = [];\n    this.virtualDom = [];\n    this.isEnabled = false;\n    this.viewportOffset = 0;\n    this.currentScrollTop = 0;\n    this.indexDirty = 0;\n    this.lastItemLen = 0;\n    this.totalHeight = 0;\n    /**\n     * It is important to provide this\n     * if virtual item height will be significantly larger than the default\n     * The approximate height of each virtual item template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxItemHeight = 45;\n    /**\n     * The approximate height of each header template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxHeaderHeight = 30;\n    /**\n     * The approximate width of each footer template's cell.\n     * This dimension is used to help determine how many cells should\n     * be created when initialized, and to help calculate the height of\n     * the scrollable area. This height value can only use `px` units.\n     * Note that the actual rendered size of each cell comes from the\n     * app's CSS, whereas this approximation is used to help calculate\n     * initial dimensions before the item has been rendered.\n     */\n    this.approxFooterHeight = 30;\n    this.onScroll = () => {\n      this.updateVirtualScroll();\n    };\n  }\n  itemsChanged() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  componentWillLoad() {\n    console.warn(`[Deprecation Warning]: ion-virtual-scroll has been deprecated and will be removed in Ionic Framework v7.0. See https://ionicframework.com/docs/angular/virtual-scroll for migration steps.`);\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-virtual-scroll> must be used inside an <ion-content>');\n      return;\n    }\n    this.scrollEl = await contentEl.getScrollElement();\n    this.contentEl = contentEl;\n    this.calcCells();\n    this.updateState();\n  }\n  componentDidUpdate() {\n    this.updateState();\n  }\n  disconnectedCallback() {\n    this.scrollEl = undefined;\n  }\n  onResize() {\n    this.calcCells();\n    this.updateVirtualScroll();\n  }\n  /**\n   * Returns the position of the virtual item at the given index.\n   */\n  positionForItem(index) {\n    return Promise.resolve(positionForIndex(index, this.cells, this.getHeightIndex()));\n  }\n  /**\n   * This method marks a subset of items as dirty, so they can be re-rendered. Items should be marked as\n   * dirty any time the content or their style changes.\n   *\n   * The subset of items to be updated can are specifying by an offset and a length.\n   */\n  async checkRange(offset, len = -1) {\n    // TODO: kind of hacky how we do in-place updated of the cells\n    // array. this part needs a complete refactor\n    if (!this.items) {\n      return;\n    }\n    const length = len === -1 ? this.items.length - offset : len;\n    const cellIndex = findCellIndex(this.cells, offset);\n    const cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, cellIndex, offset, length);\n    this.cells = inplaceUpdate(this.cells, cells, cellIndex);\n    this.lastItemLen = this.items.length;\n    this.indexDirty = Math.max(offset - 1, 0);\n    this.scheduleUpdate();\n  }\n  /**\n   * This method marks the tail the items array as dirty, so they can be re-rendered.\n   *\n   * It's equivalent to calling:\n   *\n   * ```js\n   * virtualScroll.checkRange(lastItemLen);\n   * ```\n   */\n  async checkEnd() {\n    if (this.items) {\n      this.checkRange(this.lastItemLen);\n    }\n  }\n  updateVirtualScroll() {\n    // do nothing if virtual-scroll is disabled\n    if (!this.isEnabled || !this.scrollEl) {\n      return;\n    }\n    // unschedule future updates\n    if (this.timerUpdate) {\n      clearTimeout(this.timerUpdate);\n      this.timerUpdate = undefined;\n    }\n    // schedule DOM operations into the stencil queue\n    readTask(this.readVS.bind(this));\n    writeTask(this.writeVS.bind(this));\n  }\n  readVS() {\n    const { contentEl, scrollEl, el } = this;\n    let topOffset = 0;\n    let node = el;\n    while (node && node !== contentEl) {\n      topOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n    this.viewportOffset = topOffset;\n    if (scrollEl) {\n      this.viewportHeight = scrollEl.offsetHeight;\n      this.currentScrollTop = scrollEl.scrollTop;\n    }\n  }\n  writeVS() {\n    const dirtyIndex = this.indexDirty;\n    // get visible viewport\n    const scrollTop = this.currentScrollTop - this.viewportOffset;\n    const viewport = getViewport(scrollTop, this.viewportHeight, 100);\n    // compute lazily the height index\n    const heightIndex = this.getHeightIndex();\n    // get array bounds of visible cells base in the viewport\n    const range = getRange(heightIndex, viewport, 2);\n    // fast path, do nothing\n    const shouldUpdate = getShouldUpdate(dirtyIndex, this.range, range);\n    if (!shouldUpdate) {\n      return;\n    }\n    this.range = range;\n    // in place mutation of the virtual DOM\n    updateVDom(this.virtualDom, heightIndex, this.cells, range);\n    // Write DOM\n    // Different code paths taken depending of the render API used\n    if (this.nodeRender) {\n      doRender(this.el, this.nodeRender, this.virtualDom, this.updateCellHeight.bind(this));\n    }\n    else if (this.domRender) {\n      this.domRender(this.virtualDom);\n    }\n    else if (this.renderItem) {\n      forceUpdate(this);\n    }\n  }\n  updateCellHeight(cell, node) {\n    const update = () => {\n      if (node['$ionCell'] === cell) {\n        const style = window.getComputedStyle(node);\n        const height = node.offsetHeight + parseFloat(style.getPropertyValue('margin-bottom'));\n        this.setCellHeight(cell, height);\n      }\n    };\n    if (node) {\n      componentOnReady(node, update);\n    }\n    else {\n      update();\n    }\n  }\n  setCellHeight(cell, height) {\n    const index = cell.i;\n    // the cell might changed since the height update was scheduled\n    if (cell !== this.cells[index]) {\n      return;\n    }\n    if (cell.height !== height || cell.visible !== true) {\n      cell.visible = true;\n      cell.height = height;\n      this.indexDirty = Math.min(this.indexDirty, index);\n      this.scheduleUpdate();\n    }\n  }\n  scheduleUpdate() {\n    clearTimeout(this.timerUpdate);\n    this.timerUpdate = setTimeout(() => this.updateVirtualScroll(), 100);\n  }\n  updateState() {\n    const shouldEnable = !!(this.scrollEl && this.cells);\n    if (shouldEnable !== this.isEnabled) {\n      this.enableScrollEvents(shouldEnable);\n      if (shouldEnable) {\n        this.updateVirtualScroll();\n      }\n    }\n  }\n  calcCells() {\n    if (!this.items) {\n      return;\n    }\n    this.lastItemLen = this.items.length;\n    this.cells = calcCells(this.items, this.itemHeight, this.headerHeight, this.footerHeight, this.headerFn, this.footerFn, this.approxHeaderHeight, this.approxFooterHeight, this.approxItemHeight, 0, 0, this.lastItemLen);\n    this.indexDirty = 0;\n  }\n  getHeightIndex() {\n    if (this.indexDirty !== Infinity) {\n      this.calcHeightIndex(this.indexDirty);\n    }\n    return this.heightIndex;\n  }\n  calcHeightIndex(index = 0) {\n    // TODO: optimize, we don't need to calculate all the cells\n    this.heightIndex = resizeBuffer(this.heightIndex, this.cells.length);\n    this.totalHeight = calcHeightIndex(this.heightIndex, this.cells, index);\n    this.indexDirty = Infinity;\n  }\n  enableScrollEvents(shouldListen) {\n    if (this.rmEvent) {\n      this.rmEvent();\n      this.rmEvent = undefined;\n    }\n    const scrollEl = this.scrollEl;\n    if (scrollEl) {\n      this.isEnabled = shouldListen;\n      scrollEl.addEventListener('scroll', this.onScroll);\n      this.rmEvent = () => {\n        scrollEl.removeEventListener('scroll', this.onScroll);\n      };\n    }\n  }\n  renderVirtualNode(node) {\n    const { type, value, index } = node.cell;\n    switch (type) {\n      case CELL_TYPE_ITEM:\n        return this.renderItem(value, index);\n      case CELL_TYPE_HEADER:\n        return this.renderHeader(value, index);\n      case CELL_TYPE_FOOTER:\n        return this.renderFooter(value, index);\n    }\n  }\n  render() {\n    return (h(Host, { style: {\n        height: `${this.totalHeight}px`,\n      } }, this.renderItem && (h(VirtualProxy, { dom: this.virtualDom }, this.virtualDom.map((node) => this.renderVirtualNode(node))))));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"itemHeight\": [\"itemsChanged\"],\n    \"headerHeight\": [\"itemsChanged\"],\n    \"footerHeight\": [\"itemsChanged\"],\n    \"items\": [\"itemsChanged\"]\n  }; }\n  static get style() { return virtualScrollCss; }\n}, [0, \"ion-virtual-scroll\", {\n    \"approxItemHeight\": [2, \"approx-item-height\"],\n    \"approxHeaderHeight\": [2, \"approx-header-height\"],\n    \"approxFooterHeight\": [2, \"approx-footer-height\"],\n    \"headerFn\": [16],\n    \"footerFn\": [16],\n    \"items\": [16],\n    \"itemHeight\": [16],\n    \"headerHeight\": [16],\n    \"footerHeight\": [16],\n    \"renderItem\": [16],\n    \"renderHeader\": [16],\n    \"renderFooter\": [16],\n    \"nodeRender\": [16],\n    \"domRender\": [16],\n    \"totalHeight\": [32],\n    \"positionForItem\": [64],\n    \"checkRange\": [64],\n    \"checkEnd\": [64]\n  }, [[9, \"resize\", \"onResize\"]]]);\nconst VirtualProxy = ({ dom }, children, utils) => {\n  return utils.map(children, (child, i) => {\n    const node = dom[i];\n    const vattrs = child.vattrs || {};\n    let classes = vattrs.class || '';\n    classes += 'virtual-item ';\n    if (!node.visible) {\n      classes += 'virtual-loading';\n    }\n    return Object.assign(Object.assign({}, child), { vattrs: Object.assign(Object.assign({}, vattrs), { class: classes, style: Object.assign(Object.assign({}, vattrs.style), { transform: `translate3d(0,${node.top}px,0)` }) }) });\n  });\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-virtual-scroll\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-virtual-scroll\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, VirtualScroll);\n      }\n      break;\n  } });\n}\n\nconst IonVirtualScroll = VirtualScroll;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonVirtualScroll, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}