{"ast":null,"code":"import _defineProperty from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { r as raf, g as getElementRoot } from './helpers.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nimport { c as createColorClasses } from './theme.js';\nvar pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\nvar pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\nvar PickerColumnInternal = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.__attachShadow();\n\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.hapticsStarted = false;\n    _this.isColumnVisible = false;\n    _this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n\n    _this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n\n    _this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n\n    _this.numericInput = false;\n\n    _this.centerPickerItemInView = function (target) {\n      var smooth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          el = _assertThisInitialize.el,\n          isColumnVisible = _assertThisInitialize.isColumnVisible;\n\n      if (isColumnVisible) {\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        var top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\n\n        if (el.scrollTop !== top) {\n          el.scroll({\n            top: top,\n            left: 0,\n            behavior: smooth ? 'smooth' : undefined\n          });\n        }\n      }\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n\n\n    _this.inputModeChange = function (ev) {\n      if (!_this.numericInput) {\n        return;\n      }\n\n      var _ev$detail = ev.detail,\n          useInputMode = _ev$detail.useInputMode,\n          inputModeColumn = _ev$detail.inputModeColumn;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n\n      var isColumnActive = inputModeColumn === undefined || inputModeColumn === _this.el;\n\n      if (!useInputMode || !isColumnActive) {\n        _this.isActive = false;\n        return;\n      }\n\n      _this.isActive = true;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n\n\n    _this.initializeScrollListener = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          el = _assertThisInitialize2.el;\n\n      var timeout;\n      var activeEl = _this.activeItem;\n\n      var scrollCallback = function scrollCallback() {\n        raf(function () {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n\n          if (!_this.hapticsStarted) {\n            hapticSelectionStart();\n            _this.hapticsStarted = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n\n\n          var bbox = el.getBoundingClientRect();\n          var centerX = bbox.x + bbox.width / 2;\n          var centerY = bbox.y + bbox.height / 2;\n          var activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n\n\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(function () {\n            var dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n\n            if (dataIndex === null) {\n              return;\n            }\n\n            var index = parseInt(dataIndex, 10);\n            var selectedItem = _this.items[index];\n\n            if (selectedItem.value !== _this.value) {\n              _this.setValue(selectedItem.value);\n\n              hapticSelectionEnd();\n              _this.hapticsStarted = false;\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n\n\n      raf(function () {\n        el.addEventListener('scroll', scrollCallback);\n\n        _this.destroyScrollListener = function () {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"valueChange\",\n    value: function valueChange() {\n      if (this.isColumnVisible) {\n        /**\n         * Only scroll the active item into view when the picker column\n         * is actively visible to the user.\n         */\n        this.scrollActiveItemIntoView();\n      }\n    }\n    /**\n     * Only setup scroll listeners\n     * when the picker is visible, otherwise\n     * the container will have a scroll\n     * height of 0px.\n     */\n\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var _this2 = this;\n\n      var visibleCallback = function visibleCallback(entries) {\n        var _a;\n\n        var ev = entries[0];\n\n        if (ev.isIntersecting) {\n          _this2.isColumnVisible = true;\n          /**\n           * Because this initial call to scrollActiveItemIntoView has to fire before\n           * the scroll listener is set up, we need to manage the active class manually.\n           */\n\n          var oldActive = getElementRoot(_this2.el).querySelector(\".\".concat(PICKER_COL_ACTIVE));\n          oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n\n          _this2.scrollActiveItemIntoView();\n\n          (_a = _this2.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n\n          _this2.initializeScrollListener();\n        } else {\n          _this2.isColumnVisible = false;\n\n          if (_this2.destroyScrollListener) {\n            _this2.destroyScrollListener();\n\n            _this2.destroyScrollListener = undefined;\n          }\n        }\n      };\n\n      new IntersectionObserver(visibleCallback, {\n        threshold: 0.01\n      }).observe(this.el);\n      var parentEl = this.el.closest('ion-picker-internal');\n\n      if (parentEl !== null) {\n        parentEl.addEventListener('ionInputModeChange', function (ev) {\n          return _this2.inputModeChange(ev);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      var _a;\n\n      var activeItem = this.activeItem,\n          items = this.items,\n          isColumnVisible = this.isColumnVisible,\n          value = this.value;\n\n      if (isColumnVisible) {\n        if (activeItem) {\n          this.scrollActiveItemIntoView();\n        } else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\n          /**\n           * If the picker column does not have an active item and the current value\n           * does not match the first item in the picker column, that means\n           * the value is out of bounds. In this case, we assign the value to the\n           * first item to match the scroll position of the column.\n           *\n           */\n          this.setValue(items[0].value);\n        }\n      }\n    }\n    /** @internal  */\n\n  }, {\n    key: \"scrollActiveItemIntoView\",\n    value: function () {\n      var _scrollActiveItemIntoView = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var activeEl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                activeEl = this.activeItem;\n\n                if (activeEl) {\n                  this.centerPickerItemInView(activeEl, false);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function scrollActiveItemIntoView() {\n        return _scrollActiveItemIntoView.apply(this, arguments);\n      }\n\n      return scrollActiveItemIntoView;\n    }()\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var items = this.items;\n      this.value = value;\n      var findItem = items.find(function (item) {\n        return item.value === value;\n      });\n\n      if (findItem) {\n        this.ionChange.emit(findItem);\n      }\n    }\n  }, {\n    key: \"activeItem\",\n    get: function get() {\n      return getElementRoot(this.el).querySelector(\".picker-item[data-value=\\\"\".concat(this.value, \"\\\"]\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses,\n          _this3 = this;\n\n      var items = this.items,\n          color = this.color,\n          isActive = this.isActive,\n          numericInput = this.numericInput;\n      var mode = getIonMode(this);\n      return h(Host, {\n        tabindex: 0,\n        class: createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'picker-column-active', isActive), _defineProperty(_createColorClasses, 'picker-column-numeric-input', numericInput), _createColorClasses))\n      }, h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), items.map(function (item, index) {\n        return h(\"div\", {\n          class: \"picker-item\",\n          \"data-value\": item.value,\n          \"data-index\": index,\n          onClick: function onClick(ev) {\n            _this3.centerPickerItemInView(ev.target);\n          }\n        }, item.text);\n      }), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"valueChange\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: pickerColumnInternalIosCss,\n        md: pickerColumnInternalMdCss\n      };\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [33, \"ion-picker-column-internal\", {\n  \"items\": [16],\n  \"value\": [1032],\n  \"color\": [513],\n  \"numericInput\": [4, \"numeric-input\"],\n  \"isActive\": [32],\n  \"scrollActiveItemIntoView\": [64]\n}]);\nvar PICKER_COL_ACTIVE = 'picker-item-active';\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-picker-column-internal\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, PickerColumnInternal);\n        }\n\n        break;\n    }\n  });\n}\n\nexport { PickerColumnInternal as P, defineCustomElement as d };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/picker-column-internal.js"],"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","r","raf","g","getElementRoot","a","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","c","createColorClasses","pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","__registerHost","__attachShadow","ionChange","hapticsStarted","isColumnVisible","isActive","items","color","numericInput","centerPickerItemInView","target","smooth","el","top","offsetTop","clientHeight","scrollTop","scroll","left","behavior","undefined","inputModeChange","ev","detail","useInputMode","inputModeColumn","isColumnActive","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","remove","PICKER_COL_ACTIVE","add","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","value","setValue","addEventListener","destroyScrollListener","removeEventListener","scrollActiveItemIntoView","visibleCallback","entries","_a","isIntersecting","oldActive","querySelector","IntersectionObserver","threshold","observe","parentEl","closest","findItem","find","item","emit","mode","tabindex","class","map","onClick","text","ios","md","defineCustomElement","customElements","components","forEach","tagName","get","define","P","d"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { r as raf, g as getElementRoot } from './helpers.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nimport { c as createColorClasses } from './theme.js';\n\nconst pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\n\nconst pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\n\nconst PickerColumnInternal = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.hapticsStarted = false;\n    this.isColumnVisible = false;\n    this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n    this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n    this.numericInput = false;\n    this.centerPickerItemInView = (target, smooth = true) => {\n      const { el, isColumnVisible } = this;\n      if (isColumnVisible) {\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        const top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\n        if (el.scrollTop !== top) {\n          el.scroll({\n            top,\n            left: 0,\n            behavior: smooth ? 'smooth' : undefined,\n          });\n        }\n      }\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n    this.inputModeChange = (ev) => {\n      if (!this.numericInput) {\n        return;\n      }\n      const { useInputMode, inputModeColumn } = ev.detail;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n      if (!useInputMode || !isColumnActive) {\n        this.isActive = false;\n        return;\n      }\n      this.isActive = true;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n    this.initializeScrollListener = () => {\n      const { el } = this;\n      let timeout;\n      let activeEl = this.activeItem;\n      const scrollCallback = () => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          if (!this.hapticsStarted) {\n            hapticSelectionStart();\n            this.hapticsStarted = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const bbox = el.getBoundingClientRect();\n          const centerX = bbox.x + bbox.width / 2;\n          const centerY = bbox.y + bbox.height / 2;\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            const dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataIndex === null) {\n              return;\n            }\n            const index = parseInt(dataIndex, 10);\n            const selectedItem = this.items[index];\n            if (selectedItem.value !== this.value) {\n              this.setValue(selectedItem.value);\n              hapticSelectionEnd();\n              this.hapticsStarted = false;\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n      raf(() => {\n        el.addEventListener('scroll', scrollCallback);\n        this.destroyScrollListener = () => {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n  }\n  valueChange() {\n    if (this.isColumnVisible) {\n      /**\n       * Only scroll the active item into view when the picker column\n       * is actively visible to the user.\n       */\n      this.scrollActiveItemIntoView();\n    }\n  }\n  /**\n   * Only setup scroll listeners\n   * when the picker is visible, otherwise\n   * the container will have a scroll\n   * height of 0px.\n   */\n  componentWillLoad() {\n    const visibleCallback = (entries) => {\n      var _a;\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        this.isColumnVisible = true;\n        /**\n         * Because this initial call to scrollActiveItemIntoView has to fire before\n         * the scroll listener is set up, we need to manage the active class manually.\n         */\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n        this.scrollActiveItemIntoView();\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n        this.initializeScrollListener();\n      }\n      else {\n        this.isColumnVisible = false;\n        if (this.destroyScrollListener) {\n          this.destroyScrollListener();\n          this.destroyScrollListener = undefined;\n        }\n      }\n    };\n    new IntersectionObserver(visibleCallback, { threshold: 0.01 }).observe(this.el);\n    const parentEl = this.el.closest('ion-picker-internal');\n    if (parentEl !== null) {\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n    }\n  }\n  componentDidRender() {\n    var _a;\n    const { activeItem, items, isColumnVisible, value } = this;\n    if (isColumnVisible) {\n      if (activeItem) {\n        this.scrollActiveItemIntoView();\n      }\n      else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\n        /**\n         * If the picker column does not have an active item and the current value\n         * does not match the first item in the picker column, that means\n         * the value is out of bounds. In this case, we assign the value to the\n         * first item to match the scroll position of the column.\n         *\n         */\n        this.setValue(items[0].value);\n      }\n    }\n  }\n  /** @internal  */\n  async scrollActiveItemIntoView() {\n    const activeEl = this.activeItem;\n    if (activeEl) {\n      this.centerPickerItemInView(activeEl, false);\n    }\n  }\n  setValue(value) {\n    const { items } = this;\n    this.value = value;\n    const findItem = items.find((item) => item.value === value);\n    if (findItem) {\n      this.ionChange.emit(findItem);\n    }\n  }\n  get activeItem() {\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]`);\n  }\n  render() {\n    const { items, color, isActive, numericInput } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\n        [mode]: true,\n        ['picker-column-active']: isActive,\n        ['picker-column-numeric-input']: numericInput,\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\n      return (h(\"div\", { class: \"picker-item\", \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n          this.centerPickerItemInView(ev.target);\n        } }, item.text));\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChange\"]\n  }; }\n  static get style() { return {\n    ios: pickerColumnInternalIosCss,\n    md: pickerColumnInternalMdCss\n  }; }\n}, [33, \"ion-picker-column-internal\", {\n    \"items\": [16],\n    \"value\": [1032],\n    \"color\": [513],\n    \"numericInput\": [4, \"numeric-input\"],\n    \"isActive\": [32],\n    \"scrollActiveItemIntoView\": [64]\n  }]);\nconst PICKER_COL_ACTIVE = 'picker-item-active';\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-picker-column-internal\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, PickerColumnInternal);\n      }\n      break;\n  } });\n}\n\nexport { PickerColumnInternal as P, defineCustomElement as d };\n"]},"metadata":{},"sourceType":"module"}