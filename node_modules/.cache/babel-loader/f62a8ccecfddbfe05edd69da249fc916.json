{"ast":null,"code":"import _toConsumableArray from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { OVERLAY_BACK_BUTTON_PRIORITY } from './hardware-back-button.js';\nimport { c as componentOnReady, f as focusElement, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nvar lastId = 0;\nvar activeAnimations = new WeakMap();\n\nvar createController = function createController(tagName) {\n  return {\n    create: function create(options) {\n      return createOverlay(tagName, options);\n    },\n    dismiss: function dismiss(data, role, id) {\n      return dismissOverlay(document, data, role, tagName, id);\n    },\n    getTop: function getTop() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", getOverlay(document, tagName));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  };\n};\n\nvar alertController = /*@__PURE__*/createController('ion-alert');\nvar actionSheetController = /*@__PURE__*/createController('ion-action-sheet');\nvar loadingController = /*@__PURE__*/createController('ion-loading');\nvar modalController = /*@__PURE__*/createController('ion-modal');\nvar pickerController = /*@__PURE__*/createController('ion-picker');\nvar popoverController = /*@__PURE__*/createController('ion-popover');\nvar toastController = /*@__PURE__*/createController('ion-toast');\n\nvar prepareOverlay = function prepareOverlay(el) {\n  if (typeof document !== 'undefined') {\n    connectListeners(document);\n  }\n\n  var overlayIndex = lastId++;\n  el.overlayIndex = overlayIndex;\n\n  if (!el.hasAttribute('id')) {\n    el.id = \"ion-overlay-\".concat(overlayIndex);\n  }\n};\n\nvar createOverlay = function createOverlay(tagName, opts) {\n  if (typeof window !== 'undefined' && typeof window.customElements !== 'undefined') {\n    return window.customElements.whenDefined(tagName).then(function () {\n      var element = document.createElement(tagName);\n      element.classList.add('overlay-hidden');\n      /**\n       * Convert the passed in overlay options into props\n       * that get passed down into the new overlay.\n       */\n\n      Object.assign(element, Object.assign(Object.assign({}, opts), {\n        hasController: true\n      })); // append the overlay element to the document body\n\n      getAppRoot(document).appendChild(element);\n      return new Promise(function (resolve) {\n        return componentOnReady(element, resolve);\n      });\n    });\n  }\n\n  return Promise.resolve();\n};\n\nvar focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nvar innerFocusableQueryString = 'input:not([type=hidden]), textarea, button, select';\n\nvar focusFirstDescendant = function focusFirstDescendant(ref, overlay) {\n  var firstInput = ref.querySelector(focusableQueryString);\n  var shadowRoot = firstInput === null || firstInput === void 0 ? void 0 : firstInput.shadowRoot;\n\n  if (shadowRoot) {\n    // If there are no inner focusable elements, just focus the host element.\n    firstInput = shadowRoot.querySelector(innerFocusableQueryString) || firstInput;\n  }\n\n  if (firstInput) {\n    focusElement(firstInput);\n  } else {\n    // Focus overlay instead of letting focus escape\n    overlay.focus();\n  }\n};\n\nvar isOverlayHidden = function isOverlayHidden(overlay) {\n  return overlay.classList.contains('overlay-hidden');\n};\n\nvar focusLastDescendant = function focusLastDescendant(ref, overlay) {\n  var inputs = Array.from(ref.querySelectorAll(focusableQueryString));\n  var lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n  var shadowRoot = lastInput === null || lastInput === void 0 ? void 0 : lastInput.shadowRoot;\n\n  if (shadowRoot) {\n    // If there are no inner focusable elements, just focus the host element.\n    lastInput = shadowRoot.querySelector(innerFocusableQueryString) || lastInput;\n  }\n\n  if (lastInput) {\n    lastInput.focus();\n  } else {\n    // Focus overlay instead of letting focus escape\n    overlay.focus();\n  }\n};\n/**\n * Traps keyboard focus inside of overlay components.\n * Based on https://w3c.github.io/aria-practices/examples/dialog-modal/alertdialog.html\n * This includes the following components: Action Sheet, Alert, Loading, Modal,\n * Picker, and Popover.\n * Should NOT include: Toast\n */\n\n\nvar trapKeyboardFocus = function trapKeyboardFocus(ev, doc) {\n  var lastOverlay = getOverlay(doc, 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker,ion-popover');\n  var target = ev.target;\n  /**\n   * If no active overlay, ignore this event.\n   *\n   * If this component uses the shadow dom,\n   * this global listener is pointless\n   * since it will not catch the focus\n   * traps as they are inside the shadow root.\n   * We need to add a listener to the shadow root\n   * itself to ensure the focus trap works.\n   */\n\n  if (!lastOverlay || !target) {\n    return;\n  }\n  /**\n   * If the ion-disable-focus-trap class\n   * is present on an overlay, then this component\n   * instance has opted out of focus trapping.\n   * An example of this is when the sheet modal\n   * has a backdrop that is disabled. The content\n   * behind the sheet should be focusable until\n   * the backdrop is enabled.\n   */\n\n\n  if (lastOverlay.classList.contains('ion-disable-focus-trap')) {\n    return;\n  }\n\n  var trapScopedFocus = function trapScopedFocus() {\n    /**\n     * If we are focusing the overlay, clear\n     * the last focused element so that hitting\n     * tab activates the first focusable element\n     * in the overlay wrapper.\n     */\n    if (lastOverlay === target) {\n      lastOverlay.lastFocus = undefined;\n      /**\n       * Otherwise, we must be focusing an element\n       * inside of the overlay. The two possible options\n       * here are an input/button/etc or the ion-focus-trap\n       * element. The focus trap element is used to prevent\n       * the keyboard focus from leaving the overlay when\n       * using Tab or screen assistants.\n       */\n    } else {\n      /**\n       * We do not want to focus the traps, so get the overlay\n       * wrapper element as the traps live outside of the wrapper.\n       */\n      var overlayRoot = getElementRoot(lastOverlay);\n\n      if (!overlayRoot.contains(target)) {\n        return;\n      }\n\n      var overlayWrapper = overlayRoot.querySelector('.ion-overlay-wrapper');\n\n      if (!overlayWrapper) {\n        return;\n      }\n      /**\n       * If the target is inside the wrapper, let the browser\n       * focus as normal and keep a log of the last focused element.\n       */\n\n\n      if (overlayWrapper.contains(target)) {\n        lastOverlay.lastFocus = target;\n      } else {\n        /**\n         * Otherwise, we must have focused one of the focus traps.\n         * We need to wrap the focus to either the first element\n         * or the last element.\n         */\n\n        /**\n         * Once we call `focusFirstDescendant` and focus the first\n         * descendant, another focus event will fire which will\n         * cause `lastOverlay.lastFocus` to be updated before\n         * we can run the code after that. We will cache the value\n         * here to avoid that.\n         */\n        var lastFocus = lastOverlay.lastFocus; // Focus the first element in the overlay wrapper\n\n        focusFirstDescendant(overlayWrapper, lastOverlay);\n        /**\n         * If the cached last focused element is the\n         * same as the active element, then we need\n         * to wrap focus to the last descendant. This happens\n         * when the first descendant is focused, and the user\n         * presses Shift + Tab. The previous line will focus\n         * the same descendant again (the first one), causing\n         * last focus to equal the active element.\n         */\n\n        if (lastFocus === doc.activeElement) {\n          focusLastDescendant(overlayWrapper, lastOverlay);\n        }\n\n        lastOverlay.lastFocus = doc.activeElement;\n      }\n    }\n  };\n\n  var trapShadowFocus = function trapShadowFocus() {\n    /**\n     * If the target is inside the wrapper, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (lastOverlay.contains(target)) {\n      lastOverlay.lastFocus = target;\n    } else {\n      /**\n       * Otherwise, we are about to have focus\n       * go out of the overlay. We need to wrap\n       * the focus to either the first element\n       * or the last element.\n       */\n\n      /**\n       * Once we call `focusFirstDescendant` and focus the first\n       * descendant, another focus event will fire which will\n       * cause `lastOverlay.lastFocus` to be updated before\n       * we can run the code after that. We will cache the value\n       * here to avoid that.\n       */\n      var lastFocus = lastOverlay.lastFocus; // Focus the first element in the overlay wrapper\n\n      focusFirstDescendant(lastOverlay, lastOverlay);\n      /**\n       * If the cached last focused element is the\n       * same as the active element, then we need\n       * to wrap focus to the last descendant. This happens\n       * when the first descendant is focused, and the user\n       * presses Shift + Tab. The previous line will focus\n       * the same descendant again (the first one), causing\n       * last focus to equal the active element.\n       */\n\n      if (lastFocus === doc.activeElement) {\n        focusLastDescendant(lastOverlay, lastOverlay);\n      }\n\n      lastOverlay.lastFocus = doc.activeElement;\n    }\n  };\n\n  if (lastOverlay.shadowRoot) {\n    trapShadowFocus();\n  } else {\n    trapScopedFocus();\n  }\n};\n\nvar connectListeners = function connectListeners(doc) {\n  if (lastId === 0) {\n    lastId = 1;\n    doc.addEventListener('focus', function (ev) {\n      trapKeyboardFocus(ev, doc);\n    }, true); // handle back-button click\n\n    doc.addEventListener('ionBackButton', function (ev) {\n      var lastOverlay = getOverlay(doc);\n\n      if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n        ev.detail.register(OVERLAY_BACK_BUTTON_PRIORITY, function () {\n          return lastOverlay.dismiss(undefined, BACKDROP);\n        });\n      }\n    }); // handle ESC to close overlay\n\n    doc.addEventListener('keyup', function (ev) {\n      if (ev.key === 'Escape') {\n        var lastOverlay = getOverlay(doc);\n\n        if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n          lastOverlay.dismiss(undefined, BACKDROP);\n        }\n      }\n    });\n  }\n};\n\nvar dismissOverlay = function dismissOverlay(doc, data, role, overlayTag, id) {\n  var overlay = getOverlay(doc, overlayTag, id);\n\n  if (!overlay) {\n    return Promise.reject('overlay does not exist');\n  }\n\n  return overlay.dismiss(data, role);\n};\n\nvar getOverlays = function getOverlays(doc, selector) {\n  if (selector === undefined) {\n    selector = 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker,ion-popover,ion-toast';\n  }\n\n  return Array.from(doc.querySelectorAll(selector)).filter(function (c) {\n    return c.overlayIndex > 0;\n  });\n};\n/**\n * Returns an overlay element\n * @param doc The document to find the element within.\n * @param overlayTag The selector for the overlay, defaults to Ionic overlay components.\n * @param id The unique identifier for the overlay instance.\n * @returns The overlay element or `undefined` if no overlay element is found.\n */\n\n\nvar getOverlay = function getOverlay(doc, overlayTag, id) {\n  var overlays = getOverlays(doc, overlayTag).filter(function (o) {\n    return !isOverlayHidden(o);\n  });\n  return id === undefined ? overlays[overlays.length - 1] : overlays.find(function (o) {\n    return o.id === id;\n  });\n};\n/**\n * When an overlay is presented, the main\n * focus is the overlay not the page content.\n * We need to remove the page content from the\n * accessibility tree otherwise when\n * users use \"read screen from top\" gestures with\n * TalkBack and VoiceOver, the screen reader will begin\n * to read the content underneath the overlay.\n *\n * We need a container where all page components\n * exist that is separate from where the overlays\n * are added in the DOM. For most apps, this element\n * is the top most ion-router-outlet. In the event\n * that devs are not using a router,\n * they will need to add the \"ion-view-container-root\"\n * id to the element that contains all of their views.\n *\n * TODO: If Framework supports having multiple top\n * level router outlets we would need to update this.\n * Example: One outlet for side menu and one outlet\n * for main content.\n */\n\n\nvar setRootAriaHidden = function setRootAriaHidden() {\n  var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var root = getAppRoot(document);\n  var viewContainer = root.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n\n  if (!viewContainer) {\n    return;\n  }\n\n  if (hidden) {\n    viewContainer.setAttribute('aria-hidden', 'true');\n  } else {\n    viewContainer.removeAttribute('aria-hidden');\n  }\n};\n\nvar present = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(overlay, name, iosEnterAnimation, mdEnterAnimation, opts) {\n    var _a, _b, mode, animationBuilder, completed;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!overlay.presented) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setRootAriaHidden(true);\n            overlay.presented = true;\n            overlay.willPresent.emit();\n            (_a = overlay.willPresentShorthand) === null || _a === void 0 ? void 0 : _a.emit();\n            mode = getIonMode(overlay); // get the user's animation fn if one was provided\n\n            animationBuilder = overlay.enterAnimation ? overlay.enterAnimation : config.get(name, mode === 'ios' ? iosEnterAnimation : mdEnterAnimation);\n            _context2.next = 10;\n            return overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n\n          case 10:\n            completed = _context2.sent;\n\n            if (completed) {\n              overlay.didPresent.emit();\n              (_b = overlay.didPresentShorthand) === null || _b === void 0 ? void 0 : _b.emit();\n            }\n            /**\n             * When an overlay that steals focus\n             * is dismissed, focus should be returned\n             * to the element that was focused\n             * prior to the overlay opening. Toast\n             * does not steal focus and is excluded\n             * from returning focus as a result.\n             */\n\n\n            if (overlay.el.tagName !== 'ION-TOAST') {\n              focusPreviousElementOnDismiss(overlay.el);\n            }\n\n            if (overlay.keyboardClose) {\n              overlay.el.focus();\n            }\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function present(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * When an overlay component is dismissed,\n * focus should be returned to the element\n * that presented the overlay. Otherwise\n * focus will be set on the body which\n * means that people using screen readers\n * or tabbing will need to re-navigate\n * to where they were before they\n * opened the overlay.\n */\n\n\nvar focusPreviousElementOnDismiss = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(overlayEl) {\n    var previousElement, shadowRoot;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            previousElement = document.activeElement;\n\n            if (previousElement) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 3:\n            shadowRoot = previousElement === null || previousElement === void 0 ? void 0 : previousElement.shadowRoot;\n\n            if (shadowRoot) {\n              // If there are no inner focusable elements, just focus the host element.\n              previousElement = shadowRoot.querySelector(innerFocusableQueryString) || previousElement;\n            }\n\n            _context3.next = 7;\n            return overlayEl.onDidDismiss();\n\n          case 7:\n            previousElement.focus();\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function focusPreviousElementOnDismiss(_x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar dismiss = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(overlay, data, role, name, iosLeaveAnimation, mdLeaveAnimation, opts) {\n    var _a, _b, mode, animationBuilder;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (overlay.presented) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", false);\n\n          case 2:\n            setRootAriaHidden(false);\n            overlay.presented = false;\n            _context4.prev = 4;\n            // Overlay contents should not be clickable during dismiss\n            overlay.el.style.setProperty('pointer-events', 'none');\n            overlay.willDismiss.emit({\n              data: data,\n              role: role\n            });\n            (_a = overlay.willDismissShorthand) === null || _a === void 0 ? void 0 : _a.emit({\n              data: data,\n              role: role\n            });\n            mode = getIonMode(overlay);\n            animationBuilder = overlay.leaveAnimation ? overlay.leaveAnimation : config.get(name, mode === 'ios' ? iosLeaveAnimation : mdLeaveAnimation); // If dismissed via gesture, no need to play leaving animation again\n\n            if (!(role !== 'gesture')) {\n              _context4.next = 13;\n              break;\n            }\n\n            _context4.next = 13;\n            return overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n\n          case 13:\n            overlay.didDismiss.emit({\n              data: data,\n              role: role\n            });\n            (_b = overlay.didDismissShorthand) === null || _b === void 0 ? void 0 : _b.emit({\n              data: data,\n              role: role\n            });\n            activeAnimations.delete(overlay);\n            /**\n             * Make overlay hidden again in case it is being reused.\n             * We can safely remove pointer-events: none as\n             * overlay-hidden will set display: none.\n             */\n\n            overlay.el.classList.add('overlay-hidden');\n            overlay.el.style.removeProperty('pointer-events');\n            _context4.next = 23;\n            break;\n\n          case 20:\n            _context4.prev = 20;\n            _context4.t0 = _context4[\"catch\"](4);\n            console.error(_context4.t0);\n\n          case 23:\n            overlay.el.remove();\n            return _context4.abrupt(\"return\", true);\n\n          case 25:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 20]]);\n  }));\n\n  return function dismiss(_x7, _x8, _x9, _x10, _x11, _x12, _x13) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getAppRoot = function getAppRoot(doc) {\n  return doc.querySelector('ion-app') || doc.body;\n};\n\nvar overlayAnimation = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(overlay, animationBuilder, baseEl, opts) {\n    var aniRoot, animation, activeAni;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // Make overlay visible in case it's hidden\n            baseEl.classList.remove('overlay-hidden');\n            aniRoot = overlay.el;\n            animation = animationBuilder(aniRoot, opts);\n\n            if (!overlay.animated || !config.getBoolean('animated', true)) {\n              animation.duration(0);\n            }\n\n            if (overlay.keyboardClose) {\n              animation.beforeAddWrite(function () {\n                var activeElement = baseEl.ownerDocument.activeElement;\n\n                if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.matches('input,ion-input, ion-textarea')) {\n                  activeElement.blur();\n                }\n              });\n            }\n\n            activeAni = activeAnimations.get(overlay) || [];\n            activeAnimations.set(overlay, [].concat(_toConsumableArray(activeAni), [animation]));\n            _context5.next = 9;\n            return animation.play();\n\n          case 9:\n            return _context5.abrupt(\"return\", true);\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function overlayAnimation(_x14, _x15, _x16, _x17) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar eventMethod = function eventMethod(element, eventName) {\n  var resolve;\n  var promise = new Promise(function (r) {\n    return resolve = r;\n  });\n  onceEvent(element, eventName, function (event) {\n    resolve(event.detail);\n  });\n  return promise;\n};\n\nvar onceEvent = function onceEvent(element, eventName, callback) {\n  var handler = function handler(ev) {\n    removeEventListener(element, eventName, handler);\n    callback(ev);\n  };\n\n  addEventListener(element, eventName, handler);\n};\n\nvar isCancel = function isCancel(role) {\n  return role === 'cancel' || role === BACKDROP;\n};\n\nvar defaultGate = function defaultGate(h) {\n  return h();\n};\n/**\n * Calls a developer provided method while avoiding\n * Angular Zones. Since the handler is provided by\n * the developer, we should throw any errors\n * received so that developer-provided bug\n * tracking software can log it.\n */\n\n\nvar safeCall = function safeCall(handler, arg) {\n  if (typeof handler === 'function') {\n    var jmp = config.get('_zoneGate', defaultGate);\n    return jmp(function () {\n      try {\n        return handler(arg);\n      } catch (e) {\n        throw e;\n      }\n    });\n  }\n\n  return undefined;\n};\n\nvar BACKDROP = 'backdrop';\nexport { BACKDROP as B, alertController as a, actionSheetController as b, popoverController as c, present as d, prepareOverlay as e, dismiss as f, eventMethod as g, focusFirstDescendant as h, isCancel as i, getOverlay as j, activeAnimations as k, loadingController as l, modalController as m, pickerController as p, safeCall as s, toastController as t };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/overlays.js"],"names":["b","getIonMode","c","config","OVERLAY_BACK_BUTTON_PRIORITY","componentOnReady","f","focusElement","a","addEventListener","removeEventListener","g","getElementRoot","lastId","activeAnimations","WeakMap","createController","tagName","create","options","createOverlay","dismiss","data","role","id","dismissOverlay","document","getTop","getOverlay","alertController","actionSheetController","loadingController","modalController","pickerController","popoverController","toastController","prepareOverlay","el","connectListeners","overlayIndex","hasAttribute","opts","window","customElements","whenDefined","then","element","createElement","classList","add","Object","assign","hasController","getAppRoot","appendChild","Promise","resolve","focusableQueryString","innerFocusableQueryString","focusFirstDescendant","ref","overlay","firstInput","querySelector","shadowRoot","focus","isOverlayHidden","contains","focusLastDescendant","inputs","Array","from","querySelectorAll","lastInput","length","trapKeyboardFocus","ev","doc","lastOverlay","target","trapScopedFocus","lastFocus","undefined","overlayRoot","overlayWrapper","activeElement","trapShadowFocus","backdropDismiss","detail","register","BACKDROP","key","overlayTag","reject","getOverlays","selector","filter","overlays","o","find","setRootAriaHidden","hidden","root","viewContainer","setAttribute","removeAttribute","present","name","iosEnterAnimation","mdEnterAnimation","presented","willPresent","emit","_a","willPresentShorthand","mode","animationBuilder","enterAnimation","get","overlayAnimation","completed","didPresent","_b","didPresentShorthand","focusPreviousElementOnDismiss","keyboardClose","overlayEl","previousElement","onDidDismiss","iosLeaveAnimation","mdLeaveAnimation","style","setProperty","willDismiss","willDismissShorthand","leaveAnimation","didDismiss","didDismissShorthand","delete","removeProperty","console","error","remove","body","baseEl","aniRoot","animation","animated","getBoolean","duration","beforeAddWrite","ownerDocument","matches","blur","activeAni","set","play","eventMethod","eventName","promise","r","onceEvent","event","callback","handler","isCancel","defaultGate","h","safeCall","arg","jmp","e","B","d","i","j","k","l","m","p","s","t"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { b as getIonMode, c as config } from './ionic-global.js';\nimport { OVERLAY_BACK_BUTTON_PRIORITY } from './hardware-back-button.js';\nimport { c as componentOnReady, f as focusElement, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\n\nlet lastId = 0;\nconst activeAnimations = new WeakMap();\nconst createController = (tagName) => {\n  return {\n    create(options) {\n      return createOverlay(tagName, options);\n    },\n    dismiss(data, role, id) {\n      return dismissOverlay(document, data, role, tagName, id);\n    },\n    async getTop() {\n      return getOverlay(document, tagName);\n    },\n  };\n};\nconst alertController = /*@__PURE__*/ createController('ion-alert');\nconst actionSheetController = /*@__PURE__*/ createController('ion-action-sheet');\nconst loadingController = /*@__PURE__*/ createController('ion-loading');\nconst modalController = /*@__PURE__*/ createController('ion-modal');\nconst pickerController = /*@__PURE__*/ createController('ion-picker');\nconst popoverController = /*@__PURE__*/ createController('ion-popover');\nconst toastController = /*@__PURE__*/ createController('ion-toast');\nconst prepareOverlay = (el) => {\n  if (typeof document !== 'undefined') {\n    connectListeners(document);\n  }\n  const overlayIndex = lastId++;\n  el.overlayIndex = overlayIndex;\n  if (!el.hasAttribute('id')) {\n    el.id = `ion-overlay-${overlayIndex}`;\n  }\n};\nconst createOverlay = (tagName, opts) => {\n  if (typeof window !== 'undefined' && typeof window.customElements !== 'undefined') {\n    return window.customElements.whenDefined(tagName).then(() => {\n      const element = document.createElement(tagName);\n      element.classList.add('overlay-hidden');\n      /**\n       * Convert the passed in overlay options into props\n       * that get passed down into the new overlay.\n       */\n      Object.assign(element, Object.assign(Object.assign({}, opts), { hasController: true }));\n      // append the overlay element to the document body\n      getAppRoot(document).appendChild(element);\n      return new Promise((resolve) => componentOnReady(element, resolve));\n    });\n  }\n  return Promise.resolve();\n};\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\nconst innerFocusableQueryString = 'input:not([type=hidden]), textarea, button, select';\nconst focusFirstDescendant = (ref, overlay) => {\n  let firstInput = ref.querySelector(focusableQueryString);\n  const shadowRoot = firstInput === null || firstInput === void 0 ? void 0 : firstInput.shadowRoot;\n  if (shadowRoot) {\n    // If there are no inner focusable elements, just focus the host element.\n    firstInput = shadowRoot.querySelector(innerFocusableQueryString) || firstInput;\n  }\n  if (firstInput) {\n    focusElement(firstInput);\n  }\n  else {\n    // Focus overlay instead of letting focus escape\n    overlay.focus();\n  }\n};\nconst isOverlayHidden = (overlay) => overlay.classList.contains('overlay-hidden');\nconst focusLastDescendant = (ref, overlay) => {\n  const inputs = Array.from(ref.querySelectorAll(focusableQueryString));\n  let lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n  const shadowRoot = lastInput === null || lastInput === void 0 ? void 0 : lastInput.shadowRoot;\n  if (shadowRoot) {\n    // If there are no inner focusable elements, just focus the host element.\n    lastInput = shadowRoot.querySelector(innerFocusableQueryString) || lastInput;\n  }\n  if (lastInput) {\n    lastInput.focus();\n  }\n  else {\n    // Focus overlay instead of letting focus escape\n    overlay.focus();\n  }\n};\n/**\n * Traps keyboard focus inside of overlay components.\n * Based on https://w3c.github.io/aria-practices/examples/dialog-modal/alertdialog.html\n * This includes the following components: Action Sheet, Alert, Loading, Modal,\n * Picker, and Popover.\n * Should NOT include: Toast\n */\nconst trapKeyboardFocus = (ev, doc) => {\n  const lastOverlay = getOverlay(doc, 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker,ion-popover');\n  const target = ev.target;\n  /**\n   * If no active overlay, ignore this event.\n   *\n   * If this component uses the shadow dom,\n   * this global listener is pointless\n   * since it will not catch the focus\n   * traps as they are inside the shadow root.\n   * We need to add a listener to the shadow root\n   * itself to ensure the focus trap works.\n   */\n  if (!lastOverlay || !target) {\n    return;\n  }\n  /**\n   * If the ion-disable-focus-trap class\n   * is present on an overlay, then this component\n   * instance has opted out of focus trapping.\n   * An example of this is when the sheet modal\n   * has a backdrop that is disabled. The content\n   * behind the sheet should be focusable until\n   * the backdrop is enabled.\n   */\n  if (lastOverlay.classList.contains('ion-disable-focus-trap')) {\n    return;\n  }\n  const trapScopedFocus = () => {\n    /**\n     * If we are focusing the overlay, clear\n     * the last focused element so that hitting\n     * tab activates the first focusable element\n     * in the overlay wrapper.\n     */\n    if (lastOverlay === target) {\n      lastOverlay.lastFocus = undefined;\n      /**\n       * Otherwise, we must be focusing an element\n       * inside of the overlay. The two possible options\n       * here are an input/button/etc or the ion-focus-trap\n       * element. The focus trap element is used to prevent\n       * the keyboard focus from leaving the overlay when\n       * using Tab or screen assistants.\n       */\n    }\n    else {\n      /**\n       * We do not want to focus the traps, so get the overlay\n       * wrapper element as the traps live outside of the wrapper.\n       */\n      const overlayRoot = getElementRoot(lastOverlay);\n      if (!overlayRoot.contains(target)) {\n        return;\n      }\n      const overlayWrapper = overlayRoot.querySelector('.ion-overlay-wrapper');\n      if (!overlayWrapper) {\n        return;\n      }\n      /**\n       * If the target is inside the wrapper, let the browser\n       * focus as normal and keep a log of the last focused element.\n       */\n      if (overlayWrapper.contains(target)) {\n        lastOverlay.lastFocus = target;\n      }\n      else {\n        /**\n         * Otherwise, we must have focused one of the focus traps.\n         * We need to wrap the focus to either the first element\n         * or the last element.\n         */\n        /**\n         * Once we call `focusFirstDescendant` and focus the first\n         * descendant, another focus event will fire which will\n         * cause `lastOverlay.lastFocus` to be updated before\n         * we can run the code after that. We will cache the value\n         * here to avoid that.\n         */\n        const lastFocus = lastOverlay.lastFocus;\n        // Focus the first element in the overlay wrapper\n        focusFirstDescendant(overlayWrapper, lastOverlay);\n        /**\n         * If the cached last focused element is the\n         * same as the active element, then we need\n         * to wrap focus to the last descendant. This happens\n         * when the first descendant is focused, and the user\n         * presses Shift + Tab. The previous line will focus\n         * the same descendant again (the first one), causing\n         * last focus to equal the active element.\n         */\n        if (lastFocus === doc.activeElement) {\n          focusLastDescendant(overlayWrapper, lastOverlay);\n        }\n        lastOverlay.lastFocus = doc.activeElement;\n      }\n    }\n  };\n  const trapShadowFocus = () => {\n    /**\n     * If the target is inside the wrapper, let the browser\n     * focus as normal and keep a log of the last focused element.\n     */\n    if (lastOverlay.contains(target)) {\n      lastOverlay.lastFocus = target;\n    }\n    else {\n      /**\n       * Otherwise, we are about to have focus\n       * go out of the overlay. We need to wrap\n       * the focus to either the first element\n       * or the last element.\n       */\n      /**\n       * Once we call `focusFirstDescendant` and focus the first\n       * descendant, another focus event will fire which will\n       * cause `lastOverlay.lastFocus` to be updated before\n       * we can run the code after that. We will cache the value\n       * here to avoid that.\n       */\n      const lastFocus = lastOverlay.lastFocus;\n      // Focus the first element in the overlay wrapper\n      focusFirstDescendant(lastOverlay, lastOverlay);\n      /**\n       * If the cached last focused element is the\n       * same as the active element, then we need\n       * to wrap focus to the last descendant. This happens\n       * when the first descendant is focused, and the user\n       * presses Shift + Tab. The previous line will focus\n       * the same descendant again (the first one), causing\n       * last focus to equal the active element.\n       */\n      if (lastFocus === doc.activeElement) {\n        focusLastDescendant(lastOverlay, lastOverlay);\n      }\n      lastOverlay.lastFocus = doc.activeElement;\n    }\n  };\n  if (lastOverlay.shadowRoot) {\n    trapShadowFocus();\n  }\n  else {\n    trapScopedFocus();\n  }\n};\nconst connectListeners = (doc) => {\n  if (lastId === 0) {\n    lastId = 1;\n    doc.addEventListener('focus', (ev) => {\n      trapKeyboardFocus(ev, doc);\n    }, true);\n    // handle back-button click\n    doc.addEventListener('ionBackButton', (ev) => {\n      const lastOverlay = getOverlay(doc);\n      if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n        ev.detail.register(OVERLAY_BACK_BUTTON_PRIORITY, () => {\n          return lastOverlay.dismiss(undefined, BACKDROP);\n        });\n      }\n    });\n    // handle ESC to close overlay\n    doc.addEventListener('keyup', (ev) => {\n      if (ev.key === 'Escape') {\n        const lastOverlay = getOverlay(doc);\n        if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n          lastOverlay.dismiss(undefined, BACKDROP);\n        }\n      }\n    });\n  }\n};\nconst dismissOverlay = (doc, data, role, overlayTag, id) => {\n  const overlay = getOverlay(doc, overlayTag, id);\n  if (!overlay) {\n    return Promise.reject('overlay does not exist');\n  }\n  return overlay.dismiss(data, role);\n};\nconst getOverlays = (doc, selector) => {\n  if (selector === undefined) {\n    selector = 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker,ion-popover,ion-toast';\n  }\n  return Array.from(doc.querySelectorAll(selector)).filter((c) => c.overlayIndex > 0);\n};\n/**\n * Returns an overlay element\n * @param doc The document to find the element within.\n * @param overlayTag The selector for the overlay, defaults to Ionic overlay components.\n * @param id The unique identifier for the overlay instance.\n * @returns The overlay element or `undefined` if no overlay element is found.\n */\nconst getOverlay = (doc, overlayTag, id) => {\n  const overlays = getOverlays(doc, overlayTag).filter((o) => !isOverlayHidden(o));\n  return id === undefined ? overlays[overlays.length - 1] : overlays.find((o) => o.id === id);\n};\n/**\n * When an overlay is presented, the main\n * focus is the overlay not the page content.\n * We need to remove the page content from the\n * accessibility tree otherwise when\n * users use \"read screen from top\" gestures with\n * TalkBack and VoiceOver, the screen reader will begin\n * to read the content underneath the overlay.\n *\n * We need a container where all page components\n * exist that is separate from where the overlays\n * are added in the DOM. For most apps, this element\n * is the top most ion-router-outlet. In the event\n * that devs are not using a router,\n * they will need to add the \"ion-view-container-root\"\n * id to the element that contains all of their views.\n *\n * TODO: If Framework supports having multiple top\n * level router outlets we would need to update this.\n * Example: One outlet for side menu and one outlet\n * for main content.\n */\nconst setRootAriaHidden = (hidden = false) => {\n  const root = getAppRoot(document);\n  const viewContainer = root.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n  if (!viewContainer) {\n    return;\n  }\n  if (hidden) {\n    viewContainer.setAttribute('aria-hidden', 'true');\n  }\n  else {\n    viewContainer.removeAttribute('aria-hidden');\n  }\n};\nconst present = async (overlay, name, iosEnterAnimation, mdEnterAnimation, opts) => {\n  var _a, _b;\n  if (overlay.presented) {\n    return;\n  }\n  setRootAriaHidden(true);\n  overlay.presented = true;\n  overlay.willPresent.emit();\n  (_a = overlay.willPresentShorthand) === null || _a === void 0 ? void 0 : _a.emit();\n  const mode = getIonMode(overlay);\n  // get the user's animation fn if one was provided\n  const animationBuilder = overlay.enterAnimation\n    ? overlay.enterAnimation\n    : config.get(name, mode === 'ios' ? iosEnterAnimation : mdEnterAnimation);\n  const completed = await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n  if (completed) {\n    overlay.didPresent.emit();\n    (_b = overlay.didPresentShorthand) === null || _b === void 0 ? void 0 : _b.emit();\n  }\n  /**\n   * When an overlay that steals focus\n   * is dismissed, focus should be returned\n   * to the element that was focused\n   * prior to the overlay opening. Toast\n   * does not steal focus and is excluded\n   * from returning focus as a result.\n   */\n  if (overlay.el.tagName !== 'ION-TOAST') {\n    focusPreviousElementOnDismiss(overlay.el);\n  }\n  if (overlay.keyboardClose) {\n    overlay.el.focus();\n  }\n};\n/**\n * When an overlay component is dismissed,\n * focus should be returned to the element\n * that presented the overlay. Otherwise\n * focus will be set on the body which\n * means that people using screen readers\n * or tabbing will need to re-navigate\n * to where they were before they\n * opened the overlay.\n */\nconst focusPreviousElementOnDismiss = async (overlayEl) => {\n  let previousElement = document.activeElement;\n  if (!previousElement) {\n    return;\n  }\n  const shadowRoot = previousElement === null || previousElement === void 0 ? void 0 : previousElement.shadowRoot;\n  if (shadowRoot) {\n    // If there are no inner focusable elements, just focus the host element.\n    previousElement = shadowRoot.querySelector(innerFocusableQueryString) || previousElement;\n  }\n  await overlayEl.onDidDismiss();\n  previousElement.focus();\n};\nconst dismiss = async (overlay, data, role, name, iosLeaveAnimation, mdLeaveAnimation, opts) => {\n  var _a, _b;\n  if (!overlay.presented) {\n    return false;\n  }\n  setRootAriaHidden(false);\n  overlay.presented = false;\n  try {\n    // Overlay contents should not be clickable during dismiss\n    overlay.el.style.setProperty('pointer-events', 'none');\n    overlay.willDismiss.emit({ data, role });\n    (_a = overlay.willDismissShorthand) === null || _a === void 0 ? void 0 : _a.emit({ data, role });\n    const mode = getIonMode(overlay);\n    const animationBuilder = overlay.leaveAnimation\n      ? overlay.leaveAnimation\n      : config.get(name, mode === 'ios' ? iosLeaveAnimation : mdLeaveAnimation);\n    // If dismissed via gesture, no need to play leaving animation again\n    if (role !== 'gesture') {\n      await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n    }\n    overlay.didDismiss.emit({ data, role });\n    (_b = overlay.didDismissShorthand) === null || _b === void 0 ? void 0 : _b.emit({ data, role });\n    activeAnimations.delete(overlay);\n    /**\n     * Make overlay hidden again in case it is being reused.\n     * We can safely remove pointer-events: none as\n     * overlay-hidden will set display: none.\n     */\n    overlay.el.classList.add('overlay-hidden');\n    overlay.el.style.removeProperty('pointer-events');\n  }\n  catch (err) {\n    console.error(err);\n  }\n  overlay.el.remove();\n  return true;\n};\nconst getAppRoot = (doc) => {\n  return doc.querySelector('ion-app') || doc.body;\n};\nconst overlayAnimation = async (overlay, animationBuilder, baseEl, opts) => {\n  // Make overlay visible in case it's hidden\n  baseEl.classList.remove('overlay-hidden');\n  const aniRoot = overlay.el;\n  const animation = animationBuilder(aniRoot, opts);\n  if (!overlay.animated || !config.getBoolean('animated', true)) {\n    animation.duration(0);\n  }\n  if (overlay.keyboardClose) {\n    animation.beforeAddWrite(() => {\n      const activeElement = baseEl.ownerDocument.activeElement;\n      if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.matches('input,ion-input, ion-textarea')) {\n        activeElement.blur();\n      }\n    });\n  }\n  const activeAni = activeAnimations.get(overlay) || [];\n  activeAnimations.set(overlay, [...activeAni, animation]);\n  await animation.play();\n  return true;\n};\nconst eventMethod = (element, eventName) => {\n  let resolve;\n  const promise = new Promise((r) => (resolve = r));\n  onceEvent(element, eventName, (event) => {\n    resolve(event.detail);\n  });\n  return promise;\n};\nconst onceEvent = (element, eventName, callback) => {\n  const handler = (ev) => {\n    removeEventListener(element, eventName, handler);\n    callback(ev);\n  };\n  addEventListener(element, eventName, handler);\n};\nconst isCancel = (role) => {\n  return role === 'cancel' || role === BACKDROP;\n};\nconst defaultGate = (h) => h();\n/**\n * Calls a developer provided method while avoiding\n * Angular Zones. Since the handler is provided by\n * the developer, we should throw any errors\n * received so that developer-provided bug\n * tracking software can log it.\n */\nconst safeCall = (handler, arg) => {\n  if (typeof handler === 'function') {\n    const jmp = config.get('_zoneGate', defaultGate);\n    return jmp(() => {\n      try {\n        return handler(arg);\n      }\n      catch (e) {\n        throw e;\n      }\n    });\n  }\n  return undefined;\n};\nconst BACKDROP = 'backdrop';\n\nexport { BACKDROP as B, alertController as a, actionSheetController as b, popoverController as c, present as d, prepareOverlay as e, dismiss as f, eventMethod as g, focusFirstDescendant as h, isCancel as i, getOverlay as j, activeAnimations as k, loadingController as l, modalController as m, pickerController as p, safeCall as s, toastController as t };\n"]},"metadata":{},"sourceType":"module"}