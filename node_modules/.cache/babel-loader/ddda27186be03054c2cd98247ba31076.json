{"ast":null,"code":"function Camera() {\n  const screenshot = document.getElementById('screenshotButton');\n  const cameraOptions = document.getElementById('select');\n  const video = document.getElementById('video');\n  const canvas = document.getElementById('canvas');\n  const screenshotImage = document.getElementById('display-style');\n  const screenshotControls = document.getElementById('screenshotControls');\n  const constraints = {\n    video: {\n      width: {\n        min: 1280,\n        ideal: 1920,\n        max: 2560\n      },\n      height: {\n        min: 720,\n        ideal: 1080,\n        max: 1440\n      }\n    }\n  };\n\n  cameraOptions.onchange = () => {\n    const updatedConstraints = { ...constraints,\n      deviceId: {\n        exact: cameraOptions.value\n      }\n    };\n    startStream(updatedConstraints, video, screenshot);\n  };\n\n  if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n    const updatedConstraints = { ...constraints,\n      deviceId: {\n        exact: cameraOptions.value\n      }\n    };\n    startStream(updatedConstraints, video, screenshot);\n  }\n\n  const doScreenshot = () => {\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    canvas.getContext('2d').drawImage(video, 0, 0);\n    var image = document.createElement('img');\n    image.id = \"screenshotImage\";\n    image.className = \"screenshotImage\";\n    image.src = canvas.toDataURL('image/jpeg', 1.0);\n    screenshotImage.appendChild(image);\n    screenshotControls.style.display = \"block\";\n    /*\n    var ssControlButtons = document.createElement('div');\n    ssControlButtons.id = \"ssControlButtons\";\n    screenshotImage.appendChild(ssControlButtons);\n     const screenshotButtons = document.getElementById('ssControlButtons');\n     var usePhotoButton = document.createElement('button');\n    usePhotoButton.id = \"okButton\";\n    screenshotButtons.appendChild(usePhotoButton);\n     var retakeButton = document.createElement('button');\n    retakeButton.id = \"retakeButton\";\n    screenshotButtons.appendChild(retakeButton);\n    */\n  };\n\n  screenshot.onclick = doScreenshot;\n\n  const getCameraSelection = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const videoDevices = devices.filter(device => device.kind === 'videoinput');\n    const options = videoDevices.map(videoDevice => {\n      return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\n    });\n    cameraOptions.innerHTML = options.join('');\n  };\n\n  getCameraSelection();\n}\n\n_c = Camera;\n\nasync function startStream(constraints, video, screenshot) {\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  handleStream(stream, video, screenshot);\n}\n\nfunction handleStream(stream, video, screenshot) {\n  video.srcObject = stream;\n  screenshot.classList.remove('d-none');\n}\n\nexport default Camera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/Camera.js"],"names":["Camera","screenshot","document","getElementById","cameraOptions","video","canvas","screenshotImage","screenshotControls","constraints","width","min","ideal","max","height","onchange","updatedConstraints","deviceId","exact","value","startStream","navigator","mediaDevices","getUserMedia","doScreenshot","videoWidth","videoHeight","getContext","drawImage","image","createElement","id","className","src","toDataURL","appendChild","style","display","onclick","getCameraSelection","devices","enumerateDevices","videoDevices","filter","device","kind","options","map","videoDevice","label","innerHTML","join","stream","handleStream","srcObject","classList","remove"],"mappings":"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","sourcesContent":["function Camera(){\n    const screenshot = document.getElementById('screenshotButton');\n    const cameraOptions = document.getElementById('select');\n    const video = document.getElementById('video');\n    const canvas = document.getElementById('canvas');\n    const screenshotImage = document.getElementById('display-style');\n    const screenshotControls = document.getElementById('screenshotControls');\n\n    const constraints = {\n        video: {\n            width: {\n            min: 1280,\n            ideal: 1920,\n            max: 2560,\n            },\n            height: {\n            min: 720,\n            ideal: 1080,\n            max: 1440\n            },\n        }\n    };\n\n    cameraOptions.onchange = () => {\n        const updatedConstraints = {\n            ...constraints,\n            deviceId: {\n            exact: cameraOptions.value\n            }\n        };\n\n        startStream(updatedConstraints, video, screenshot);\n    };\n\n    if ('mediaDevices' in navigator && navigator.mediaDevices.getUserMedia) {\n        const updatedConstraints = {\n        ...constraints,\n        deviceId: {\n            exact: cameraOptions.value\n        }\n        };\n        startStream(updatedConstraints, video, screenshot);\n    }\n\n    const doScreenshot = () => {\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n        canvas.getContext('2d').drawImage(video, 0, 0);\n\n        var image = document.createElement('img');\n        image.id = \"screenshotImage\";\n        image.className = \"screenshotImage\";\n        image.src = canvas.toDataURL('image/jpeg', 1.0);\n        screenshotImage.appendChild(image);\n\n\n\n        screenshotControls.style.display = \"block\";\n        /*\n        var ssControlButtons = document.createElement('div');\n        ssControlButtons.id = \"ssControlButtons\";\n        screenshotImage.appendChild(ssControlButtons);\n\n        const screenshotButtons = document.getElementById('ssControlButtons');\n\n        var usePhotoButton = document.createElement('button');\n        usePhotoButton.id = \"okButton\";\n        screenshotButtons.appendChild(usePhotoButton);\n\n        var retakeButton = document.createElement('button');\n        retakeButton.id = \"retakeButton\";\n        screenshotButtons.appendChild(retakeButton);\n        */\n    };\n\n    screenshot.onclick = doScreenshot;\n\n    const getCameraSelection = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const videoDevices = devices.filter(device => device.kind === 'videoinput');\n        const options = videoDevices.map(videoDevice => {\n            return `<option value=\"${videoDevice.deviceId}\">${videoDevice.label}</option>`;\n        });\n        cameraOptions.innerHTML = options.join('');\n    };\n\n    getCameraSelection();\n}\n\nasync function startStream(constraints, video, screenshot) {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    handleStream(stream, video, screenshot);\n}\n\nfunction handleStream(stream, video, screenshot) {\n    video.srcObject = stream;\n    screenshot.classList.remove('d-none');\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}