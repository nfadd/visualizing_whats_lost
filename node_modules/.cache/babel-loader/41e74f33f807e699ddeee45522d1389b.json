{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, g as getScrollElement } from './index8.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\nconst ReorderGroup = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0\n    /* Idle */\n    ;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n\n    this.disabled = true;\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: detail => this.canStart(detail),\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: () => this.onEnd()\n    });\n    this.disabledChanged();\n  }\n\n  disconnectedCallback() {\n    this.onEnd();\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n\n\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0\n    /* Idle */\n    ) {\n      return false;\n    }\n\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n\n    if (!reorderEl) {\n      return false;\n    }\n\n    const item = findReorderItem(reorderEl, this.el);\n\n    if (!item) {\n      return false;\n    }\n\n    ev.data = item;\n    return true;\n  }\n\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = this.selectedItemEl = ev.data;\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n\n    if (!children || children.length === 0) {\n      return;\n    }\n\n    let sum = 0;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    } else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1\n    /* Active */\n    ;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n\n    if (!selectedItem) {\n      return;\n    } // Scroll if we reach the scroll margins\n\n\n    const scroll = this.autoscroll(ev.currentY); // // Get coordinate\n\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    } // Update selected item position\n\n\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2\n    /* Complete */\n    ;\n\n    if (!selectedItemEl) {\n      this.state = 0\n      /* Idle */\n      ;\n      return;\n    }\n\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    } else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this)\n      });\n    }\n\n    hapticSelectionEnd();\n  }\n\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n\n    if (selectedItemEl && this.state === 2\n    /* Complete */\n    ) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n\n      if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n        const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0\n      /* Idle */\n      ;\n    }\n\n    return listOrReorder;\n  }\n\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights; // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n\n\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      } else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n\n      style['transform'] = value;\n    }\n  }\n\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n\n    let amount = 0;\n\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    } else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0\n        /* Idle */\n\n      }\n    });\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return reorderGroupCss;\n  }\n\n}, [0, \"ion-reorder-group\", {\n  \"disabled\": [4],\n  \"state\": [32],\n  \"complete\": [64]\n}]);\n\nconst indexForItem = element => {\n  return element['$ionIndex'];\n};\n\nconst findReorderItem = (node, container) => {\n  let parent;\n\n  while (node) {\n    parent = node.parentElement;\n\n    if (parent === container) {\n      return node;\n    }\n\n    node = parent;\n  }\n\n  return undefined;\n};\n\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\n\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-reorder-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-reorder-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ReorderGroup);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonReorderGroup = ReorderGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonReorderGroup, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-reorder-group.js"],"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","a","findClosestIonContent","g","getScrollElement","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","reorderGroupCss","ReorderGroup","constructor","__registerHost","ionItemReorder","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabled","disabledChanged","gesture","enable","connectedCallback","contentEl","el","scrollEl","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","ev","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","Promise","resolve","completeSync","selectedItemEl","target","event","reorderEl","closest","item","findReorderItem","data","preventDefault","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","reorderMove","style","transform","emit","from","to","bind","len","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","render","mode","class","watchers","element","node","container","parent","parentElement","array","splice","slice","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonReorderGroup","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, g as getScrollElement } from './index8.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\n\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0 /* Idle */;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n    this.disabled = true;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: (detail) => this.canStart(detail),\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: () => this.onEnd(),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    this.onEnd();\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n      return false;\n    }\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n    if (!reorderEl) {\n      return false;\n    }\n    const item = findReorderItem(reorderEl, this.el);\n    if (!item) {\n      return false;\n    }\n    ev.data = item;\n    return true;\n  }\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = (this.selectedItemEl = ev.data);\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n    if (!children || children.length === 0) {\n      return;\n    }\n    let sum = 0;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    }\n    else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1 /* Active */;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n    if (!selectedItem) {\n      return;\n    }\n    // Scroll if we reach the scroll margins\n    const scroll = this.autoscroll(ev.currentY);\n    // // Get coordinate\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    }\n    // Update selected item position\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2 /* Complete */;\n    if (!selectedItemEl) {\n      this.state = 0 /* Idle */;\n      return;\n    }\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    }\n    else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this),\n      });\n    }\n    hapticSelectionEnd();\n  }\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n    if (selectedItemEl && this.state === 2 /* Complete */) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n      if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n        const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0 /* Idle */;\n    }\n    return listOrReorder;\n  }\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      }\n      else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n      style['transform'] = value;\n    }\n  }\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n    let amount = 0;\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    }\n    else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0 /* Idle */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return reorderGroupCss; }\n}, [0, \"ion-reorder-group\", {\n    \"disabled\": [4],\n    \"state\": [32],\n    \"complete\": [64]\n  }]);\nconst indexForItem = (element) => {\n  return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n  let parent;\n  while (node) {\n    parent = node.parentElement;\n    if (parent === container) {\n      return node;\n    }\n    node = parent;\n  }\n  return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-reorder-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-reorder-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, ReorderGroup);\n      }\n      break;\n  } });\n}\n\nconst IonReorderGroup = ReorderGroup;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonReorderGroup, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}