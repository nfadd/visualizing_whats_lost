{"ast":null,"code":"import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n  return '<span id=\"display-style\" className=\"display-style\">' + '<video id=\"video\" autoPlay></video>' + '<canvas hidden id=\"canvas\" className=\"canvas\"></canvas>' + '<div id=\"video-options\" className=\"video-options\">' + '<select name=\"\" id=\"select\" className=\"custom-select\">' + '<option value=\"\">Select camera</option>' + '</select>' + '</div>' + '<div id=\"screenshotControls\" className=\"screenshotControls\">' + '<button id=\"retakePhoto\">Retake</button>' + '<button id=\"usePhoto\">Use Photo</button>' + '</div>' + '<div id=\"controls\" className=\"controls\">' + '<button id=\"screenshotButton\" className=\"screenshotButton\"><img src=\"https://www.pikpng.com/pngl/m/348-3481477_iphone-camera-icon-transparent-photograph-clipart.png\" /></button>' + '</div>' + '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\">×</a>' + '</span>';\n}\n\nasync function handleScreen(screen) {\n  makeFullscreen(screen);\n  const constraints = {\n    video: {\n      width: {\n        min: 1280,\n        ideal: 1920,\n        max: 2560\n      },\n      height: {\n        min: 720,\n        ideal: 1080,\n        max: 1440\n      }\n    }\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n  if (stream) {\n    screen.innerHTML = cameraScreen();\n    screen.style.display = \"block\"; //makeFullscreen(screen);\n\n    const screenshotControls = document.getElementById('screenshotControls');\n    screenshotControls.style.display = \"none\";\n    camera();\n    const closeButton = document.getElementById(\"close-button\");\n\n    closeButton.onclick = () => {\n      handleClose();\n    };\n  }\n}\n\nfunction handleClose() {\n  const screen = document.getElementById(\"display-cover\");\n  screen.style.display = \"none\";\n}\n\nfunction makeFullscreen(screen) {\n  if (screen.requestFullscreen) {\n    screen.requestFullscreen();\n  } else if (screen.mozRequestFullScreen) {\n    // Firefox\n    screen.mozRequestFullScreen();\n  } else if (screen.webkitRequestFullscreen) {\n    // Chrome, Safari, and Opera\n    screen.webkitRequestFullscreen();\n  } else if (screen.msRequestFullscreen) {\n    // IE/Edge\n    screen.msRequestFullscreen();\n  }\n}\n\nexport default handleScreen;","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/CameraScreen.js"],"names":["camera","cameraScreen","handleScreen","screen","makeFullscreen","constraints","video","width","min","ideal","max","height","stream","navigator","mediaDevices","getUserMedia","innerHTML","style","display","screenshotControls","document","getElementById","closeButton","onclick","handleClose","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen"],"mappings":"AAAA,OAAO,oBAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;;AAEA,SAASC,YAAT,GAAwB;AACpB,SACI,wDACI,qCADJ,GAEI,yDAFJ,GAII,oDAJJ,GAKQ,wDALR,GAMY,yCANZ,GAOQ,WAPR,GAQI,QARJ,GAUI,8DAVJ,GAWQ,0CAXR,GAYQ,0CAZR,GAaI,QAbJ,GAeI,0CAfJ,GAgBQ,mLAhBR,GAiBI,QAjBJ,GAkBI,+EAlBJ,GAmBA,SApBJ;AAsBH;;AAED,eAAeC,YAAf,CAA4BC,MAA5B,EAAmC;AAC/BC,EAAAA,cAAc,CAACD,MAAD,CAAd;AACA,QAAME,WAAW,GAAG;AAChBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE,IADF;AAEHC,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,GAAG,EAAE;AAHF,OADJ;AAMHC,MAAAA,MAAM,EAAE;AACJH,QAAAA,GAAG,EAAE,GADD;AAEJC,QAAAA,KAAK,EAAE,IAFH;AAGJC,QAAAA,GAAG,EAAE;AAHD;AANL;AADS,GAApB;AAcA,QAAME,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCV,WAApC,CAArB;;AACA,MAAIO,MAAJ,EAAW;AACPT,IAAAA,MAAM,CAACa,SAAP,GAAmBf,YAAY,EAA/B;AACAE,IAAAA,MAAM,CAACc,KAAP,CAAaC,OAAb,GAAuB,OAAvB,CAFO,CAGP;;AAEA,UAAMC,kBAAkB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAA3B;AACAF,IAAAA,kBAAkB,CAACF,KAAnB,CAAyBC,OAAzB,GAAmC,MAAnC;AAEAlB,IAAAA,MAAM;AAEN,UAAMsB,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB;;AACAC,IAAAA,WAAW,CAACC,OAAZ,GAAsB,MAAM;AACxBC,MAAAA,WAAW;AACd,KAFD;AAGH;AACJ;;AAED,SAASA,WAAT,GAAsB;AAClB,QAAMrB,MAAM,GAAGiB,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAf;AACAlB,EAAAA,MAAM,CAACc,KAAP,CAAaC,OAAb,GAAuB,MAAvB;AACH;;AAED,SAASd,cAAT,CAAwBD,MAAxB,EAAgC;AAC5B,MAAIA,MAAM,CAACsB,iBAAX,EAA8B;AAC1BtB,IAAAA,MAAM,CAACsB,iBAAP;AACH,GAFD,MAEO,IAAItB,MAAM,CAACuB,oBAAX,EAAiC;AAAE;AACtCvB,IAAAA,MAAM,CAACuB,oBAAP;AACH,GAFM,MAEA,IAAIvB,MAAM,CAACwB,uBAAX,EAAoC;AAAE;AACzCxB,IAAAA,MAAM,CAACwB,uBAAP;AACH,GAFM,MAEA,IAAIxB,MAAM,CAACyB,mBAAX,EAAgC;AAAE;AACrCzB,IAAAA,MAAM,CAACyB,mBAAP;AACH;AACJ;;AAED,eAAe1B,YAAf","sourcesContent":["import './CameraScreen.css';\nimport camera from './Camera';\n\nfunction cameraScreen() {\n    return(\n        '<span id=\"display-style\" className=\"display-style\">' +\n            '<video id=\"video\" autoPlay></video>' +\n            '<canvas hidden id=\"canvas\" className=\"canvas\"></canvas>' +\n            \n            '<div id=\"video-options\" className=\"video-options\">' +\n                '<select name=\"\" id=\"select\" className=\"custom-select\">' +\n                    '<option value=\"\">Select camera</option>' +\n                '</select>' +\n            '</div>' +\n\n            '<div id=\"screenshotControls\" className=\"screenshotControls\">' +\n                '<button id=\"retakePhoto\">Retake</button>' +\n                '<button id=\"usePhoto\">Use Photo</button>' +\n            '</div>' +\n            \n            '<div id=\"controls\" className=\"controls\">' +\n                '<button id=\"screenshotButton\" className=\"screenshotButton\"><img src=\"https://www.pikpng.com/pngl/m/348-3481477_iphone-camera-icon-transparent-photograph-clipart.png\" /></button>' +\n            '</div>' +\n            '<a href=\"javascript:void(0)\" id=\"close-button\" className=\"close-button\">×</a>' +\n        '</span>'\n    );\n}\n\nasync function handleScreen(screen){\n    makeFullscreen(screen);\n    const constraints = {\n        video: {\n            width: {\n                min: 1280,\n                ideal: 1920,\n                max: 2560,\n            },\n            height: {\n                min: 720,\n                ideal: 1080,\n                max: 1440\n            },\n        }\n    };\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    if (stream){\n        screen.innerHTML = cameraScreen();\n        screen.style.display = \"block\";\n        //makeFullscreen(screen);\n\n        const screenshotControls = document.getElementById('screenshotControls');\n        screenshotControls.style.display = \"none\";\n\n        camera();\n\n        const closeButton = document.getElementById(\"close-button\");\n        closeButton.onclick = () => {\n            handleClose();\n        }\n    }\n}\n\nfunction handleClose(){\n    const screen = document.getElementById(\"display-cover\");\n    screen.style.display = \"none\";\n}\n\nfunction makeFullscreen(screen) {\n    if (screen.requestFullscreen) {\n        screen.requestFullscreen();\n    } else if (screen.mozRequestFullScreen) { // Firefox\n        screen.mozRequestFullScreen();\n    } else if (screen.webkitRequestFullscreen) { // Chrome, Safari, and Opera\n        screen.webkitRequestFullscreen();\n    } else if (screen.msRequestFullscreen) { // IE/Edge\n        screen.msRequestFullscreen();\n    }\n}\n\nexport default handleScreen;"]},"metadata":{},"sourceType":"module"}