{"ast":null,"code":"import{startCamera}from'./Camera';var latitude=0,longitude=0;var userLatitude=0,userLongitude=0;function setPinLatLong(lat,long){latitude=lat;longitude=long;}function getPinLatLong(){return[latitude,longitude];}function setUserLatLong(lat,long){userLatitude=lat;userLongitude=long;}function getUserLatLong(){return[userLatitude,userLongitude];}function locationChecker(){var pinCoords=getPinLatLong();var pinLat=pinCoords[0];var pinLong=pinCoords[1];var userCoords=getUserLatLong();var userLat=userCoords[0];var userLong=userCoords[1];console.log(\"pin lat: \".concat(pinLat,\", pin long: \").concat(pinLong));console.log(\"user lat: \".concat(userLat,\", user long: \").concat(userLong));if(calculateDistance(userLat,userLong,pinLat,pinLong)>100){alert(\"You must be closer to location to take a picture.\");}else{startCamera();}}function calculateDistance(lat1,long1,lat2,long2){var R=6371000;// Radius of the earth in meters\nvar dLat=deg2rad(lat2-lat1);var dLong=deg2rad(long2-long1);var a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(deg2rad(lat1))*Math.cos(deg2rad(lat2))*Math.sin(dLong/2)*Math.sin(dLong/2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));var d=R*c;// Distance in meters\nconsole.log(\"distance: \".concat(d));return d;}function deg2rad(deg){return deg*(Math.PI/180);}export{setPinLatLong,setUserLatLong,locationChecker};","map":{"version":3,"names":["startCamera","latitude","longitude","userLatitude","userLongitude","setPinLatLong","lat","long","getPinLatLong","setUserLatLong","getUserLatLong","locationChecker","pinCoords","pinLat","pinLong","userCoords","userLat","userLong","console","log","calculateDistance","alert","lat1","long1","lat2","long2","R","dLat","deg2rad","dLong","a","Math","sin","cos","c","atan2","sqrt","d","deg","PI"],"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/src/Location.js"],"sourcesContent":["import { startCamera } from './Camera';\n\n\nvar [latitude, longitude] = [0, 0];\nvar [userLatitude, userLongitude] = [0, 0];\n\nfunction setPinLatLong(lat, long) {\n    latitude = lat;\n    longitude = long;\n}\n\nfunction getPinLatLong() {\n    return [latitude, longitude]\n}\n\nfunction setUserLatLong(lat, long) {\n    userLatitude = lat;\n    userLongitude = long;\n}\n\nfunction getUserLatLong() {\n    return [userLatitude, userLongitude]\n}\n\nfunction locationChecker() {\n    const pinCoords = getPinLatLong();\n    const pinLat = pinCoords[0];\n    const pinLong = pinCoords[1];\n\n    const userCoords = getUserLatLong();\n    const userLat = userCoords[0];\n    const userLong = userCoords[1];\n\n    console.log(`pin lat: ${pinLat}, pin long: ${pinLong}`)\n    console.log(`user lat: ${userLat}, user long: ${userLong}`)\n\n    if(calculateDistance(userLat, userLong, pinLat, pinLong) > 100) {\n        alert(\"You must be closer to location to take a picture.\");\n    } else {\n        startCamera();\n    }\n}\n\nfunction calculateDistance(lat1, long1, lat2, long2) {\n    var R = 6371000; // Radius of the earth in meters\n    var dLat = deg2rad(lat2-lat1);\n    var dLong = deg2rad(long2-long1); \n    var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLong/2) * Math.sin(dLong/2); \n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    var d = R * c; // Distance in meters\n\n    console.log(`distance: ${d}`);\n    return d;\n}\n\nfunction deg2rad(deg) {\n    return deg * (Math.PI/180)\n}\n\nexport { setPinLatLong, setUserLatLong, locationChecker };"],"mappings":"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"},"metadata":{},"sourceType":"module"}