{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  never: ''\n};\nconst SplitPane = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n\n    this.when = QUERY['lg'];\n  }\n\n  visibleChanged(visible) {\n    const detail = {\n      visible,\n      isPane: this.isPane.bind(this)\n    };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-split-pane');\n    }\n\n    this.styleChildren();\n    this.updateState();\n  }\n\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n\n  updateState() {\n    if (!Build.isBrowser) {\n      return;\n    }\n\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    } // Check if the split-pane is disabled\n\n\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    } // When query is a boolean\n\n\n    const query = this.when;\n\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    } // When query is a string, let's find first if it is a shortcut\n\n\n    const mediaQuery = QUERY[query] || query; // Media query is empty or null, we hide it\n\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = q => {\n        this.visible = q.matches;\n      };\n\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n\n      this.rmL = () => mediaList.removeListener(callback);\n\n      this.visible = mediaList.matches;\n    }\n  }\n\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n\n  styleChildren() {\n    if (!Build.isBrowser) {\n      return;\n    }\n\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n\n        foundMain = true;\n      }\n\n      setPaneClass(child, isMain);\n    }\n\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible\n      }\n    }, h(\"slot\", null));\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"visible\": [\"visibleChanged\"],\n      \"disabled\": [\"updateState\"],\n      \"when\": [\"updateState\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: splitPaneIosCss,\n      md: splitPaneMdCss\n    };\n  }\n\n}, [33, \"ion-split-pane\", {\n  \"contentId\": [513, \"content-id\"],\n  \"disabled\": [4],\n  \"when\": [8],\n  \"visible\": [32]\n}]);\n\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  } else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-split-pane\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-split-pane\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, SplitPane);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonSplitPane = SplitPane;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonSplitPane, defineCustomElement };","map":{"version":3,"sources":["/Users/nickfaddis/Desktop/SLU/csCapstone/visualizing_whats_lost/react-capacitor-example/node_modules/@ionic/core/components/ion-split-pane.js"],"names":["proxyCustomElement","HTMLElement","createEvent","Build","h","Host","b","getIonMode","splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","xs","sm","md","lg","xl","never","SplitPane","constructor","__registerHost","__attachShadow","ionSplitPaneVisible","visible","disabled","when","visibleChanged","detail","isPane","bind","emit","connectedCallback","customElements","whenDefined","styleChildren","updateState","disconnectedCallback","rmL","undefined","isBrowser","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","render","mode","class","watchers","style","ios","toAdd","toRemove","add","remove","defineCustomElement$1","components","forEach","tagName","get","define","IonSplitPane","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, Build, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\n\nconst SPLIT_PANE_MAIN = 'split-pane-main';\nconst SPLIT_PANE_SIDE = 'split-pane-side';\nconst QUERY = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 576px)',\n  md: '(min-width: 768px)',\n  lg: '(min-width: 992px)',\n  xl: '(min-width: 1200px)',\n  never: '',\n};\nconst SplitPane = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\n    this.visible = false;\n    /**\n     * If `true`, the split pane will be hidden.\n     */\n    this.disabled = false;\n    /**\n     * When the split-pane should be shown.\n     * Can be a CSS media query expression, or a shortcut expression.\n     * Can also be a boolean expression.\n     */\n    this.when = QUERY['lg'];\n  }\n  visibleChanged(visible) {\n    const detail = { visible, isPane: this.isPane.bind(this) };\n    this.ionSplitPaneVisible.emit(detail);\n  }\n  async connectedCallback() {\n    // TODO: connectedCallback is fired in CE build\n    // before WC is defined. This needs to be fixed in Stencil.\n    if (typeof customElements !== 'undefined') {\n      await customElements.whenDefined('ion-split-pane');\n    }\n    this.styleChildren();\n    this.updateState();\n  }\n  disconnectedCallback() {\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n  }\n  updateState() {\n    if (!Build.isBrowser) {\n      return;\n    }\n    if (this.rmL) {\n      this.rmL();\n      this.rmL = undefined;\n    }\n    // Check if the split-pane is disabled\n    if (this.disabled) {\n      this.visible = false;\n      return;\n    }\n    // When query is a boolean\n    const query = this.when;\n    if (typeof query === 'boolean') {\n      this.visible = query;\n      return;\n    }\n    // When query is a string, let's find first if it is a shortcut\n    const mediaQuery = QUERY[query] || query;\n    // Media query is empty or null, we hide it\n    if (mediaQuery.length === 0) {\n      this.visible = false;\n      return;\n    }\n    if (window.matchMedia) {\n      // Listen on media query\n      const callback = (q) => {\n        this.visible = q.matches;\n      };\n      const mediaList = window.matchMedia(mediaQuery);\n      mediaList.addListener(callback);\n      this.rmL = () => mediaList.removeListener(callback);\n      this.visible = mediaList.matches;\n    }\n  }\n  isPane(element) {\n    if (!this.visible) {\n      return false;\n    }\n    return element.parentElement === this.el && element.classList.contains(SPLIT_PANE_SIDE);\n  }\n  styleChildren() {\n    if (!Build.isBrowser) {\n      return;\n    }\n    const contentId = this.contentId;\n    const children = this.el.children;\n    const nu = this.el.childElementCount;\n    let foundMain = false;\n    for (let i = 0; i < nu; i++) {\n      const child = children[i];\n      const isMain = contentId !== undefined && child.id === contentId;\n      if (isMain) {\n        if (foundMain) {\n          console.warn('split pane cannot have more than one main node');\n          return;\n        }\n        foundMain = true;\n      }\n      setPaneClass(child, isMain);\n    }\n    if (!foundMain) {\n      console.warn('split pane does not have a specified main node');\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        // Used internally for styling\n        [`split-pane-${mode}`]: true,\n        'split-pane-visible': this.visible,\n      } }, h(\"slot\", null)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"visible\": [\"visibleChanged\"],\n    \"disabled\": [\"updateState\"],\n    \"when\": [\"updateState\"]\n  }; }\n  static get style() { return {\n    ios: splitPaneIosCss,\n    md: splitPaneMdCss\n  }; }\n}, [33, \"ion-split-pane\", {\n    \"contentId\": [513, \"content-id\"],\n    \"disabled\": [4],\n    \"when\": [8],\n    \"visible\": [32]\n  }]);\nconst setPaneClass = (el, isMain) => {\n  let toAdd;\n  let toRemove;\n  if (isMain) {\n    toAdd = SPLIT_PANE_MAIN;\n    toRemove = SPLIT_PANE_SIDE;\n  }\n  else {\n    toAdd = SPLIT_PANE_SIDE;\n    toRemove = SPLIT_PANE_MAIN;\n  }\n  const classList = el.classList;\n  classList.add(toAdd);\n  classList.remove(toRemove);\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-split-pane\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-split-pane\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, SplitPane);\n      }\n      break;\n  } });\n}\n\nconst IonSplitPane = SplitPane;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonSplitPane, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}