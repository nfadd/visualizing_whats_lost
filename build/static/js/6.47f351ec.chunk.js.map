{"version":3,"sources":["../../../src/web.ts"],"names":[],"mappings":"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","file":"static/js/6.47f351ec.chunk.js","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\nexport class CameraPreviewWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: \"CameraPreview\",\n            platforms: [\"web\"],\n        });\n    }\n    async start(options) {\n        return new Promise(async (resolve, reject) => {\n            await navigator.mediaDevices.getUserMedia({\n                audio: !options.disableAudio,\n                video: true\n            }).then((stream) => {\n                // Stop any existing stream so we can request media with different constraints based on user input\n                stream.getTracks().forEach((track) => track.stop());\n            }).catch(error => {\n                reject(error);\n            });\n            const video = document.getElementById(\"video\");\n            const parent = document.getElementById(options.parent);\n            if (!video) {\n                const videoElement = document.createElement(\"video\");\n                videoElement.id = \"video\";\n                videoElement.setAttribute(\"class\", options.className || \"\");\n                // Don't flip video feed if camera is rear facing\n                if (options.position !== 'rear') {\n                    videoElement.setAttribute(\"style\", \"-webkit-transform: scaleX(-1); transform: scaleX(-1);\");\n                }\n                const userAgent = navigator.userAgent.toLowerCase();\n                const isSafari = userAgent.includes('safari') && !userAgent.includes('chrome');\n                // Safari on iOS needs to have the autoplay, muted and playsinline attributes set for video.play() to be successful\n                // Without these attributes videoElement.play() will throw a NotAllowedError\n                // https://developer.apple.com/documentation/webkit/delivering_video_content_for_safari\n                if (isSafari) {\n                    videoElement.setAttribute('autoplay', 'true');\n                    videoElement.setAttribute('muted', 'true');\n                    videoElement.setAttribute('playsinline', 'true');\n                }\n                parent.appendChild(videoElement);\n                if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n                    const constraints = {\n                        video: true,\n                    };\n                    if (options.position === 'rear') {\n                        constraints.video = { facingMode: 'environment' };\n                        this.isBackCamera = true;\n                    }\n                    else {\n                        this.isBackCamera = false;\n                    }\n                    navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n                        //video.src = window.URL.createObjectURL(stream);\n                        videoElement.srcObject = stream;\n                        videoElement.play();\n                        resolve({});\n                    }, (err) => {\n                        reject(err);\n                    });\n                }\n            }\n            else {\n                reject({ message: \"camera already started\" });\n            }\n        });\n    }\n    async stop() {\n        const video = document.getElementById(\"video\");\n        if (video) {\n            video.pause();\n            const st = video.srcObject;\n            const tracks = st.getTracks();\n            for (var i = 0; i < tracks.length; i++) {\n                var track = tracks[i];\n                track.stop();\n            }\n            video.remove();\n        }\n    }\n    async capture(_options) {\n        return new Promise((resolve, _) => {\n            const video = document.getElementById(\"video\");\n            const canvas = document.createElement(\"canvas\");\n            // video.width = video.offsetWidth;\n            const context = canvas.getContext(\"2d\");\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            // flip horizontally back camera isn't used\n            if (!this.isBackCamera) {\n                context.translate(video.videoWidth, 0);\n                context.scale(-1, 1);\n            }\n            context.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n            resolve({\n                value: canvas\n                    .toDataURL(\"image/png\")\n                    .replace(\"data:image/png;base64,\", \"\"),\n            });\n        });\n    }\n    async captureSample(_options) {\n        return this.capture(_options);\n    }\n    async getSupportedFlashModes() {\n        throw new Error('getSupportedFlashModes not supported under the web platform');\n    }\n    async setFlashMode(_options) {\n        throw new Error('setFlashMode not supported under the web platform');\n    }\n    async flip() {\n        throw new Error('flip not supported under the web platform');\n    }\n    async setOpacity(_options) {\n        const video = document.getElementById(\"video\");\n        if (!!video && !!_options['opacity']) {\n            video.style.setProperty(\"opacity\", _options['opacity'].toString());\n        }\n    }\n}\nconst CameraPreview = new CameraPreviewWeb();\nexport { CameraPreview };\nimport { registerWebPlugin } from \"@capacitor/core\";\nregisterWebPlugin(CameraPreview);\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}